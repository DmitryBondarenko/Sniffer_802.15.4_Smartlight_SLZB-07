
Output/Sniffer_802.15.4_SONOFF_USB_Dongle_Plus_E/Sniffer_802.15.4_SONOFF_USB_Dongle_Plus_E.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00009d59  00004000  00004000  00004000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0000dd5c  0000dd5c  0000dd5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         00000274  20000000  0000dd64  00010000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000be4  20000278  0000dfe0  00010278  2**3
                  ALLOC
  4 .heap         00000c00  20000e60  20000e60  00010278  2**3
                  CONTENTS
  5 .stack_dummy  00000400  20001a60  20001a60  00010e78  2**3
                  CONTENTS
  6 .debug_info   00016502  00000000  00000000  00011278  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_abbrev 000026e5  00000000  00000000  0002777a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_loc    000076d8  00000000  00000000  00029e5f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_aranges 00000718  00000000  00000000  00031537  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_ranges 000007f0  00000000  00000000  00031c4f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line   00008121  00000000  00000000  0003243f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_str    0000883b  00000000  00000000  0003a560  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .comment      00000096  00000000  00000000  00042d9b  2**0
                  CONTENTS, READONLY
 14 .ARM.attributes 0000003a  00000000  00000000  00042e31  2**0
                  CONTENTS, READONLY
 15 .debug_frame  0000130c  00000000  00000000  00042e6c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00004000 <__Vectors>:
    4000:	00 00 01 20 ad 65 00 00 a9 65 00 00 a9 65 00 00     ... .e...e...e..
    4010:	a9 65 00 00 a9 65 00 00 a9 65 00 00 a9 65 00 00     .e...e...e...e..
    4020:	a9 65 00 00 a9 65 00 00 a9 65 00 00 a9 65 00 00     .e...e...e...e..
    4030:	a9 65 00 00 f8 bd 00 00 a9 65 00 00 a9 65 00 00     .e.......e...e..
    4040:	a9 65 00 00 a9 65 00 00 a9 65 00 00 a9 65 00 00     .e...e...e...e..
    4050:	a9 65 00 00 a9 65 00 00 a9 65 00 00 a9 65 00 00     .e...e...e...e..
    4060:	a9 65 00 00 a9 65 00 00 a9 65 00 00 d5 69 00 00     .e...e...e...i..
    4070:	a9 65 00 00 a9 65 00 00 a9 65 00 00 a9 65 00 00     .e...e...e...e..
    4080:	a9 65 00 00 a9 65 00 00 a9 65 00 00 a9 65 00 00     .e...e...e...e..
    4090:	a9 65 00 00 a9 65 00 00 a9 65 00 00 a9 65 00 00     .e...e...e...e..
    40a0:	a9 65 00 00 a9 65 00 00 a9 65 00 00 a9 65 00 00     .e...e...e...e..
    40b0:	a9 65 00 00 a9 65 00 00 a9 65 00 00 09 b5 00 00     .e...e...e......
    40c0:	ad b4 00 00 a9 b4 00 00 61 ad 00 00 05 b5 00 00     ........a.......
    40d0:	b1 b4 00 00 c9 b4 00 00 b5 b4 00 00 41 9d 00 00     ............A...
    40e0:	49 b5 00 00 a9 65 00 00 a9 65 00 00 a9 65 00 00     I....e...e...e..
    40f0:	a9 65 00 00 a9 65 00 00 a9 65 00 00 a9 65 00 00     .e...e...e...e..
    4100:	a9 65 00 00 a9 65 00 00 a9 65 00 00 a9 65 00 00     .e...e...e...e..
    4110:	a9 65 00 00 a9 65 00 00 a9 65 00 00 a9 65 00 00     .e...e...e...e..
    4120:	a9 65 00 00 a9 65 00 00 a9 65 00 00 a9 65 00 00     .e...e...e...e..
    4130:	a9 65 00 00                                         .e..

00004134 <main>:
 ******************************************************************************/
/***************************************************************************//**
 * Global functions
 ******************************************************************************/
int main(void)
{
    4134:	b508      	push	{r3, lr}
    //Init Hardware
    BSP_Init();
    4136:	f002 fc5f 	bl	69f8 <BSP_Init>

    //Init Components
    //Build CRC table
    crcInit();
    413a:	f001 fb05 	bl	5748 <crcInit>

    //Should be mac enable promiscuous mode
    //MAC_EnablePromiscuousMode();
    HAL_Radio_InitPromiscuousMode();
    413e:	f002 fb3b 	bl	67b8 <HAL_Radio_InitPromiscuousMode>
    // printf("Hello World!");

    //loop forever
    while(1){
        // HAL_Console_Tx_Byte('E');
        PHY_Task();
    4142:	f000 f808 	bl	4156 <PHY_Task>
        Console_Process_Rx();
    4146:	f000 fd5d 	bl	4c04 <Console_Process_Rx>
    while(1){
    414a:	e7fa      	b.n	4142 <main+0xe>

0000414c <Mac_RxMsgCallbackPreprocessPhyRx>:
\brief Override normal processing done by the MAC layer
returning true will end frame process
returning false normal processing is performed
******************************************************************************/
bool Mac_RxMsgCallbackPreprocessPhyRx( PhyRx_t * phy_rx )
{
    414c:	b508      	push	{r3, lr}
    Console_PhyToJSONV2( phy_rx );
    414e:	f000 fd77 	bl	4c40 <Console_PhyToJSONV2>
    return true;
}
    4152:	2001      	movs	r0, #1
    4154:	bd08      	pop	{r3, pc}

00004156 <PHY_Task>:
/**************************************************************************//**
\brief Phy task
    Retreive received messages and pass to MAC layer
******************************************************************************/
void PHY_Task( void )
{
    4156:	b500      	push	{lr}
    4158:	b0a3      	sub	sp, #140	; 0x8c
    PhyRx_t phy_rx;

    //Retreive and process radio packets
    if( HAL_Radio_GetRxPacket( &phy_rx ) == HAL_RADIO_GET_RX_PACKET_SUCCESS )
    415a:	a801      	add	r0, sp, #4
    415c:	f002 fb6e 	bl	683c <HAL_Radio_GetRxPacket>
    4160:	b110      	cbz	r0, 4168 <PHY_Task+0x12>
    {
        MAC_ProcessPhyRx( &phy_rx );
    }
}
    4162:	b023      	add	sp, #140	; 0x8c
    4164:	f85d fb04 	ldr.w	pc, [sp], #4
        MAC_ProcessPhyRx( &phy_rx );
    4168:	a801      	add	r0, sp, #4
    416a:	f000 f805 	bl	4178 <MAC_ProcessPhyRx>
}
    416e:	e7f8      	b.n	4162 <PHY_Task+0xc>

00004170 <Mac_RxMsgCallbackPreprocessMacUnpacked>:
******************************************************************************/
bool __attribute__((weak)) Mac_RxMsgCallbackPreprocessMacUnpacked( MAC_Frame_Unpacked_t * out )
{
    (void) out;
    return false;
}
    4170:	2000      	movs	r0, #0
    4172:	4770      	bx	lr

00004174 <Mac_RxMsgCallbackPostprocessMacUnpacked>:
******************************************************************************/
bool __attribute__((weak)) Mac_RxMsgCallbackPostprocessMacUnpacked( MAC_Frame_Unpacked_t * out )
{
    (void) out;
    return false;
}
    4174:	2000      	movs	r0, #0
    4176:	4770      	bx	lr

00004178 <MAC_ProcessPhyRx>:
    if( phy_rx == NULL )
    4178:	b318      	cbz	r0, 41c2 <MAC_ProcessPhyRx+0x4a>
{
    417a:	b510      	push	{r4, lr}
    417c:	b0ce      	sub	sp, #312	; 0x138
    417e:	4604      	mov	r4, r0
    if( Mac_RxMsgCallbackPreprocessPhyRx( phy_rx ) )
    4180:	f7ff ffe4 	bl	414c <Mac_RxMsgCallbackPreprocessPhyRx>
    4184:	b980      	cbnz	r0, 41a8 <MAC_ProcessPhyRx+0x30>
    in.lenght = phy_rx->len;
    4186:	4621      	mov	r1, r4
    4188:	f811 2b01 	ldrb.w	r2, [r1], #1
    418c:	f88d 20b4 	strb.w	r2, [sp, #180]	; 0xb4
    memcpy( in.payload, phy_rx->payload, ( in.lenght < PHY_PAYLOAD_MAX ) ? in.lenght :  PHY_PAYLOAD_MAX );
    4190:	f012 0f80 	tst.w	r2, #128	; 0x80
    4194:	d10a      	bne.n	41ac <MAC_ProcessPhyRx+0x34>
    4196:	f10d 00b5 	add.w	r0, sp, #181	; 0xb5
    419a:	f007 fc93 	bl	bac4 <memcpy>
    result = MAC_Unpack( &in, &out );
    419e:	4669      	mov	r1, sp
    41a0:	a82d      	add	r0, sp, #180	; 0xb4
    41a2:	f000 f80f 	bl	41c4 <MAC_Unpack>
    if( result != MAC_UNPACK_SUCCESS )
    41a6:	b118      	cbz	r0, 41b0 <MAC_ProcessPhyRx+0x38>
}
    41a8:	b04e      	add	sp, #312	; 0x138
    41aa:	bd10      	pop	{r4, pc}
    memcpy( in.payload, phy_rx->payload, ( in.lenght < PHY_PAYLOAD_MAX ) ? in.lenght :  PHY_PAYLOAD_MAX );
    41ac:	2280      	movs	r2, #128	; 0x80
    41ae:	e7f2      	b.n	4196 <MAC_ProcessPhyRx+0x1e>
    if( Mac_RxMsgCallbackPreprocessMacUnpacked( &out ) )
    41b0:	4668      	mov	r0, sp
    41b2:	f7ff ffdd 	bl	4170 <Mac_RxMsgCallbackPreprocessMacUnpacked>
    41b6:	2800      	cmp	r0, #0
    41b8:	d1f6      	bne.n	41a8 <MAC_ProcessPhyRx+0x30>
    if( Mac_RxMsgCallbackPostprocessMacUnpacked( &out) )
    41ba:	4668      	mov	r0, sp
    41bc:	f7ff ffda 	bl	4174 <Mac_RxMsgCallbackPostprocessMacUnpacked>
    41c0:	e7f2      	b.n	41a8 <MAC_ProcessPhyRx+0x30>
    41c2:	4770      	bx	lr

000041c4 <MAC_Unpack>:
******************************************************************************/
/**************************************************************************//**
\brief Unpack a MAC frame
******************************************************************************/
MAC_Unpack_Result_t MAC_Unpack( MAC_Frame_packed_t * in, MAC_Frame_Unpacked_t * out)
{
    41c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    uint8_t index = 0;
    bool destination_panid_present = false;
    bool source_panid_present = false;


    if( (in == NULL) ||
    41c8:	2800      	cmp	r0, #0
    41ca:	f000 8167 	beq.w	449c <MAC_Unpack+0x2d8>
    41ce:	460c      	mov	r4, r1
    41d0:	4605      	mov	r5, r0
    41d2:	2900      	cmp	r1, #0
    41d4:	f000 8164 	beq.w	44a0 <MAC_Unpack+0x2dc>
    {
        return MAC_UNPACK_PARAMETER_ERROR;
    }

    //Minimum frame size is frame control
    if( in->lenght < MHR_FRAME_CONTROL_SIZE )
    41d8:	7803      	ldrb	r3, [r0, #0]
    41da:	2b01      	cmp	r3, #1
    41dc:	f240 8162 	bls.w	44a4 <MAC_Unpack+0x2e0>
    {
        return MAC_UNPACK_FRAME_SIZE_ERROR;
    }

    memset( out, 0, sizeof(MAC_Frame_Unpacked_t));
    41e0:	22b0      	movs	r2, #176	; 0xb0
    41e2:	2100      	movs	r1, #0
    41e4:	4620      	mov	r0, r4
    41e6:	f007 fc7a 	bl	bade <memset>

    //Extract frame control and adjust endianness to host
    frame_control = in->payload[index++];
    41ea:	786a      	ldrb	r2, [r5, #1]
    frame_control |= (((uint16_t) in->payload[index++]) << 8);
    41ec:	78ab      	ldrb	r3, [r5, #2]
    41ee:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
    41f2:	4613      	mov	r3, r2

    //Parse frame control
    out->frame_control.frame_Type                   = ((frame_control & MHR_FRAMECONTROL_FRAME_TYPE_MSK) >> MHR_FRAMECONTROL_FRAME_TYPE_SHFT);
    41f4:	f002 0207 	and.w	r2, r2, #7
    41f8:	7022      	strb	r2, [r4, #0]
    out->frame_control.security_enabled             = ((frame_control & MHR_FRAMECONTROL_SECURITY_ENABLED_MSK) == MHR_FRAMECONTROL_SECURITY_ENABLED) ? MAC_SECURITY_ENABLED : MAC_SECURITY_DISABLED;
    41fa:	f3c3 07c0 	ubfx	r7, r3, #3, #1
    41fe:	7067      	strb	r7, [r4, #1]
    out->frame_control.frame_pending                = ((frame_control & MHR_FRAMECONTROL_FRAME_PENDING_MSK) == MHR_FRAMECONTROL_FRAME_PENDING) ? MAC_FRAME_PENDING_DATA_PENDING : MAC_FRAME_PENDING_NONE;
    4200:	f3c3 1100 	ubfx	r1, r3, #4, #1
    4204:	70a1      	strb	r1, [r4, #2]
    out->frame_control.acknowledge_request          = ((frame_control & MHR_FRAMECONTROL_AR_MSK) == MHR_FRAMECONTROL_AR) ? MAC_ACKNOWLEDGE_REQUEST_REQUIRED : MAC_ACKNOWLEDGE_REQUEST_NONE;
    4206:	f3c3 1140 	ubfx	r1, r3, #5, #1
    420a:	70e1      	strb	r1, [r4, #3]
    out->frame_control.panid_compression            = ((frame_control & MHR_FRAMECONTROL_PANID_COMPRESSION_MSK) == MHR_FRAMECONTROL_PANID_COMPRESSION) ? MAC_PANID_COMPRESSION_ENABLED : MAC_PANID_COMPRESSION_DISABLED;
    420c:	f3c3 1c80 	ubfx	ip, r3, #6, #1
    4210:	f884 c004 	strb.w	ip, [r4, #4]
    out->frame_control.sequence_number_suppressed   = ((frame_control & MHR_FRAMECONTROL_SEQUENCE_NUMBER_SUPPRESSION_MSK) == MHR_FRAMECONTROL_SEQUENCE_NUMBER_SUPPRESSION) ? MAC_SEQUENCE_NUMBER_SUPPRESSION_ENABLED : MAC_SEQUENCE_NUMBER_SUPPRESSION_DISABLED;
    4214:	f3c3 2e00 	ubfx	lr, r3, #8, #1
    4218:	f884 e005 	strb.w	lr, [r4, #5]
    out->frame_control.ie_present                   = ((frame_control & MHR_FRAMECONTROL_IE_PRESENT_MSK) == MHR_FRAMECONTROL_IE_PRESENT) ? MAC_IE_PRESENT_PRESENT : MAC_IE_PRESENT_NOT_PRESENT;
    421c:	f3c3 2640 	ubfx	r6, r3, #9, #1
    4220:	71a6      	strb	r6, [r4, #6]
    out->frame_control.destination_addressing_mode  = ((frame_control & MHR_FRAMECONTROL_DST_ADDR_MODE_MSK) >> MHR_FRAMECONTROL_DST_ADDR_MODE_SHFT);
    4222:	f3c3 2181 	ubfx	r1, r3, #10, #2
    4226:	71e1      	strb	r1, [r4, #7]
    out->frame_control.source_addressing_mode       = ((frame_control & MHR_FRAMECONTROL_SRC_ADDR_MODE_MSK) >> MHR_FRAMECONTROL_SRC_ADDR_MODE_SHFT);
    4228:	0b98      	lsrs	r0, r3, #14
    422a:	7260      	strb	r0, [r4, #9]
    out->frame_control.frame_version                = ((frame_control & MHR_FRAMECONTROL_FRAME_VERSION_MSK) >> MHR_FRAMECONTROL_FRAME_VERSION_SHFT);
    422c:	f3c3 3301 	ubfx	r3, r3, #12, #2
    4230:	7223      	strb	r3, [r4, #8]

    //Frame version 0b11 is unsupported
    if( out->frame_control.frame_version == MAC_FRAME_VERSION_11 )
    4232:	2b03      	cmp	r3, #3
    4234:	f000 813a 	beq.w	44ac <MAC_Unpack+0x2e8>
    {
        return MAC_UNPACK_INVALID_FRAME_VERSION;
    }

    //Reserved, multipurpose, fragment, extended currently not supported
    switch( out->frame_control.frame_Type )
    4238:	3a04      	subs	r2, #4
    423a:	2a03      	cmp	r2, #3
    423c:	f240 8138 	bls.w	44b0 <MAC_Unpack+0x2ec>
            return MAC_UNPACK_UNSUPPORTED_FRAME_TYPE;
        default:
            break;
    }

    if( out->frame_control.destination_addressing_mode == MAC_ADDRESSING_MODE_RESERVED )
    4240:	2901      	cmp	r1, #1
    4242:	f000 8137 	beq.w	44b4 <MAC_Unpack+0x2f0>
    {
        return MAC_UNPACK_INVALID_ADDRESSING_MODE;
    }

    if( out->frame_control.source_addressing_mode == MAC_ADDRESSING_MODE_RESERVED )
    4246:	2801      	cmp	r0, #1
    4248:	f000 8136 	beq.w	44b8 <MAC_Unpack+0x2f4>
    {
        return MAC_UNPACK_INVALID_ADDRESSING_MODE;
    }

    if( out->frame_control.security_enabled )
    424c:	2f00      	cmp	r7, #0
    424e:	f040 8135 	bne.w	44bc <MAC_Unpack+0x2f8>
    {
        return MAC_UNPACK_UNSUPPORTED_FEATURE;
    }

    if( out->frame_control.ie_present )
    4252:	2e00      	cmp	r6, #0
    4254:	f040 8134 	bne.w	44c0 <MAC_Unpack+0x2fc>
        return MAC_UNPACK_UNSUPPORTED_FEATURE;
    }


    //sequence number present
    if( out->frame_control.sequence_number_suppressed == 0 )
    4258:	f1be 0f00 	cmp.w	lr, #0
    425c:	d107      	bne.n	426e <MAC_Unpack+0xaa>
    {
        if( in->lenght < (index + 1) )
    425e:	782a      	ldrb	r2, [r5, #0]
    4260:	2a02      	cmp	r2, #2
    4262:	f240 812f 	bls.w	44c4 <MAC_Unpack+0x300>
        {
            return MAC_UNPACK_FRAME_SIZE_ERROR;
        }
        out->sequence_number = in->payload[index++];
    4266:	78ea      	ldrb	r2, [r5, #3]
    4268:	72a2      	strb	r2, [r4, #10]
    426a:	2703      	movs	r7, #3
    426c:	e000      	b.n	4270 <MAC_Unpack+0xac>
    frame_control |= (((uint16_t) in->payload[index++]) << 8);
    426e:	2702      	movs	r7, #2
    }

    //PAN ID compression
    //Frame version 0b00 or 0b01
    if( (out->frame_control.frame_version == MAC_FRAME_VERSION_00) ||
    4270:	2b01      	cmp	r3, #1
    4272:	d967      	bls.n	4344 <MAC_Unpack+0x180>
    bool source_panid_present = false;
    4274:	f04f 0800 	mov.w	r8, #0
    bool destination_panid_present = false;
    4278:	46c6      	mov	lr, r8
            source_panid_present = false;
        }
    }

    //frame version 0b10
    if( (out->frame_control.frame_version == MAC_FRAME_VERSION_10))
    427a:	2b02      	cmp	r3, #2
    427c:	f000 80ab 	beq.w	43d6 <MAC_Unpack+0x212>
            }
        }
    }

    //Destination PANID
    if( destination_panid_present )
    4280:	f1be 0f00 	cmp.w	lr, #0
    4284:	d00f      	beq.n	42a6 <MAC_Unpack+0xe2>
    {
        if( in->lenght < (index + 2) )
    4286:	1c7b      	adds	r3, r7, #1
    4288:	782a      	ldrb	r2, [r5, #0]
    428a:	4293      	cmp	r3, r2
    428c:	f280 811c 	bge.w	44c8 <MAC_Unpack+0x304>
        {
            return MAC_UNPACK_FRAME_SIZE_ERROR;
        }
        out->destination_pan_id = in->payload[index++];
    4290:	19ea      	adds	r2, r5, r7
    4292:	7852      	ldrb	r2, [r2, #1]
    4294:	81a2      	strh	r2, [r4, #12]
        out->destination_pan_id |= (((uint16_t) in->payload[index++]) << 8);
    4296:	3702      	adds	r7, #2
    4298:	b2ff      	uxtb	r7, r7
    429a:	fa55 f383 	uxtab	r3, r5, r3
    429e:	785b      	ldrb	r3, [r3, #1]
    42a0:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
    42a4:	81a2      	strh	r2, [r4, #12]
    }

    //Destination address - Short
    if( out->frame_control.destination_addressing_mode == MAC_ADDRESSING_MODE_SHORT_ADDRESS )
    42a6:	2902      	cmp	r1, #2
    42a8:	f000 8097 	beq.w	43da <MAC_Unpack+0x216>
        out->destination_addr.short_addr = in->payload[index++];
        out->destination_addr.short_addr |= (((uint16_t) in->payload[index++]) << 8);
    }

    //Destination address - Extended
    if( out->frame_control.destination_addressing_mode == MAC_ADDRESSING_MODE_EXTENDED_ADDRESS )
    42ac:	2903      	cmp	r1, #3
    42ae:	f000 80a4 	beq.w	43fa <MAC_Unpack+0x236>
        memcpyLE( out->destination_addr.ext_addr, &in->payload[index], MAC_EXTENDED_ADDR_SIZE );
        index += MAC_EXTENDED_ADDR_SIZE;
    }

    //Source PANID
    if( source_panid_present )
    42b2:	f1b8 0f00 	cmp.w	r8, #0
    42b6:	d00f      	beq.n	42d8 <MAC_Unpack+0x114>
    {
        if( in->lenght < (index + 2) )
    42b8:	1c7b      	adds	r3, r7, #1
    42ba:	782a      	ldrb	r2, [r5, #0]
    42bc:	4293      	cmp	r3, r2
    42be:	f280 8109 	bge.w	44d4 <MAC_Unpack+0x310>
        {
            return MAC_UNPACK_FRAME_SIZE_ERROR;
        }
        out->source_pan_id = in->payload[index++];
    42c2:	19ea      	adds	r2, r5, r7
    42c4:	7852      	ldrb	r2, [r2, #1]
    42c6:	8322      	strh	r2, [r4, #24]
        out->source_pan_id |= (((uint16_t) in->payload[index++]) << 8);
    42c8:	3702      	adds	r7, #2
    42ca:	b2ff      	uxtb	r7, r7
    42cc:	fa55 f383 	uxtab	r3, r5, r3
    42d0:	785b      	ldrb	r3, [r3, #1]
    42d2:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
    42d6:	8322      	strh	r2, [r4, #24]
    }

    //Source address - Short
    if( out->frame_control.source_addressing_mode == MAC_ADDRESSING_MODE_SHORT_ADDRESS )
    42d8:	7a63      	ldrb	r3, [r4, #9]
    42da:	2b02      	cmp	r3, #2
    42dc:	f000 809b 	beq.w	4416 <MAC_Unpack+0x252>
        out->source_addr.short_addr = in->payload[index++];
        out->source_addr.short_addr |= (((uint16_t) in->payload[index++]) << 8);
    }

    //Source address - Extended
    if( out->frame_control.source_addressing_mode == MAC_ADDRESSING_MODE_EXTENDED_ADDRESS )
    42e0:	2b03      	cmp	r3, #3
    42e2:	f000 80a8 	beq.w	4436 <MAC_Unpack+0x272>
        index += MAC_EXTENDED_ADDR_SIZE;
    }

    //Particular cases - 7.2.1.8 - Destination Addressing Mode field
    //Particular cases - 7.2.1.10 - Source Addressing Mode field
    if( (out->frame_control.frame_version == MAC_FRAME_VERSION_00) ||
    42e6:	7a23      	ldrb	r3, [r4, #8]
    42e8:	2b01      	cmp	r3, #1
    42ea:	f240 80b2 	bls.w	4452 <MAC_Unpack+0x28e>

    //IE - not supported for now
    //if( out->frame_control.ie_present )

    //copy payload content
    if( in->lenght > (index + MAC_FCS_SIZE) )
    42ee:	782b      	ldrb	r3, [r5, #0]
    42f0:	4639      	mov	r1, r7
    42f2:	1cba      	adds	r2, r7, #2
    42f4:	4293      	cmp	r3, r2
    42f6:	dd11      	ble.n	431c <MAC_Unpack+0x158>
    {
        out->payload_size = in->lenght - (index + MAC_FCS_SIZE);
    42f8:	1bda      	subs	r2, r3, r7
    42fa:	3a02      	subs	r2, #2
    42fc:	b2d2      	uxtb	r2, r2
    42fe:	f884 20a8 	strb.w	r2, [r4, #168]	; 0xa8
        if( out->payload_size > MAC_MAX_PAYLOAD )
    4302:	2a80      	cmp	r2, #128	; 0x80
    4304:	f200 80f0 	bhi.w	44e8 <MAC_Unpack+0x324>
        {
            return MAC_UNPACK_FRAME_SIZE_ERROR;
        }
        //Do not change endianness at this point
        memcpy(out->payload, &in->payload[index], out->payload_size);
    4308:	4429      	add	r1, r5
    430a:	3101      	adds	r1, #1
    430c:	f104 0028 	add.w	r0, r4, #40	; 0x28
    4310:	f007 fbd8 	bl	bac4 <memcpy>
        index += out->payload_size;
    4314:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
    4318:	441f      	add	r7, r3
    431a:	b2ff      	uxtb	r7, r7

    //FCS - 16 bit
    uint16_t crc_calc;
    uint16_t crc_rcv;

    crc_calc = crcFast( in->payload, (in->lenght - MAC_FCS_SIZE) );
    431c:	4628      	mov	r0, r5
    431e:	f810 1b01 	ldrb.w	r1, [r0], #1
    4322:	3902      	subs	r1, #2
    4324:	f001 fa2e 	bl	5784 <crcFast>
    crc_rcv = in->payload[index++];
    4328:	1c7a      	adds	r2, r7, #1
    432a:	442f      	add	r7, r5
    432c:	787b      	ldrb	r3, [r7, #1]
    crc_rcv |= (((uint16_t) in->payload[index++]) << 8);
    432e:	fa55 f582 	uxtab	r5, r5, r2
    4332:	786a      	ldrb	r2, [r5, #1]
    4334:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
    if( crc_rcv != crc_calc )
    4338:	4298      	cmp	r0, r3
    433a:	f040 80d7 	bne.w	44ec <MAC_Unpack+0x328>
    {
        return MAC_UNPACK_FCS_DOES_NOT_MATCH;
    }
    out->fcs.fcs_2_octets = crc_rcv;
    433e:	f8a4 30ac 	strh.w	r3, [r4, #172]	; 0xac

    return MAC_UNPACK_SUCCESS;
    4342:	e0b0      	b.n	44a6 <MAC_Unpack+0x2e2>
        if((out->frame_control.destination_addressing_mode == MAC_ADDRESSING_MODE_SHORT_ADDRESS) ||
    4344:	1e8a      	subs	r2, r1, #2
    4346:	b2d2      	uxtb	r2, r2
    4348:	2a01      	cmp	r2, #1
    434a:	d913      	bls.n	4374 <MAC_Unpack+0x1b0>
    bool destination_panid_present = false;
    434c:	f04f 0e00 	mov.w	lr, #0
        if((out->frame_control.source_addressing_mode == MAC_ADDRESSING_MODE_SHORT_ADDRESS) ||
    4350:	1e82      	subs	r2, r0, #2
    4352:	b2d2      	uxtb	r2, r2
    4354:	2a01      	cmp	r2, #1
    4356:	d910      	bls.n	437a <MAC_Unpack+0x1b6>
    bool source_panid_present = false;
    4358:	f04f 0800 	mov.w	r8, #0
        if( destination_panid_present && source_panid_present && out->frame_control.panid_compression )
    435c:	f1be 0f00 	cmp.w	lr, #0
    4360:	d08b      	beq.n	427a <MAC_Unpack+0xb6>
    4362:	f1b8 0f00 	cmp.w	r8, #0
    4366:	d088      	beq.n	427a <MAC_Unpack+0xb6>
    4368:	f1bc 0f00 	cmp.w	ip, #0
    436c:	d085      	beq.n	427a <MAC_Unpack+0xb6>
            source_panid_present = false;
    436e:	f04f 0800 	mov.w	r8, #0
    4372:	e782      	b.n	427a <MAC_Unpack+0xb6>
            destination_panid_present = true;
    4374:	f04f 0e01 	mov.w	lr, #1
    4378:	e7ea      	b.n	4350 <MAC_Unpack+0x18c>
            source_panid_present = true;
    437a:	f04f 0801 	mov.w	r8, #1
    437e:	e7ed      	b.n	435c <MAC_Unpack+0x198>
        for( uint8_t i = 0; i < NB_OF_ELEMENT_PANID_COMPRESSION_0b10; i++ )
    4380:	3301      	adds	r3, #1
    4382:	b2db      	uxtb	r3, r3
    4384:	2b11      	cmp	r3, #17
    4386:	f63f af7b 	bhi.w	4280 <MAC_Unpack+0xbc>
            if( ( out->frame_control.destination_addressing_mode    == TABLE7_2_PANID_Compression[i].destination_address ) &&
    438a:	eb03 0283 	add.w	r2, r3, r3, lsl #2
    438e:	f8df a160 	ldr.w	sl, [pc, #352]	; 44f0 <MAC_Unpack+0x32c>
    4392:	f81a 2002 	ldrb.w	r2, [sl, r2]
    4396:	4291      	cmp	r1, r2
    4398:	d1f2      	bne.n	4380 <MAC_Unpack+0x1bc>
                ( out->frame_control.source_addressing_mode         == TABLE7_2_PANID_Compression[i].source_address ) &&
    439a:	eb03 0a83 	add.w	sl, r3, r3, lsl #2
    439e:	4a54      	ldr	r2, [pc, #336]	; (44f0 <MAC_Unpack+0x32c>)
    43a0:	4452      	add	r2, sl
    43a2:	7852      	ldrb	r2, [r2, #1]
            if( ( out->frame_control.destination_addressing_mode    == TABLE7_2_PANID_Compression[i].destination_address ) &&
    43a4:	4290      	cmp	r0, r2
    43a6:	d1eb      	bne.n	4380 <MAC_Unpack+0x1bc>
                ( out->frame_control.panid_compression              == TABLE7_2_PANID_Compression[i].PanID_compression ) )
    43a8:	4a51      	ldr	r2, [pc, #324]	; (44f0 <MAC_Unpack+0x32c>)
    43aa:	4452      	add	r2, sl
    43ac:	7912      	ldrb	r2, [r2, #4]
                ( out->frame_control.source_addressing_mode         == TABLE7_2_PANID_Compression[i].source_address ) &&
    43ae:	4594      	cmp	ip, r2
    43b0:	d1e6      	bne.n	4380 <MAC_Unpack+0x1bc>
                destination_panid_present = TABLE7_2_PANID_Compression[i].dest_panid_present;
    43b2:	46d1      	mov	r9, sl
    43b4:	4a4e      	ldr	r2, [pc, #312]	; (44f0 <MAC_Unpack+0x32c>)
    43b6:	4491      	add	r9, r2
    43b8:	f899 e002 	ldrb.w	lr, [r9, #2]
    43bc:	f1be 0e00 	subs.w	lr, lr, #0
    43c0:	bf18      	it	ne
    43c2:	f04f 0e01 	movne.w	lr, #1
                source_panid_present = TABLE7_2_PANID_Compression[i].source_panid_present;
    43c6:	f899 8003 	ldrb.w	r8, [r9, #3]
    43ca:	f1b8 0800 	subs.w	r8, r8, #0
    43ce:	bf18      	it	ne
    43d0:	f04f 0801 	movne.w	r8, #1
    43d4:	e7d4      	b.n	4380 <MAC_Unpack+0x1bc>
        for( uint8_t i = 0; i < NB_OF_ELEMENT_PANID_COMPRESSION_0b10; i++ )
    43d6:	4633      	mov	r3, r6
    43d8:	e7d4      	b.n	4384 <MAC_Unpack+0x1c0>
        if( in->lenght < (index + 2) )
    43da:	1c7b      	adds	r3, r7, #1
    43dc:	782a      	ldrb	r2, [r5, #0]
    43de:	4293      	cmp	r3, r2
    43e0:	da74      	bge.n	44cc <MAC_Unpack+0x308>
        out->destination_addr.short_addr = in->payload[index++];
    43e2:	19ea      	adds	r2, r5, r7
    43e4:	7852      	ldrb	r2, [r2, #1]
    43e6:	8222      	strh	r2, [r4, #16]
        out->destination_addr.short_addr |= (((uint16_t) in->payload[index++]) << 8);
    43e8:	3702      	adds	r7, #2
    43ea:	b2ff      	uxtb	r7, r7
    43ec:	fa55 f383 	uxtab	r3, r5, r3
    43f0:	785b      	ldrb	r3, [r3, #1]
    43f2:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
    43f6:	8222      	strh	r2, [r4, #16]
    43f8:	e758      	b.n	42ac <MAC_Unpack+0xe8>
        if( in->lenght < (index + MAC_EXTENDED_ADDR_SIZE) )
    43fa:	1dfb      	adds	r3, r7, #7
    43fc:	782a      	ldrb	r2, [r5, #0]
    43fe:	4293      	cmp	r3, r2
    4400:	da66      	bge.n	44d0 <MAC_Unpack+0x30c>
        memcpyLE( out->destination_addr.ext_addr, &in->payload[index], MAC_EXTENDED_ADDR_SIZE );
    4402:	19e9      	adds	r1, r5, r7
    4404:	2208      	movs	r2, #8
    4406:	3101      	adds	r1, #1
    4408:	f104 0010 	add.w	r0, r4, #16
    440c:	f007 fb5a 	bl	bac4 <memcpy>
        index += MAC_EXTENDED_ADDR_SIZE;
    4410:	3708      	adds	r7, #8
    4412:	b2ff      	uxtb	r7, r7
    4414:	e74d      	b.n	42b2 <MAC_Unpack+0xee>
       if( in->lenght < (index + 2) )
    4416:	1c7a      	adds	r2, r7, #1
    4418:	7829      	ldrb	r1, [r5, #0]
    441a:	428a      	cmp	r2, r1
    441c:	da5c      	bge.n	44d8 <MAC_Unpack+0x314>
        out->source_addr.short_addr = in->payload[index++];
    441e:	19e9      	adds	r1, r5, r7
    4420:	7849      	ldrb	r1, [r1, #1]
    4422:	8421      	strh	r1, [r4, #32]
        out->source_addr.short_addr |= (((uint16_t) in->payload[index++]) << 8);
    4424:	3702      	adds	r7, #2
    4426:	b2ff      	uxtb	r7, r7
    4428:	fa55 f282 	uxtab	r2, r5, r2
    442c:	7852      	ldrb	r2, [r2, #1]
    442e:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
    4432:	8421      	strh	r1, [r4, #32]
    4434:	e754      	b.n	42e0 <MAC_Unpack+0x11c>
        if( in->lenght < (index + MAC_EXTENDED_ADDR_SIZE) )
    4436:	1dfb      	adds	r3, r7, #7
    4438:	782a      	ldrb	r2, [r5, #0]
    443a:	4293      	cmp	r3, r2
    443c:	da4e      	bge.n	44dc <MAC_Unpack+0x318>
        memcpyLE( out->source_addr.ext_addr, &in->payload[index], MAC_EXTENDED_ADDR_SIZE );
    443e:	19e9      	adds	r1, r5, r7
    4440:	2208      	movs	r2, #8
    4442:	3101      	adds	r1, #1
    4444:	f104 0020 	add.w	r0, r4, #32
    4448:	f007 fb3c 	bl	bac4 <memcpy>
        index += MAC_EXTENDED_ADDR_SIZE;
    444c:	3708      	adds	r7, #8
    444e:	b2ff      	uxtb	r7, r7
    4450:	e749      	b.n	42e6 <MAC_Unpack+0x122>
        if( ( out->frame_control.destination_addressing_mode == MAC_ADDRESSING_MODE_NONE ) &&
    4452:	79e3      	ldrb	r3, [r4, #7]
    4454:	b923      	cbnz	r3, 4460 <MAC_Unpack+0x29c>
            ( ( out->frame_control.frame_Type == MAC_FRAME_TYPE_DATA) || ( out->frame_control.frame_Type == MAC_FRAME_TYPE_COMMAND ))
    4456:	7823      	ldrb	r3, [r4, #0]
        if( ( out->frame_control.destination_addressing_mode == MAC_ADDRESSING_MODE_NONE ) &&
    4458:	2b01      	cmp	r3, #1
    445a:	d015      	beq.n	4488 <MAC_Unpack+0x2c4>
            ( ( out->frame_control.frame_Type == MAC_FRAME_TYPE_DATA) || ( out->frame_control.frame_Type == MAC_FRAME_TYPE_COMMAND ))
    445c:	2b03      	cmp	r3, #3
    445e:	d013      	beq.n	4488 <MAC_Unpack+0x2c4>
        if( ( out->frame_control.source_addressing_mode == MAC_ADDRESSING_MODE_NONE ) &&
    4460:	7a63      	ldrb	r3, [r4, #9]
    4462:	2b00      	cmp	r3, #0
    4464:	f47f af43 	bne.w	42ee <MAC_Unpack+0x12a>
            ( ( out->frame_control.frame_Type == MAC_FRAME_TYPE_DATA) || ( out->frame_control.frame_Type == MAC_FRAME_TYPE_COMMAND ))
    4468:	7823      	ldrb	r3, [r4, #0]
        if( ( out->frame_control.source_addressing_mode == MAC_ADDRESSING_MODE_NONE ) &&
    446a:	2b01      	cmp	r3, #1
    446c:	d002      	beq.n	4474 <MAC_Unpack+0x2b0>
            ( ( out->frame_control.frame_Type == MAC_FRAME_TYPE_DATA) || ( out->frame_control.frame_Type == MAC_FRAME_TYPE_COMMAND ))
    446e:	2b03      	cmp	r3, #3
    4470:	f47f af3d 	bne.w	42ee <MAC_Unpack+0x12a>
            if( out->frame_control.destination_addressing_mode == MAC_ADDRESSING_MODE_NONE )
    4474:	79e3      	ldrb	r3, [r4, #7]
    4476:	b3ab      	cbz	r3, 44e4 <MAC_Unpack+0x320>
            memcpy( &out->source_pan_id, &out->destination_pan_id, sizeof( out->destination_pan_id ));
    4478:	2202      	movs	r2, #2
    447a:	f104 010c 	add.w	r1, r4, #12
    447e:	f104 0018 	add.w	r0, r4, #24
    4482:	f007 fb1f 	bl	bac4 <memcpy>
    4486:	e732      	b.n	42ee <MAC_Unpack+0x12a>
            if( out->frame_control.source_addressing_mode == MAC_ADDRESSING_MODE_NONE )
    4488:	7a63      	ldrb	r3, [r4, #9]
    448a:	b34b      	cbz	r3, 44e0 <MAC_Unpack+0x31c>
            memcpy( &out->destination_pan_id, &out->source_pan_id, sizeof( out->source_pan_id ));
    448c:	2202      	movs	r2, #2
    448e:	f104 0118 	add.w	r1, r4, #24
    4492:	f104 000c 	add.w	r0, r4, #12
    4496:	f007 fb15 	bl	bac4 <memcpy>
    449a:	e7e1      	b.n	4460 <MAC_Unpack+0x29c>
        return MAC_UNPACK_PARAMETER_ERROR;
    449c:	2601      	movs	r6, #1
    449e:	e002      	b.n	44a6 <MAC_Unpack+0x2e2>
    44a0:	2601      	movs	r6, #1
    44a2:	e000      	b.n	44a6 <MAC_Unpack+0x2e2>
        return MAC_UNPACK_FRAME_SIZE_ERROR;
    44a4:	2602      	movs	r6, #2
}
    44a6:	4630      	mov	r0, r6
    44a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        return MAC_UNPACK_INVALID_FRAME_VERSION;
    44ac:	2605      	movs	r6, #5
    44ae:	e7fa      	b.n	44a6 <MAC_Unpack+0x2e2>
            return MAC_UNPACK_UNSUPPORTED_FRAME_TYPE;
    44b0:	2606      	movs	r6, #6
    44b2:	e7f8      	b.n	44a6 <MAC_Unpack+0x2e2>
        return MAC_UNPACK_INVALID_ADDRESSING_MODE;
    44b4:	2604      	movs	r6, #4
    44b6:	e7f6      	b.n	44a6 <MAC_Unpack+0x2e2>
        return MAC_UNPACK_INVALID_ADDRESSING_MODE;
    44b8:	2604      	movs	r6, #4
    44ba:	e7f4      	b.n	44a6 <MAC_Unpack+0x2e2>
        return MAC_UNPACK_UNSUPPORTED_FEATURE;
    44bc:	2603      	movs	r6, #3
    44be:	e7f2      	b.n	44a6 <MAC_Unpack+0x2e2>
        return MAC_UNPACK_UNSUPPORTED_FEATURE;
    44c0:	2603      	movs	r6, #3
    44c2:	e7f0      	b.n	44a6 <MAC_Unpack+0x2e2>
            return MAC_UNPACK_FRAME_SIZE_ERROR;
    44c4:	2602      	movs	r6, #2
    44c6:	e7ee      	b.n	44a6 <MAC_Unpack+0x2e2>
            return MAC_UNPACK_FRAME_SIZE_ERROR;
    44c8:	2602      	movs	r6, #2
    44ca:	e7ec      	b.n	44a6 <MAC_Unpack+0x2e2>
            return MAC_UNPACK_FRAME_SIZE_ERROR;
    44cc:	460e      	mov	r6, r1
    44ce:	e7ea      	b.n	44a6 <MAC_Unpack+0x2e2>
            return MAC_UNPACK_FRAME_SIZE_ERROR;
    44d0:	2602      	movs	r6, #2
    44d2:	e7e8      	b.n	44a6 <MAC_Unpack+0x2e2>
            return MAC_UNPACK_FRAME_SIZE_ERROR;
    44d4:	2602      	movs	r6, #2
    44d6:	e7e6      	b.n	44a6 <MAC_Unpack+0x2e2>
            return MAC_UNPACK_FRAME_SIZE_ERROR;
    44d8:	461e      	mov	r6, r3
    44da:	e7e4      	b.n	44a6 <MAC_Unpack+0x2e2>
            return MAC_UNPACK_FRAME_SIZE_ERROR;
    44dc:	2602      	movs	r6, #2
    44de:	e7e2      	b.n	44a6 <MAC_Unpack+0x2e2>
                return MAC_UNPACK_INVALID_ADDRESSING_MODE;
    44e0:	2604      	movs	r6, #4
    44e2:	e7e0      	b.n	44a6 <MAC_Unpack+0x2e2>
                return MAC_UNPACK_INVALID_ADDRESSING_MODE;
    44e4:	2604      	movs	r6, #4
    44e6:	e7de      	b.n	44a6 <MAC_Unpack+0x2e2>
            return MAC_UNPACK_FRAME_SIZE_ERROR;
    44e8:	2602      	movs	r6, #2
    44ea:	e7dc      	b.n	44a6 <MAC_Unpack+0x2e2>
        return MAC_UNPACK_FCS_DOES_NOT_MATCH;
    44ec:	2607      	movs	r6, #7
    44ee:	e7da      	b.n	44a6 <MAC_Unpack+0x2e2>
    44f0:	0000bc14 	.word	0x0000bc14

000044f4 <jsmn_alloc_token>:
 * Allocates a fresh unused token from the token pool.
 */
static jsmntok_t *jsmn_alloc_token(jsmn_parser *parser, jsmntok_t *tokens,
                                   const size_t num_tokens) {
  jsmntok_t *tok;
  if (parser->toknext >= num_tokens) {
    44f4:	6843      	ldr	r3, [r0, #4]
    44f6:	4293      	cmp	r3, r2
    44f8:	d20a      	bcs.n	4510 <jsmn_alloc_token+0x1c>
    return NULL;
  }
  tok = &tokens[parser->toknext++];
    44fa:	1c5a      	adds	r2, r3, #1
    44fc:	6042      	str	r2, [r0, #4]
    44fe:	eb01 1003 	add.w	r0, r1, r3, lsl #4
  tok->start = tok->end = -1;
    4502:	f04f 33ff 	mov.w	r3, #4294967295
    4506:	6083      	str	r3, [r0, #8]
    4508:	6043      	str	r3, [r0, #4]
  tok->size = 0;
    450a:	2300      	movs	r3, #0
    450c:	60c3      	str	r3, [r0, #12]
#ifdef JSMN_PARENT_LINKS
  tok->parent = -1;
#endif
  return tok;
    450e:	4770      	bx	lr
    return NULL;
    4510:	2000      	movs	r0, #0
}
    4512:	4770      	bx	lr

00004514 <jsmn_fill_token>:
/**
 * Fills token type and boundaries.
 */
static void jsmn_fill_token(jsmntok_t *token, const jsmntype_t type,
                            const int start, const int end) {
  token->type = type;
    4514:	7001      	strb	r1, [r0, #0]
  token->start = start;
    4516:	6042      	str	r2, [r0, #4]
  token->end = end;
    4518:	6083      	str	r3, [r0, #8]
  token->size = 0;
    451a:	2300      	movs	r3, #0
    451c:	60c3      	str	r3, [r0, #12]
}
    451e:	4770      	bx	lr

00004520 <jsmn_parse_primitive>:
/**
 * Fills next available token with JSON primitive.
 */
static int jsmn_parse_primitive(jsmn_parser *parser, const char *js,
                                const size_t len, jsmntok_t *tokens,
                                const size_t num_tokens) {
    4520:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4522:	4606      	mov	r6, r0
    4524:	4608      	mov	r0, r1
    4526:	4619      	mov	r1, r3
  jsmntok_t *token;
  int start;

  start = parser->pos;
    4528:	6837      	ldr	r7, [r6, #0]

  for (; parser->pos < len && js[parser->pos] != '\0'; parser->pos++) {
    452a:	e00b      	b.n	4544 <jsmn_parse_primitive+0x24>
    switch (js[parser->pos]) {
    452c:	2c5d      	cmp	r4, #93	; 0x5d
    452e:	d067      	beq.n	4600 <jsmn_parse_primitive+0xe0>
    4530:	2c7d      	cmp	r4, #125	; 0x7d
    4532:	d065      	beq.n	4600 <jsmn_parse_primitive+0xe0>
    4534:	2c3a      	cmp	r4, #58	; 0x3a
    4536:	d063      	beq.n	4600 <jsmn_parse_primitive+0xe0>
      goto found;
    default:
                   /* to quiet a warning from gcc*/
      break;
    }
    if (js[parser->pos] < 32 || js[parser->pos] >= 127) {
    4538:	3c20      	subs	r4, #32
    453a:	b2e4      	uxtb	r4, r4
    453c:	2c5e      	cmp	r4, #94	; 0x5e
    453e:	d85b      	bhi.n	45f8 <jsmn_parse_primitive+0xd8>
  for (; parser->pos < len && js[parser->pos] != '\0'; parser->pos++) {
    4540:	3501      	adds	r5, #1
    4542:	6035      	str	r5, [r6, #0]
    4544:	6835      	ldr	r5, [r6, #0]
    4546:	4295      	cmp	r5, r2
    4548:	d25a      	bcs.n	4600 <jsmn_parse_primitive+0xe0>
    454a:	5d44      	ldrb	r4, [r0, r5]
    454c:	2c00      	cmp	r4, #0
    454e:	d057      	beq.n	4600 <jsmn_parse_primitive+0xe0>
    switch (js[parser->pos]) {
    4550:	2c2c      	cmp	r4, #44	; 0x2c
    4552:	d8eb      	bhi.n	452c <jsmn_parse_primitive+0xc>
    4554:	2c09      	cmp	r4, #9
    4556:	d3ef      	bcc.n	4538 <jsmn_parse_primitive+0x18>
    4558:	f1a4 0c09 	sub.w	ip, r4, #9
    455c:	f1bc 0f23 	cmp.w	ip, #35	; 0x23
    4560:	d8ea      	bhi.n	4538 <jsmn_parse_primitive+0x18>
    4562:	a301      	add	r3, pc, #4	; (adr r3, 4568 <jsmn_parse_primitive+0x48>)
    4564:	f853 f02c 	ldr.w	pc, [r3, ip, lsl #2]
    4568:	00004601 	.word	0x00004601
    456c:	00004601 	.word	0x00004601
    4570:	00004539 	.word	0x00004539
    4574:	00004539 	.word	0x00004539
    4578:	00004601 	.word	0x00004601
    457c:	00004539 	.word	0x00004539
    4580:	00004539 	.word	0x00004539
    4584:	00004539 	.word	0x00004539
    4588:	00004539 	.word	0x00004539
    458c:	00004539 	.word	0x00004539
    4590:	00004539 	.word	0x00004539
    4594:	00004539 	.word	0x00004539
    4598:	00004539 	.word	0x00004539
    459c:	00004539 	.word	0x00004539
    45a0:	00004539 	.word	0x00004539
    45a4:	00004539 	.word	0x00004539
    45a8:	00004539 	.word	0x00004539
    45ac:	00004539 	.word	0x00004539
    45b0:	00004539 	.word	0x00004539
    45b4:	00004539 	.word	0x00004539
    45b8:	00004539 	.word	0x00004539
    45bc:	00004539 	.word	0x00004539
    45c0:	00004539 	.word	0x00004539
    45c4:	00004601 	.word	0x00004601
    45c8:	00004539 	.word	0x00004539
    45cc:	00004539 	.word	0x00004539
    45d0:	00004539 	.word	0x00004539
    45d4:	00004539 	.word	0x00004539
    45d8:	00004539 	.word	0x00004539
    45dc:	00004539 	.word	0x00004539
    45e0:	00004539 	.word	0x00004539
    45e4:	00004539 	.word	0x00004539
    45e8:	00004539 	.word	0x00004539
    45ec:	00004539 	.word	0x00004539
    45f0:	00004539 	.word	0x00004539
    45f4:	00004601 	.word	0x00004601
      parser->pos = start;
    45f8:	6037      	str	r7, [r6, #0]
      return JSMN_ERROR_INVAL;
    45fa:	f06f 0001 	mvn.w	r0, #1
    45fe:	e00e      	b.n	461e <jsmn_parse_primitive+0xfe>
  parser->pos = start;
  return JSMN_ERROR_PART;
#endif

found:
  if (tokens == NULL) {
    4600:	b171      	cbz	r1, 4620 <jsmn_parse_primitive+0x100>
    parser->pos--;
    return 0;
  }
  token = jsmn_alloc_token(parser, tokens, num_tokens);
    4602:	9a06      	ldr	r2, [sp, #24]
    4604:	4630      	mov	r0, r6
    4606:	f7ff ff75 	bl	44f4 <jsmn_alloc_token>
  if (token == NULL) {
    460a:	b168      	cbz	r0, 4628 <jsmn_parse_primitive+0x108>
    parser->pos = start;
    return JSMN_ERROR_NOMEM;
  }
  jsmn_fill_token(token, JSMN_PRIMITIVE, start, parser->pos);
    460c:	6833      	ldr	r3, [r6, #0]
    460e:	463a      	mov	r2, r7
    4610:	2104      	movs	r1, #4
    4612:	f7ff ff7f 	bl	4514 <jsmn_fill_token>
#ifdef JSMN_PARENT_LINKS
  token->parent = parser->toksuper;
#endif
  parser->pos--;
    4616:	6833      	ldr	r3, [r6, #0]
    4618:	3b01      	subs	r3, #1
    461a:	6033      	str	r3, [r6, #0]
  return 0;
    461c:	2000      	movs	r0, #0
}
    461e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    parser->pos--;
    4620:	3d01      	subs	r5, #1
    4622:	6035      	str	r5, [r6, #0]
    return 0;
    4624:	2000      	movs	r0, #0
    4626:	e7fa      	b.n	461e <jsmn_parse_primitive+0xfe>
    parser->pos = start;
    4628:	6037      	str	r7, [r6, #0]
    return JSMN_ERROR_NOMEM;
    462a:	f04f 30ff 	mov.w	r0, #4294967295
    462e:	e7f6      	b.n	461e <jsmn_parse_primitive+0xfe>

00004630 <jsmn_parse_string>:
/**
 * Fills next token with JSON string.
 */
static int jsmn_parse_string(jsmn_parser *parser, const char *js,
                             const size_t len, jsmntok_t *tokens,
                             const size_t num_tokens) {
    4630:	b570      	push	{r4, r5, r6, lr}
    4632:	4605      	mov	r5, r0
  jsmntok_t *token;

  int start = parser->pos;
    4634:	6806      	ldr	r6, [r0, #0]

  parser->pos++;
    4636:	1c70      	adds	r0, r6, #1
    4638:	6028      	str	r0, [r5, #0]

  /* Skip starting quote */
  for (; parser->pos < len && js[parser->pos] != '\0'; parser->pos++) {
    463a:	e048      	b.n	46ce <jsmn_parse_string+0x9e>
    char c = js[parser->pos];

    /* Quote: end of string */
    if (c == '\"') {
      if (tokens == NULL) {
    463c:	2b00      	cmp	r3, #0
    463e:	f000 8099 	beq.w	4774 <jsmn_parse_string+0x144>
        return 0;
      }
      token = jsmn_alloc_token(parser, tokens, num_tokens);
    4642:	9a04      	ldr	r2, [sp, #16]
    4644:	4619      	mov	r1, r3
    4646:	4628      	mov	r0, r5
    4648:	f7ff ff54 	bl	44f4 <jsmn_alloc_token>
      if (token == NULL) {
    464c:	b130      	cbz	r0, 465c <jsmn_parse_string+0x2c>
        parser->pos = start;
        return JSMN_ERROR_NOMEM;
      }
      jsmn_fill_token(token, JSMN_STRING, start + 1, parser->pos);
    464e:	682b      	ldr	r3, [r5, #0]
    4650:	1c72      	adds	r2, r6, #1
    4652:	2103      	movs	r1, #3
    4654:	f7ff ff5e 	bl	4514 <jsmn_fill_token>
#ifdef JSMN_PARENT_LINKS
      token->parent = parser->toksuper;
#endif
      return 0;
    4658:	2000      	movs	r0, #0
    465a:	e00a      	b.n	4672 <jsmn_parse_string+0x42>
        parser->pos = start;
    465c:	602e      	str	r6, [r5, #0]
        return JSMN_ERROR_NOMEM;
    465e:	f04f 30ff 	mov.w	r0, #4294967295
    4662:	e006      	b.n	4672 <jsmn_parse_string+0x42>

    /* Backslash: Quoted symbol expected */
    if (c == '\\' && parser->pos + 1 < len) {
      int i;
      parser->pos++;
      switch (js[parser->pos]) {
    4664:	2822      	cmp	r0, #34	; 0x22
    4666:	d02f      	beq.n	46c8 <jsmn_parse_string+0x98>
    4668:	282f      	cmp	r0, #47	; 0x2f
    466a:	d02d      	beq.n	46c8 <jsmn_parse_string+0x98>
        }
        parser->pos--;
        break;
      /* Unexpected symbol */
      default:
        parser->pos = start;
    466c:	602e      	str	r6, [r5, #0]
        return JSMN_ERROR_INVAL;
    466e:	f06f 0001 	mvn.w	r0, #1
      }
    }
  }
  parser->pos = start;
  return JSMN_ERROR_PART;
}
    4672:	bd70      	pop	{r4, r5, r6, pc}
        parser->pos++;
    4674:	3401      	adds	r4, #1
    4676:	602c      	str	r4, [r5, #0]
        for (i = 0; i < 4 && parser->pos < len && js[parser->pos] != '\0';
    4678:	f04f 0e00 	mov.w	lr, #0
    467c:	e003      	b.n	4686 <jsmn_parse_string+0x56>
          parser->pos++;
    467e:	3001      	adds	r0, #1
    4680:	6028      	str	r0, [r5, #0]
             i++) {
    4682:	f10e 0e01 	add.w	lr, lr, #1
        for (i = 0; i < 4 && parser->pos < len && js[parser->pos] != '\0';
    4686:	f1be 0f03 	cmp.w	lr, #3
    468a:	dc1a      	bgt.n	46c2 <jsmn_parse_string+0x92>
    468c:	6828      	ldr	r0, [r5, #0]
    468e:	4290      	cmp	r0, r2
    4690:	d217      	bcs.n	46c2 <jsmn_parse_string+0x92>
    4692:	5c0c      	ldrb	r4, [r1, r0]
    4694:	b1ac      	cbz	r4, 46c2 <jsmn_parse_string+0x92>
          if (!((js[parser->pos] >= 48 && js[parser->pos] <= 57) ||   /* 0-9 */
    4696:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
    469a:	fa5f fc8c 	uxtb.w	ip, ip
    469e:	f1bc 0f09 	cmp.w	ip, #9
    46a2:	d9ec      	bls.n	467e <jsmn_parse_string+0x4e>
                (js[parser->pos] >= 65 && js[parser->pos] <= 70) ||   /* A-F */
    46a4:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
    46a8:	fa5f fc8c 	uxtb.w	ip, ip
          if (!((js[parser->pos] >= 48 && js[parser->pos] <= 57) ||   /* 0-9 */
    46ac:	f1bc 0f05 	cmp.w	ip, #5
    46b0:	d9e5      	bls.n	467e <jsmn_parse_string+0x4e>
                (js[parser->pos] >= 97 && js[parser->pos] <= 102))) { /* a-f */
    46b2:	3c61      	subs	r4, #97	; 0x61
    46b4:	b2e4      	uxtb	r4, r4
          if (!((js[parser->pos] >= 48 && js[parser->pos] <= 57) ||   /* 0-9 */
    46b6:	2c05      	cmp	r4, #5
    46b8:	d9e1      	bls.n	467e <jsmn_parse_string+0x4e>
            parser->pos = start;
    46ba:	602e      	str	r6, [r5, #0]
            return JSMN_ERROR_INVAL;
    46bc:	f06f 0001 	mvn.w	r0, #1
    46c0:	e7d7      	b.n	4672 <jsmn_parse_string+0x42>
        parser->pos--;
    46c2:	6828      	ldr	r0, [r5, #0]
    46c4:	3801      	subs	r0, #1
    46c6:	6028      	str	r0, [r5, #0]
  for (; parser->pos < len && js[parser->pos] != '\0'; parser->pos++) {
    46c8:	6828      	ldr	r0, [r5, #0]
    46ca:	3001      	adds	r0, #1
    46cc:	6028      	str	r0, [r5, #0]
    46ce:	682c      	ldr	r4, [r5, #0]
    46d0:	4294      	cmp	r4, r2
    46d2:	d24b      	bcs.n	476c <jsmn_parse_string+0x13c>
    46d4:	5d08      	ldrb	r0, [r1, r4]
    46d6:	2800      	cmp	r0, #0
    46d8:	d048      	beq.n	476c <jsmn_parse_string+0x13c>
    if (c == '\"') {
    46da:	2822      	cmp	r0, #34	; 0x22
    46dc:	d0ae      	beq.n	463c <jsmn_parse_string+0xc>
    if (c == '\\' && parser->pos + 1 < len) {
    46de:	285c      	cmp	r0, #92	; 0x5c
    46e0:	d1f2      	bne.n	46c8 <jsmn_parse_string+0x98>
    46e2:	3401      	adds	r4, #1
    46e4:	4294      	cmp	r4, r2
    46e6:	d2ef      	bcs.n	46c8 <jsmn_parse_string+0x98>
      parser->pos++;
    46e8:	602c      	str	r4, [r5, #0]
      switch (js[parser->pos]) {
    46ea:	5d08      	ldrb	r0, [r1, r4]
    46ec:	2875      	cmp	r0, #117	; 0x75
    46ee:	d8bd      	bhi.n	466c <jsmn_parse_string+0x3c>
    46f0:	285c      	cmp	r0, #92	; 0x5c
    46f2:	d3b7      	bcc.n	4664 <jsmn_parse_string+0x34>
    46f4:	385c      	subs	r0, #92	; 0x5c
    46f6:	2819      	cmp	r0, #25
    46f8:	d8b8      	bhi.n	466c <jsmn_parse_string+0x3c>
    46fa:	f20f 0c08 	addw	ip, pc, #8
    46fe:	f85c f020 	ldr.w	pc, [ip, r0, lsl #2]
    4702:	bf00      	nop
    4704:	000046c9 	.word	0x000046c9
    4708:	0000466d 	.word	0x0000466d
    470c:	0000466d 	.word	0x0000466d
    4710:	0000466d 	.word	0x0000466d
    4714:	0000466d 	.word	0x0000466d
    4718:	0000466d 	.word	0x0000466d
    471c:	000046c9 	.word	0x000046c9
    4720:	0000466d 	.word	0x0000466d
    4724:	0000466d 	.word	0x0000466d
    4728:	0000466d 	.word	0x0000466d
    472c:	000046c9 	.word	0x000046c9
    4730:	0000466d 	.word	0x0000466d
    4734:	0000466d 	.word	0x0000466d
    4738:	0000466d 	.word	0x0000466d
    473c:	0000466d 	.word	0x0000466d
    4740:	0000466d 	.word	0x0000466d
    4744:	0000466d 	.word	0x0000466d
    4748:	0000466d 	.word	0x0000466d
    474c:	000046c9 	.word	0x000046c9
    4750:	0000466d 	.word	0x0000466d
    4754:	0000466d 	.word	0x0000466d
    4758:	0000466d 	.word	0x0000466d
    475c:	000046c9 	.word	0x000046c9
    4760:	0000466d 	.word	0x0000466d
    4764:	000046c9 	.word	0x000046c9
    4768:	00004675 	.word	0x00004675
  parser->pos = start;
    476c:	602e      	str	r6, [r5, #0]
  return JSMN_ERROR_PART;
    476e:	f06f 0002 	mvn.w	r0, #2
    4772:	e77e      	b.n	4672 <jsmn_parse_string+0x42>
        return 0;
    4774:	2000      	movs	r0, #0
    4776:	e77c      	b.n	4672 <jsmn_parse_string+0x42>

00004778 <write_json_parameter>:

/**************************************************************************//**
\brief Write JSON parameter to buffer
******************************************************************************/
static void write_json_parameter(uint8_t * buffer, uint16_t *Index, char Attribut, uint8_t* Data, uint8_t Length, const char* Format, uint8_t isInt)
{
    4778:	b570      	push	{r4, r5, r6, lr}
    477a:	4605      	mov	r5, r0
    477c:	460c      	mov	r4, r1
    477e:	f89d 6018 	ldrb.w	r6, [sp, #24]
	buffer[(*Index)++] = '"';
    4782:	8808      	ldrh	r0, [r1, #0]
    4784:	1c41      	adds	r1, r0, #1
    4786:	8021      	strh	r1, [r4, #0]
    4788:	2122      	movs	r1, #34	; 0x22
    478a:	5429      	strb	r1, [r5, r0]
	buffer[(*Index)++] = Attribut;
    478c:	8820      	ldrh	r0, [r4, #0]
    478e:	f100 0c01 	add.w	ip, r0, #1
    4792:	f8a4 c000 	strh.w	ip, [r4]
    4796:	542a      	strb	r2, [r5, r0]
	buffer[(*Index)++] = '"';
    4798:	8822      	ldrh	r2, [r4, #0]
    479a:	1c50      	adds	r0, r2, #1
    479c:	8020      	strh	r0, [r4, #0]
    479e:	54a9      	strb	r1, [r5, r2]
	buffer[(*Index)++] = ATTRIBUT_DELIMITER;
    47a0:	8822      	ldrh	r2, [r4, #0]
    47a2:	1c51      	adds	r1, r2, #1
    47a4:	8021      	strh	r1, [r4, #0]
    47a6:	213a      	movs	r1, #58	; 0x3a
    47a8:	54a9      	strb	r1, [r5, r2]
    if( !isInt )
    47aa:	b926      	cbnz	r6, 47b6 <write_json_parameter+0x3e>
    {
	    buffer[(*Index)++] = '"';
    47ac:	8822      	ldrh	r2, [r4, #0]
    47ae:	1c51      	adds	r1, r2, #1
    47b0:	8021      	strh	r1, [r4, #0]
    47b2:	2122      	movs	r1, #34	; 0x22
    47b4:	54a9      	strb	r1, [r5, r2]
    }
	(*Index) += snprintf((char*)(buffer + (*Index)), Length, Format, Data);
    47b6:	8820      	ldrh	r0, [r4, #0]
    47b8:	9a05      	ldr	r2, [sp, #20]
    47ba:	f89d 1010 	ldrb.w	r1, [sp, #16]
    47be:	4428      	add	r0, r5
    47c0:	f000 ff8a 	bl	56d8 <snprintf_>
    47c4:	8823      	ldrh	r3, [r4, #0]
    47c6:	4418      	add	r0, r3
    47c8:	b280      	uxth	r0, r0
    47ca:	8020      	strh	r0, [r4, #0]
    if( !isInt )
    47cc:	b91e      	cbnz	r6, 47d6 <write_json_parameter+0x5e>
    {
	    buffer[(*Index)++] = '"';
    47ce:	1c43      	adds	r3, r0, #1
    47d0:	8023      	strh	r3, [r4, #0]
    47d2:	2322      	movs	r3, #34	; 0x22
    47d4:	542b      	strb	r3, [r5, r0]
    }
	buffer[(*Index)++] = TRAME_DELIMITER;
    47d6:	8823      	ldrh	r3, [r4, #0]
    47d8:	1c5a      	adds	r2, r3, #1
    47da:	8022      	strh	r2, [r4, #0]
    47dc:	222c      	movs	r2, #44	; 0x2c
    47de:	54ea      	strb	r2, [r5, r3]
}
    47e0:	bd70      	pop	{r4, r5, r6, pc}
	...

000047e4 <jsmn_parse>:

/**
 * Parse JSON string and fill tokens.
 */
JSMN_API int jsmn_parse(jsmn_parser *parser, const char *js, const size_t len,
                        jsmntok_t *tokens, const unsigned int num_tokens) {
    47e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    47e8:	b082      	sub	sp, #8
    47ea:	4605      	mov	r5, r0
    47ec:	4688      	mov	r8, r1
    47ee:	4617      	mov	r7, r2
    47f0:	461e      	mov	r6, r3
    47f2:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
  int r;
  int i;
  jsmntok_t *token;
  int count = parser->toknext;
    47f6:	f8d0 9004 	ldr.w	r9, [r0, #4]

  for (; parser->pos < len && js[parser->pos] != '\0'; parser->pos++) {
    47fa:	e096      	b.n	492a <jsmn_parse+0x146>
    char c;
    jsmntype_t type;

    c = js[parser->pos];
    switch (c) {
    47fc:	2c7b      	cmp	r4, #123	; 0x7b
    47fe:	d027      	beq.n	4850 <jsmn_parse+0x6c>
    4800:	d91a      	bls.n	4838 <jsmn_parse+0x54>
    4802:	2c7d      	cmp	r4, #125	; 0x7d
    4804:	d01c      	beq.n	4840 <jsmn_parse+0x5c>
      }
#else
    /* In non-strict mode every unquoted value is a primitive */
    default:
#endif
      r = jsmn_parse_primitive(parser, js, len, tokens, num_tokens);
    4806:	f8cd a000 	str.w	sl, [sp]
    480a:	4633      	mov	r3, r6
    480c:	463a      	mov	r2, r7
    480e:	4641      	mov	r1, r8
    4810:	4628      	mov	r0, r5
    4812:	f7ff fe85 	bl	4520 <jsmn_parse_primitive>
      if (r < 0) {
    4816:	2800      	cmp	r0, #0
    4818:	f2c0 814a 	blt.w	4ab0 <jsmn_parse+0x2cc>
        return r;
      }
      count++;
    481c:	f109 0901 	add.w	r9, r9, #1
      if (parser->toksuper != -1 && tokens != NULL) {
    4820:	68ab      	ldr	r3, [r5, #8]
    4822:	f1b3 3fff 	cmp.w	r3, #4294967295
    4826:	d07d      	beq.n	4924 <jsmn_parse+0x140>
    4828:	2e00      	cmp	r6, #0
    482a:	d07b      	beq.n	4924 <jsmn_parse+0x140>
        tokens[parser->toksuper].size++;
    482c:	eb06 1303 	add.w	r3, r6, r3, lsl #4
    4830:	68da      	ldr	r2, [r3, #12]
    4832:	3201      	adds	r2, #1
    4834:	60da      	str	r2, [r3, #12]
    4836:	e075      	b.n	4924 <jsmn_parse+0x140>
    switch (c) {
    4838:	2c5b      	cmp	r4, #91	; 0x5b
    483a:	d009      	beq.n	4850 <jsmn_parse+0x6c>
    483c:	2c5d      	cmp	r4, #93	; 0x5d
    483e:	d1e2      	bne.n	4806 <jsmn_parse+0x22>
      if (tokens == NULL) {
    4840:	2e00      	cmp	r6, #0
    4842:	d06f      	beq.n	4924 <jsmn_parse+0x140>
      type = (c == '}' ? JSMN_OBJECT : JSMN_ARRAY);
    4844:	2c7d      	cmp	r4, #125	; 0x7d
    4846:	d025      	beq.n	4894 <jsmn_parse+0xb0>
    4848:	2002      	movs	r0, #2
      for (i = parser->toknext - 1; i >= 0; i--) {
    484a:	686c      	ldr	r4, [r5, #4]
    484c:	3c01      	subs	r4, #1
    484e:	e024      	b.n	489a <jsmn_parse+0xb6>
      count++;
    4850:	f109 0901 	add.w	r9, r9, #1
      if (tokens == NULL) {
    4854:	2e00      	cmp	r6, #0
    4856:	d065      	beq.n	4924 <jsmn_parse+0x140>
      token = jsmn_alloc_token(parser, tokens, num_tokens);
    4858:	4652      	mov	r2, sl
    485a:	4631      	mov	r1, r6
    485c:	4628      	mov	r0, r5
    485e:	f7ff fe49 	bl	44f4 <jsmn_alloc_token>
      if (token == NULL) {
    4862:	4602      	mov	r2, r0
    4864:	2800      	cmp	r0, #0
    4866:	f000 811b 	beq.w	4aa0 <jsmn_parse+0x2bc>
      if (parser->toksuper != -1) {
    486a:	68ab      	ldr	r3, [r5, #8]
    486c:	f1b3 3fff 	cmp.w	r3, #4294967295
    4870:	d004      	beq.n	487c <jsmn_parse+0x98>
        jsmntok_t *t = &tokens[parser->toksuper];
    4872:	eb06 1303 	add.w	r3, r6, r3, lsl #4
        t->size++;
    4876:	68d9      	ldr	r1, [r3, #12]
    4878:	3101      	adds	r1, #1
    487a:	60d9      	str	r1, [r3, #12]
      token->type = (c == '{' ? JSMN_OBJECT : JSMN_ARRAY);
    487c:	2c7b      	cmp	r4, #123	; 0x7b
    487e:	d007      	beq.n	4890 <jsmn_parse+0xac>
    4880:	2302      	movs	r3, #2
    4882:	7013      	strb	r3, [r2, #0]
      token->start = parser->pos;
    4884:	682b      	ldr	r3, [r5, #0]
    4886:	6053      	str	r3, [r2, #4]
      parser->toksuper = parser->toknext - 1;
    4888:	686b      	ldr	r3, [r5, #4]
    488a:	3b01      	subs	r3, #1
    488c:	60ab      	str	r3, [r5, #8]
      break;
    488e:	e049      	b.n	4924 <jsmn_parse+0x140>
      token->type = (c == '{' ? JSMN_OBJECT : JSMN_ARRAY);
    4890:	2301      	movs	r3, #1
    4892:	e7f6      	b.n	4882 <jsmn_parse+0x9e>
      type = (c == '}' ? JSMN_OBJECT : JSMN_ARRAY);
    4894:	2001      	movs	r0, #1
    4896:	e7d8      	b.n	484a <jsmn_parse+0x66>
      for (i = parser->toknext - 1; i >= 0; i--) {
    4898:	3c01      	subs	r4, #1
    489a:	2c00      	cmp	r4, #0
    489c:	db12      	blt.n	48c4 <jsmn_parse+0xe0>
        token = &tokens[i];
    489e:	eb06 1204 	add.w	r2, r6, r4, lsl #4
        if (token->start != -1 && token->end == -1) {
    48a2:	6851      	ldr	r1, [r2, #4]
    48a4:	f1b1 3fff 	cmp.w	r1, #4294967295
    48a8:	d0f6      	beq.n	4898 <jsmn_parse+0xb4>
    48aa:	6891      	ldr	r1, [r2, #8]
    48ac:	f1b1 3fff 	cmp.w	r1, #4294967295
    48b0:	d1f2      	bne.n	4898 <jsmn_parse+0xb4>
          if (token->type != type) {
    48b2:	7811      	ldrb	r1, [r2, #0]
    48b4:	4281      	cmp	r1, r0
    48b6:	f040 80f6 	bne.w	4aa6 <jsmn_parse+0x2c2>
          parser->toksuper = -1;
    48ba:	f04f 31ff 	mov.w	r1, #4294967295
    48be:	60a9      	str	r1, [r5, #8]
          token->end = parser->pos + 1;
    48c0:	3301      	adds	r3, #1
    48c2:	6093      	str	r3, [r2, #8]
      if (i == -1) {
    48c4:	f1b4 3fff 	cmp.w	r4, #4294967295
    48c8:	d103      	bne.n	48d2 <jsmn_parse+0xee>
        return JSMN_ERROR_INVAL;
    48ca:	f06f 0901 	mvn.w	r9, #1
    48ce:	e0e3      	b.n	4a98 <jsmn_parse+0x2b4>
      for (; i >= 0; i--) {
    48d0:	3c01      	subs	r4, #1
    48d2:	2c00      	cmp	r4, #0
    48d4:	db26      	blt.n	4924 <jsmn_parse+0x140>
        token = &tokens[i];
    48d6:	eb06 1304 	add.w	r3, r6, r4, lsl #4
        if (token->start != -1 && token->end == -1) {
    48da:	685a      	ldr	r2, [r3, #4]
    48dc:	f1b2 3fff 	cmp.w	r2, #4294967295
    48e0:	d0f6      	beq.n	48d0 <jsmn_parse+0xec>
    48e2:	689b      	ldr	r3, [r3, #8]
    48e4:	f1b3 3fff 	cmp.w	r3, #4294967295
    48e8:	d1f2      	bne.n	48d0 <jsmn_parse+0xec>
          parser->toksuper = i;
    48ea:	60ac      	str	r4, [r5, #8]
          break;
    48ec:	e01a      	b.n	4924 <jsmn_parse+0x140>
      r = jsmn_parse_string(parser, js, len, tokens, num_tokens);
    48ee:	f8cd a000 	str.w	sl, [sp]
    48f2:	4633      	mov	r3, r6
    48f4:	463a      	mov	r2, r7
    48f6:	4641      	mov	r1, r8
    48f8:	4628      	mov	r0, r5
    48fa:	f7ff fe99 	bl	4630 <jsmn_parse_string>
      if (r < 0) {
    48fe:	2800      	cmp	r0, #0
    4900:	f2c0 80d4 	blt.w	4aac <jsmn_parse+0x2c8>
      count++;
    4904:	f109 0901 	add.w	r9, r9, #1
      if (parser->toksuper != -1 && tokens != NULL) {
    4908:	68ab      	ldr	r3, [r5, #8]
    490a:	f1b3 3fff 	cmp.w	r3, #4294967295
    490e:	d009      	beq.n	4924 <jsmn_parse+0x140>
    4910:	b146      	cbz	r6, 4924 <jsmn_parse+0x140>
        tokens[parser->toksuper].size++;
    4912:	eb06 1303 	add.w	r3, r6, r3, lsl #4
    4916:	68da      	ldr	r2, [r3, #12]
    4918:	3201      	adds	r2, #1
    491a:	60da      	str	r2, [r3, #12]
    491c:	e002      	b.n	4924 <jsmn_parse+0x140>
      parser->toksuper = parser->toknext - 1;
    491e:	686b      	ldr	r3, [r5, #4]
    4920:	3b01      	subs	r3, #1
    4922:	60ab      	str	r3, [r5, #8]
  for (; parser->pos < len && js[parser->pos] != '\0'; parser->pos++) {
    4924:	682b      	ldr	r3, [r5, #0]
    4926:	3301      	adds	r3, #1
    4928:	602b      	str	r3, [r5, #0]
    492a:	682b      	ldr	r3, [r5, #0]
    492c:	42bb      	cmp	r3, r7
    492e:	f080 80a0 	bcs.w	4a72 <jsmn_parse+0x28e>
    4932:	f818 4003 	ldrb.w	r4, [r8, r3]
    4936:	2c00      	cmp	r4, #0
    4938:	f000 809b 	beq.w	4a72 <jsmn_parse+0x28e>
    switch (c) {
    493c:	2c3a      	cmp	r4, #58	; 0x3a
    493e:	f63f af5d 	bhi.w	47fc <jsmn_parse+0x18>
    4942:	2c09      	cmp	r4, #9
    4944:	f4ff af5f 	bcc.w	4806 <jsmn_parse+0x22>
    4948:	3c09      	subs	r4, #9
    494a:	2c31      	cmp	r4, #49	; 0x31
    494c:	f63f af5b 	bhi.w	4806 <jsmn_parse+0x22>
    4950:	a301      	add	r3, pc, #4	; (adr r3, 4958 <jsmn_parse+0x174>)
    4952:	f853 f024 	ldr.w	pc, [r3, r4, lsl #2]
    4956:	bf00      	nop
    4958:	00004925 	.word	0x00004925
    495c:	00004925 	.word	0x00004925
    4960:	00004807 	.word	0x00004807
    4964:	00004807 	.word	0x00004807
    4968:	00004925 	.word	0x00004925
    496c:	00004807 	.word	0x00004807
    4970:	00004807 	.word	0x00004807
    4974:	00004807 	.word	0x00004807
    4978:	00004807 	.word	0x00004807
    497c:	00004807 	.word	0x00004807
    4980:	00004807 	.word	0x00004807
    4984:	00004807 	.word	0x00004807
    4988:	00004807 	.word	0x00004807
    498c:	00004807 	.word	0x00004807
    4990:	00004807 	.word	0x00004807
    4994:	00004807 	.word	0x00004807
    4998:	00004807 	.word	0x00004807
    499c:	00004807 	.word	0x00004807
    49a0:	00004807 	.word	0x00004807
    49a4:	00004807 	.word	0x00004807
    49a8:	00004807 	.word	0x00004807
    49ac:	00004807 	.word	0x00004807
    49b0:	00004807 	.word	0x00004807
    49b4:	00004925 	.word	0x00004925
    49b8:	00004807 	.word	0x00004807
    49bc:	000048ef 	.word	0x000048ef
    49c0:	00004807 	.word	0x00004807
    49c4:	00004807 	.word	0x00004807
    49c8:	00004807 	.word	0x00004807
    49cc:	00004807 	.word	0x00004807
    49d0:	00004807 	.word	0x00004807
    49d4:	00004807 	.word	0x00004807
    49d8:	00004807 	.word	0x00004807
    49dc:	00004807 	.word	0x00004807
    49e0:	00004807 	.word	0x00004807
    49e4:	00004a21 	.word	0x00004a21
    49e8:	00004807 	.word	0x00004807
    49ec:	00004807 	.word	0x00004807
    49f0:	00004807 	.word	0x00004807
    49f4:	00004807 	.word	0x00004807
    49f8:	00004807 	.word	0x00004807
    49fc:	00004807 	.word	0x00004807
    4a00:	00004807 	.word	0x00004807
    4a04:	00004807 	.word	0x00004807
    4a08:	00004807 	.word	0x00004807
    4a0c:	00004807 	.word	0x00004807
    4a10:	00004807 	.word	0x00004807
    4a14:	00004807 	.word	0x00004807
    4a18:	00004807 	.word	0x00004807
    4a1c:	0000491f 	.word	0x0000491f
      if (tokens != NULL && parser->toksuper != -1 &&
    4a20:	2e00      	cmp	r6, #0
    4a22:	f43f af7f 	beq.w	4924 <jsmn_parse+0x140>
    4a26:	68ab      	ldr	r3, [r5, #8]
    4a28:	f1b3 3fff 	cmp.w	r3, #4294967295
    4a2c:	f43f af7a 	beq.w	4924 <jsmn_parse+0x140>
          tokens[parser->toksuper].type != JSMN_ARRAY &&
    4a30:	011b      	lsls	r3, r3, #4
    4a32:	5cf3      	ldrb	r3, [r6, r3]
      if (tokens != NULL && parser->toksuper != -1 &&
    4a34:	2b02      	cmp	r3, #2
    4a36:	f43f af75 	beq.w	4924 <jsmn_parse+0x140>
          tokens[parser->toksuper].type != JSMN_ARRAY &&
    4a3a:	2b01      	cmp	r3, #1
    4a3c:	f43f af72 	beq.w	4924 <jsmn_parse+0x140>
        for (i = parser->toknext - 1; i >= 0; i--) {
    4a40:	686a      	ldr	r2, [r5, #4]
    4a42:	3a01      	subs	r2, #1
    4a44:	e000      	b.n	4a48 <jsmn_parse+0x264>
    4a46:	3a01      	subs	r2, #1
    4a48:	2a00      	cmp	r2, #0
    4a4a:	f6ff af6b 	blt.w	4924 <jsmn_parse+0x140>
          if (tokens[i].type == JSMN_ARRAY || tokens[i].type == JSMN_OBJECT) {
    4a4e:	0113      	lsls	r3, r2, #4
    4a50:	eb06 1102 	add.w	r1, r6, r2, lsl #4
    4a54:	5cf3      	ldrb	r3, [r6, r3]
    4a56:	3b01      	subs	r3, #1
    4a58:	b2db      	uxtb	r3, r3
    4a5a:	2b01      	cmp	r3, #1
    4a5c:	d8f3      	bhi.n	4a46 <jsmn_parse+0x262>
            if (tokens[i].start != -1 && tokens[i].end == -1) {
    4a5e:	684b      	ldr	r3, [r1, #4]
    4a60:	f1b3 3fff 	cmp.w	r3, #4294967295
    4a64:	d0ef      	beq.n	4a46 <jsmn_parse+0x262>
    4a66:	688b      	ldr	r3, [r1, #8]
    4a68:	f1b3 3fff 	cmp.w	r3, #4294967295
    4a6c:	d1eb      	bne.n	4a46 <jsmn_parse+0x262>
              parser->toksuper = i;
    4a6e:	60aa      	str	r2, [r5, #8]
              break;
    4a70:	e758      	b.n	4924 <jsmn_parse+0x140>
      return JSMN_ERROR_INVAL;
#endif
    }
  }

  if (tokens != NULL) {
    4a72:	b18e      	cbz	r6, 4a98 <jsmn_parse+0x2b4>
    for (i = parser->toknext - 1; i >= 0; i--) {
    4a74:	686b      	ldr	r3, [r5, #4]
    4a76:	3b01      	subs	r3, #1
    4a78:	e000      	b.n	4a7c <jsmn_parse+0x298>
    4a7a:	3b01      	subs	r3, #1
    4a7c:	2b00      	cmp	r3, #0
    4a7e:	db0b      	blt.n	4a98 <jsmn_parse+0x2b4>
      /* Unmatched opened object or array */
      if (tokens[i].start != -1 && tokens[i].end == -1) {
    4a80:	eb06 1203 	add.w	r2, r6, r3, lsl #4
    4a84:	6851      	ldr	r1, [r2, #4]
    4a86:	f1b1 3fff 	cmp.w	r1, #4294967295
    4a8a:	d0f6      	beq.n	4a7a <jsmn_parse+0x296>
    4a8c:	6892      	ldr	r2, [r2, #8]
    4a8e:	f1b2 3fff 	cmp.w	r2, #4294967295
    4a92:	d1f2      	bne.n	4a7a <jsmn_parse+0x296>
        return JSMN_ERROR_PART;
    4a94:	f06f 0902 	mvn.w	r9, #2
      }
    }
  }

  return count;
}
    4a98:	4648      	mov	r0, r9
    4a9a:	b002      	add	sp, #8
    4a9c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        return JSMN_ERROR_NOMEM;
    4aa0:	f04f 39ff 	mov.w	r9, #4294967295
    4aa4:	e7f8      	b.n	4a98 <jsmn_parse+0x2b4>
            return JSMN_ERROR_INVAL;
    4aa6:	f06f 0901 	mvn.w	r9, #1
    4aaa:	e7f5      	b.n	4a98 <jsmn_parse+0x2b4>
        return r;
    4aac:	4681      	mov	r9, r0
    4aae:	e7f3      	b.n	4a98 <jsmn_parse+0x2b4>
        return r;
    4ab0:	4681      	mov	r9, r0
    4ab2:	e7f1      	b.n	4a98 <jsmn_parse+0x2b4>

00004ab4 <jsmn_init>:
/**
 * Creates a new parser based over a given buffer with an array of tokens
 * available.
 */
JSMN_API void jsmn_init(jsmn_parser *parser) {
  parser->pos = 0;
    4ab4:	2300      	movs	r3, #0
    4ab6:	6003      	str	r3, [r0, #0]
  parser->toknext = 0;
    4ab8:	6043      	str	r3, [r0, #4]
  parser->toksuper = -1;
    4aba:	f04f 33ff 	mov.w	r3, #4294967295
    4abe:	6083      	str	r3, [r0, #8]
}
    4ac0:	4770      	bx	lr

00004ac2 <console_process_rx_json>:
{
    4ac2:	b570      	push	{r4, r5, r6, lr}
    4ac4:	b0a6      	sub	sp, #152	; 0x98
    4ac6:	4605      	mov	r5, r0
    4ac8:	460e      	mov	r6, r1
    jsmn_parser JsmnParser = { 0 };
    4aca:	2400      	movs	r4, #0
    4acc:	9423      	str	r4, [sp, #140]	; 0x8c
    4ace:	9424      	str	r4, [sp, #144]	; 0x90
    4ad0:	9425      	str	r4, [sp, #148]	; 0x94
    memset(&JsmnTokens, 0, sizeof(JsmnTokens));
    4ad2:	2280      	movs	r2, #128	; 0x80
    4ad4:	4621      	mov	r1, r4
    4ad6:	a803      	add	r0, sp, #12
    4ad8:	f007 f801 	bl	bade <memset>
    jsmn_init(&JsmnParser);
    4adc:	a823      	add	r0, sp, #140	; 0x8c
    4ade:	f7ff ffe9 	bl	4ab4 <jsmn_init>
    jsmn_parse(&JsmnParser, (char *) json, len, JsmnTokens, MAX_JSON_RX_TOKEN);
    4ae2:	2308      	movs	r3, #8
    4ae4:	9300      	str	r3, [sp, #0]
    4ae6:	ab03      	add	r3, sp, #12
    4ae8:	4632      	mov	r2, r6
    4aea:	4629      	mov	r1, r5
    4aec:	a823      	add	r0, sp, #140	; 0x8c
    4aee:	f7ff fe79 	bl	47e4 <jsmn_parse>
    while (JsmnTokens[i].type != JSMN_UNDEFINED && i < MAX_JSON_RX_TOKEN)
    4af2:	e001      	b.n	4af8 <console_process_rx_json+0x36>
            i++;
    4af4:	3401      	adds	r4, #1
    4af6:	b2e4      	uxtb	r4, r4
    while (JsmnTokens[i].type != JSMN_UNDEFINED && i < MAX_JSON_RX_TOKEN)
    4af8:	4622      	mov	r2, r4
    4afa:	ab26      	add	r3, sp, #152	; 0x98
    4afc:	eb03 1304 	add.w	r3, r3, r4, lsl #4
    4b00:	f813 3c8c 	ldrb.w	r3, [r3, #-140]
    4b04:	b343      	cbz	r3, 4b58 <console_process_rx_json+0x96>
    4b06:	2c07      	cmp	r4, #7
    4b08:	d826      	bhi.n	4b58 <console_process_rx_json+0x96>
        if (JsmnTokens[i].type == JSMN_OBJECT)
    4b0a:	2b01      	cmp	r3, #1
    4b0c:	d0f2      	beq.n	4af4 <console_process_rx_json+0x32>
        else if (JsmnTokens[i].type == JSMN_STRING)
    4b0e:	2b03      	cmp	r3, #3
    4b10:	d002      	beq.n	4b18 <console_process_rx_json+0x56>
            i++;
    4b12:	3401      	adds	r4, #1
    4b14:	b2e4      	uxtb	r4, r4
    4b16:	e7ef      	b.n	4af8 <console_process_rx_json+0x36>
            switch (json[JsmnTokens[i].start])
    4b18:	ab26      	add	r3, sp, #152	; 0x98
    4b1a:	eb03 1202 	add.w	r2, r3, r2, lsl #4
    4b1e:	f852 3c88 	ldr.w	r3, [r2, #-136]
    4b22:	5ceb      	ldrb	r3, [r5, r3]
    4b24:	2b43      	cmp	r3, #67	; 0x43
    4b26:	d002      	beq.n	4b2e <console_process_rx_json+0x6c>
            i++;
    4b28:	3401      	adds	r4, #1
    4b2a:	b2e4      	uxtb	r4, r4
    4b2c:	e7e4      	b.n	4af8 <console_process_rx_json+0x36>
                    i++;
    4b2e:	3401      	adds	r4, #1
    4b30:	b2e4      	uxtb	r4, r4
                    channel = strtol((char *) &json[JsmnTokens[i].start], NULL, 10);
    4b32:	ab26      	add	r3, sp, #152	; 0x98
    4b34:	eb03 1304 	add.w	r3, r3, r4, lsl #4
    4b38:	f853 0c88 	ldr.w	r0, [r3, #-136]
    4b3c:	220a      	movs	r2, #10
    4b3e:	2100      	movs	r1, #0
    4b40:	4428      	add	r0, r5
    4b42:	f007 f857 	bl	bbf4 <strtol>
    4b46:	b2c0      	uxtb	r0, r0
                    if( channel >= 11 && channel <= 26 )
    4b48:	f1a0 030b 	sub.w	r3, r0, #11
    4b4c:	b2db      	uxtb	r3, r3
    4b4e:	2b0f      	cmp	r3, #15
    4b50:	d8ea      	bhi.n	4b28 <console_process_rx_json+0x66>
                        HAL_SetRadioChannel(channel);
    4b52:	f001 fec5 	bl	68e0 <HAL_SetRadioChannel>
    4b56:	e7e7      	b.n	4b28 <console_process_rx_json+0x66>
}
    4b58:	b026      	add	sp, #152	; 0x98
    4b5a:	bd70      	pop	{r4, r5, r6, pc}

00004b5c <console_serialize_json>:

/**************************************************************************//**
\brief Build received JSON buffer
******************************************************************************/
static void console_serialize_json( uint8_t byte )
{
    4b5c:	b508      	push	{r3, lr}
    switch( jsonRxStep )
    4b5e:	4b16      	ldr	r3, [pc, #88]	; (4bb8 <console_serialize_json+0x5c>)
    4b60:	781b      	ldrb	r3, [r3, #0]
    4b62:	b113      	cbz	r3, 4b6a <console_serialize_json+0xe>
    4b64:	2b01      	cmp	r3, #1
    4b66:	d00c      	beq.n	4b82 <console_serialize_json+0x26>
        break;
    default:
        //do nothing
        break;
    }
}
    4b68:	bd08      	pop	{r3, pc}
        if( byte == '{')
    4b6a:	287b      	cmp	r0, #123	; 0x7b
    4b6c:	d1fc      	bne.n	4b68 <console_serialize_json+0xc>
            jsonRxLength = 0;
    4b6e:	4a13      	ldr	r2, [pc, #76]	; (4bbc <console_serialize_json+0x60>)
    4b70:	2300      	movs	r3, #0
    4b72:	7013      	strb	r3, [r2, #0]
            jsonRxBuffer[jsonRxLength++] = byte;
    4b74:	2301      	movs	r3, #1
    4b76:	7013      	strb	r3, [r2, #0]
    4b78:	4a11      	ldr	r2, [pc, #68]	; (4bc0 <console_serialize_json+0x64>)
    4b7a:	7010      	strb	r0, [r2, #0]
            jsonRxStep = JSON_STEP_CARRIAGE_RETURN;
    4b7c:	4a0e      	ldr	r2, [pc, #56]	; (4bb8 <console_serialize_json+0x5c>)
    4b7e:	7013      	strb	r3, [r2, #0]
    4b80:	e7f2      	b.n	4b68 <console_serialize_json+0xc>
        jsonRxBuffer[jsonRxLength++] = byte;
    4b82:	4a0e      	ldr	r2, [pc, #56]	; (4bbc <console_serialize_json+0x60>)
    4b84:	7813      	ldrb	r3, [r2, #0]
    4b86:	1c59      	adds	r1, r3, #1
    4b88:	b2c9      	uxtb	r1, r1
    4b8a:	7011      	strb	r1, [r2, #0]
    4b8c:	4a0c      	ldr	r2, [pc, #48]	; (4bc0 <console_serialize_json+0x64>)
    4b8e:	54d0      	strb	r0, [r2, r3]
        if( byte == '\r')
    4b90:	280d      	cmp	r0, #13
    4b92:	d007      	beq.n	4ba4 <console_serialize_json+0x48>
        else if( jsonRxLength >= MAX_JSON_RX_LENGTH )
    4b94:	290f      	cmp	r1, #15
    4b96:	d9e7      	bls.n	4b68 <console_serialize_json+0xc>
            jsonRxLength = 0;
    4b98:	2300      	movs	r3, #0
    4b9a:	4a08      	ldr	r2, [pc, #32]	; (4bbc <console_serialize_json+0x60>)
    4b9c:	7013      	strb	r3, [r2, #0]
            jsonRxStep = JSON_STEP_OPENING_BRACKET;
    4b9e:	4a06      	ldr	r2, [pc, #24]	; (4bb8 <console_serialize_json+0x5c>)
    4ba0:	7013      	strb	r3, [r2, #0]
}
    4ba2:	e7e1      	b.n	4b68 <console_serialize_json+0xc>
            console_process_rx_json( jsonRxBuffer, jsonRxLength );
    4ba4:	4610      	mov	r0, r2
    4ba6:	f7ff ff8c 	bl	4ac2 <console_process_rx_json>
            jsonRxLength = 0;
    4baa:	2300      	movs	r3, #0
    4bac:	4a03      	ldr	r2, [pc, #12]	; (4bbc <console_serialize_json+0x60>)
    4bae:	7013      	strb	r3, [r2, #0]
            jsonRxStep = JSON_STEP_OPENING_BRACKET;
    4bb0:	4a01      	ldr	r2, [pc, #4]	; (4bb8 <console_serialize_json+0x5c>)
    4bb2:	7013      	strb	r3, [r2, #0]
    4bb4:	e7d8      	b.n	4b68 <console_serialize_json+0xc>
    4bb6:	bf00      	nop
    4bb8:	20000289 	.word	0x20000289
    4bbc:	20000288 	.word	0x20000288
    4bc0:	20000278 	.word	0x20000278

00004bc4 <Console_Write>:
{
    4bc4:	b538      	push	{r3, r4, r5, lr}
    4bc6:	4604      	mov	r4, r0
    4bc8:	460d      	mov	r5, r1
    while( size )
    4bca:	e005      	b.n	4bd8 <Console_Write+0x14>
        HAL_Console_Tx_Byte ( *buffer++ );
    4bcc:	f814 0b01 	ldrb.w	r0, [r4], #1
    4bd0:	f001 fef6 	bl	69c0 <HAL_Console_Tx_Byte>
        size--;
    4bd4:	3d01      	subs	r5, #1
    4bd6:	b2ad      	uxth	r5, r5
    while( size )
    4bd8:	2d00      	cmp	r5, #0
    4bda:	d1f7      	bne.n	4bcc <Console_Write+0x8>
}
    4bdc:	bd38      	pop	{r3, r4, r5, pc}
	...

00004be0 <Console_RxByte>:
    rxFifo[rxFifoIn] = byte;
    4be0:	4a06      	ldr	r2, [pc, #24]	; (4bfc <Console_RxByte+0x1c>)
    4be2:	7813      	ldrb	r3, [r2, #0]
    4be4:	4906      	ldr	r1, [pc, #24]	; (4c00 <Console_RxByte+0x20>)
    4be6:	54c8      	strb	r0, [r1, r3]
    rxFifoIn++;
    4be8:	3301      	adds	r3, #1
    4bea:	b2db      	uxtb	r3, r3
    4bec:	7013      	strb	r3, [r2, #0]
    if( rxFifoIn >= CONSOLE_RX_BUFFER_SIZE )
    4bee:	2b0f      	cmp	r3, #15
    4bf0:	d902      	bls.n	4bf8 <Console_RxByte+0x18>
        rxFifoIn = 0;
    4bf2:	4613      	mov	r3, r2
    4bf4:	2200      	movs	r2, #0
    4bf6:	701a      	strb	r2, [r3, #0]
}
    4bf8:	4770      	bx	lr
    4bfa:	bf00      	nop
    4bfc:	2000049c 	.word	0x2000049c
    4c00:	2000048c 	.word	0x2000048c

00004c04 <Console_Process_Rx>:
{
    4c04:	b508      	push	{r3, lr}
    while( rxFifoIn != rxFifoOut )
    4c06:	4b0b      	ldr	r3, [pc, #44]	; (4c34 <Console_Process_Rx+0x30>)
    4c08:	781a      	ldrb	r2, [r3, #0]
    4c0a:	4b0b      	ldr	r3, [pc, #44]	; (4c38 <Console_Process_Rx+0x34>)
    4c0c:	781b      	ldrb	r3, [r3, #0]
    4c0e:	429a      	cmp	r2, r3
    4c10:	d00e      	beq.n	4c30 <Console_Process_Rx+0x2c>
        console_serialize_json( rxFifo[rxFifoOut] );
    4c12:	4a0a      	ldr	r2, [pc, #40]	; (4c3c <Console_Process_Rx+0x38>)
    4c14:	5cd0      	ldrb	r0, [r2, r3]
    4c16:	f7ff ffa1 	bl	4b5c <console_serialize_json>
        rxFifoOut++;
    4c1a:	4a07      	ldr	r2, [pc, #28]	; (4c38 <Console_Process_Rx+0x34>)
    4c1c:	7813      	ldrb	r3, [r2, #0]
    4c1e:	3301      	adds	r3, #1
    4c20:	b2db      	uxtb	r3, r3
    4c22:	7013      	strb	r3, [r2, #0]
        if( rxFifoOut >= CONSOLE_RX_BUFFER_SIZE )
    4c24:	2b0f      	cmp	r3, #15
    4c26:	d9ee      	bls.n	4c06 <Console_Process_Rx+0x2>
            rxFifoOut = 0;
    4c28:	4613      	mov	r3, r2
    4c2a:	2200      	movs	r2, #0
    4c2c:	701a      	strb	r2, [r3, #0]
    4c2e:	e7ea      	b.n	4c06 <Console_Process_Rx+0x2>
}
    4c30:	bd08      	pop	{r3, pc}
    4c32:	bf00      	nop
    4c34:	2000049c 	.word	0x2000049c
    4c38:	2000049d 	.word	0x2000049d
    4c3c:	2000048c 	.word	0x2000048c

00004c40 <Console_PhyToJSONV2>:
S = string of hexadecimal representation of 802.15.4 packet
Example:
{"L":50,"Q":255,"R":-94,"S":"4188a31e48ffff00000912fcff000001cc0885dafeffd76b0828f6ea32000885dafeffd76b0800295e19cad6ebd84ca2aee2"}
******************************************************************************/
void Console_PhyToJSONV2( PhyRx_t * phy_rx)
{
    4c40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    4c44:	b087      	sub	sp, #28
    4c46:	4605      	mov	r5, r0
    uint16_t i = 0;
    4c48:	2600      	movs	r6, #0
    4c4a:	f8ad 6016 	strh.w	r6, [sp, #22]

    memset(jsonTxBuffer, 0, JSON_TX_BUFFER_SIZE );
    4c4e:	4c55      	ldr	r4, [pc, #340]	; (4da4 <Console_PhyToJSONV2+0x164>)
    4c50:	f44f 7200 	mov.w	r2, #512	; 0x200
    4c54:	4631      	mov	r1, r6
    4c56:	4620      	mov	r0, r4
    4c58:	f006 ff41 	bl	bade <memset>

    jsonTxBuffer[i++] = '{';
    4c5c:	f8bd 3016 	ldrh.w	r3, [sp, #22]
    4c60:	1c5a      	adds	r2, r3, #1
    4c62:	f8ad 2016 	strh.w	r2, [sp, #22]
    4c66:	227b      	movs	r2, #123	; 0x7b
    4c68:	54e2      	strb	r2, [r4, r3]

    write_json_parameter(jsonTxBuffer, &i, 'L', (uint8_t *)(uint32_t)phy_rx->len, 3+1, "%d", true);
    4c6a:	f04f 0901 	mov.w	r9, #1
    4c6e:	f8cd 9008 	str.w	r9, [sp, #8]
    4c72:	f8df 8138 	ldr.w	r8, [pc, #312]	; 4dac <Console_PhyToJSONV2+0x16c>
    4c76:	f8cd 8004 	str.w	r8, [sp, #4]
    4c7a:	2704      	movs	r7, #4
    4c7c:	9700      	str	r7, [sp, #0]
    4c7e:	782b      	ldrb	r3, [r5, #0]
    4c80:	224c      	movs	r2, #76	; 0x4c
    4c82:	f10d 0116 	add.w	r1, sp, #22
    4c86:	4620      	mov	r0, r4
    4c88:	f7ff fd76 	bl	4778 <write_json_parameter>
    write_json_parameter(jsonTxBuffer, &i, 'Q', (uint8_t *)(uint32_t)phy_rx->lqi, 3+1, "%d", true);
    4c8c:	f8cd 9008 	str.w	r9, [sp, #8]
    4c90:	f8cd 8004 	str.w	r8, [sp, #4]
    4c94:	9700      	str	r7, [sp, #0]
    4c96:	f895 3081 	ldrb.w	r3, [r5, #129]	; 0x81
    4c9a:	2251      	movs	r2, #81	; 0x51
    4c9c:	f10d 0116 	add.w	r1, sp, #22
    4ca0:	4620      	mov	r0, r4
    4ca2:	f7ff fd69 	bl	4778 <write_json_parameter>
    write_json_parameter(jsonTxBuffer, &i, 'R', (uint8_t *)(uint32_t)phy_rx->rssi, 3+1, "%d", true);
    4ca6:	f8cd 9008 	str.w	r9, [sp, #8]
    4caa:	f8cd 8004 	str.w	r8, [sp, #4]
    4cae:	9700      	str	r7, [sp, #0]
    4cb0:	f995 3082 	ldrsb.w	r3, [r5, #130]	; 0x82
    4cb4:	2252      	movs	r2, #82	; 0x52
    4cb6:	f10d 0116 	add.w	r1, sp, #22
    4cba:	4620      	mov	r0, r4
    4cbc:	f7ff fd5c 	bl	4778 <write_json_parameter>
    write_json_parameter(jsonTxBuffer, &i, 'C', (uint8_t *)(uint32_t)phy_rx->channel, 3+1, "%d", true);
    4cc0:	f8cd 9008 	str.w	r9, [sp, #8]
    4cc4:	f8cd 8004 	str.w	r8, [sp, #4]
    4cc8:	9700      	str	r7, [sp, #0]
    4cca:	f895 3083 	ldrb.w	r3, [r5, #131]	; 0x83
    4cce:	2243      	movs	r2, #67	; 0x43
    4cd0:	f10d 0116 	add.w	r1, sp, #22
    4cd4:	4620      	mov	r0, r4
    4cd6:	f7ff fd4f 	bl	4778 <write_json_parameter>
    jsonTxBuffer[i++] = '"';
    4cda:	f8bd 3016 	ldrh.w	r3, [sp, #22]
    4cde:	eb03 0209 	add.w	r2, r3, r9
    4ce2:	b292      	uxth	r2, r2
    4ce4:	f8ad 2016 	strh.w	r2, [sp, #22]
    4ce8:	2122      	movs	r1, #34	; 0x22
    4cea:	54e1      	strb	r1, [r4, r3]
    jsonTxBuffer[i++] = 'S';
    4cec:	eb02 0309 	add.w	r3, r2, r9
    4cf0:	b29b      	uxth	r3, r3
    4cf2:	f8ad 3016 	strh.w	r3, [sp, #22]
    4cf6:	2053      	movs	r0, #83	; 0x53
    4cf8:	54a0      	strb	r0, [r4, r2]
    jsonTxBuffer[i++] = '"';
    4cfa:	eb03 0209 	add.w	r2, r3, r9
    4cfe:	b292      	uxth	r2, r2
    4d00:	f8ad 2016 	strh.w	r2, [sp, #22]
    4d04:	54e1      	strb	r1, [r4, r3]
    jsonTxBuffer[i++] = ATTRIBUT_DELIMITER;
    4d06:	eb02 0309 	add.w	r3, r2, r9
    4d0a:	b29b      	uxth	r3, r3
    4d0c:	f8ad 3016 	strh.w	r3, [sp, #22]
    4d10:	203a      	movs	r0, #58	; 0x3a
    4d12:	54a0      	strb	r0, [r4, r2]
    jsonTxBuffer[i++] = STRING_START_DELIMITER;
    4d14:	eb03 0209 	add.w	r2, r3, r9
    4d18:	f8ad 2016 	strh.w	r2, [sp, #22]
    4d1c:	54e1      	strb	r1, [r4, r3]
    for( uint8_t j = 0; j < phy_rx->len && i < (JSON_TX_BUFFER_SIZE-(4+4+1)); j++ )
    4d1e:	4631      	mov	r1, r6
    4d20:	e017      	b.n	4d52 <Console_PhyToJSONV2+0x112>
    {
        uint8_t rx_byte = phy_rx->payload[j];
    4d22:	186b      	adds	r3, r5, r1
    4d24:	785a      	ldrb	r2, [r3, #1]
        jsonTxBuffer[i++] = HexToAscii[((rx_byte >> 4) & 0x0F)];
    4d26:	0914      	lsrs	r4, r2, #4
    4d28:	f10c 0301 	add.w	r3, ip, #1
    4d2c:	b29b      	uxth	r3, r3
    4d2e:	f8ad 3016 	strh.w	r3, [sp, #22]
    4d32:	481d      	ldr	r0, [pc, #116]	; (4da8 <Console_PhyToJSONV2+0x168>)
    4d34:	f810 e004 	ldrb.w	lr, [r0, r4]
    4d38:	4c1a      	ldr	r4, [pc, #104]	; (4da4 <Console_PhyToJSONV2+0x164>)
    4d3a:	f804 e00c 	strb.w	lr, [r4, ip]
        jsonTxBuffer[i++] = HexToAscii[(rx_byte & 0x0F)];
    4d3e:	f002 020f 	and.w	r2, r2, #15
    4d42:	f103 0c01 	add.w	ip, r3, #1
    4d46:	f8ad c016 	strh.w	ip, [sp, #22]
    4d4a:	5c82      	ldrb	r2, [r0, r2]
    4d4c:	54e2      	strb	r2, [r4, r3]
    for( uint8_t j = 0; j < phy_rx->len && i < (JSON_TX_BUFFER_SIZE-(4+4+1)); j++ )
    4d4e:	3101      	adds	r1, #1
    4d50:	b2c9      	uxtb	r1, r1
    4d52:	782b      	ldrb	r3, [r5, #0]
    4d54:	428b      	cmp	r3, r1
    4d56:	d904      	bls.n	4d62 <Console_PhyToJSONV2+0x122>
    4d58:	f8bd c016 	ldrh.w	ip, [sp, #22]
    4d5c:	f5bc 7ffb 	cmp.w	ip, #502	; 0x1f6
    4d60:	d9df      	bls.n	4d22 <Console_PhyToJSONV2+0xe2>
    }
    jsonTxBuffer[i++] = STRING_END_DELIMITER;
    4d62:	f8bd 2016 	ldrh.w	r2, [sp, #22]
    4d66:	1c53      	adds	r3, r2, #1
    4d68:	b29b      	uxth	r3, r3
    4d6a:	f8ad 3016 	strh.w	r3, [sp, #22]
    4d6e:	480d      	ldr	r0, [pc, #52]	; (4da4 <Console_PhyToJSONV2+0x164>)
    4d70:	2122      	movs	r1, #34	; 0x22
    4d72:	5481      	strb	r1, [r0, r2]
    jsonTxBuffer[i++] = '}';
    4d74:	1c5a      	adds	r2, r3, #1
    4d76:	b292      	uxth	r2, r2
    4d78:	f8ad 2016 	strh.w	r2, [sp, #22]
    4d7c:	217d      	movs	r1, #125	; 0x7d
    4d7e:	54c1      	strb	r1, [r0, r3]
    jsonTxBuffer[i++] = '\n';
    4d80:	1c53      	adds	r3, r2, #1
    4d82:	b29b      	uxth	r3, r3
    4d84:	f8ad 3016 	strh.w	r3, [sp, #22]
    4d88:	210a      	movs	r1, #10
    4d8a:	5481      	strb	r1, [r0, r2]
    jsonTxBuffer[i++] = '\r';
    4d8c:	1c59      	adds	r1, r3, #1
    4d8e:	b289      	uxth	r1, r1
    4d90:	f8ad 1016 	strh.w	r1, [sp, #22]
    4d94:	220d      	movs	r2, #13
    4d96:	54c2      	strb	r2, [r0, r3]

    Console_Write(jsonTxBuffer, i);
    4d98:	f7ff ff14 	bl	4bc4 <Console_Write>
}
    4d9c:	b007      	add	sp, #28
    4d9e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    4da2:	bf00      	nop
    4da4:	2000028c 	.word	0x2000028c
    4da8:	0000bc74 	.word	0x0000bc74
    4dac:	0000bc70 	.word	0x0000bc70

00004db0 <_out_buffer>:


// internal buffer output
static inline void _out_buffer(char character, void* buffer, size_t idx, size_t maxlen)
{
  if (idx < maxlen) {
    4db0:	429a      	cmp	r2, r3
    4db2:	d200      	bcs.n	4db6 <_out_buffer+0x6>
    ((char*)buffer)[idx] = character;
    4db4:	5488      	strb	r0, [r1, r2]
  }
}
    4db6:	4770      	bx	lr

00004db8 <_out_null>:

// internal null output
static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
{
  (void)character; (void)buffer; (void)idx; (void)maxlen;
}
    4db8:	4770      	bx	lr

00004dba <_atoi>:
}


// internal ASCII string to unsigned int conversion
static unsigned int _atoi(const char** str)
{
    4dba:	4601      	mov	r1, r0
  unsigned int i = 0U;
    4dbc:	2000      	movs	r0, #0
  while (_is_digit(**str)) {
    4dbe:	e007      	b.n	4dd0 <_atoi+0x16>
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
    4dc0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
    4dc4:	1c53      	adds	r3, r2, #1
    4dc6:	600b      	str	r3, [r1, #0]
    4dc8:	7813      	ldrb	r3, [r2, #0]
    4dca:	eb03 0040 	add.w	r0, r3, r0, lsl #1
    4dce:	3830      	subs	r0, #48	; 0x30
  while (_is_digit(**str)) {
    4dd0:	680a      	ldr	r2, [r1, #0]
    4dd2:	7813      	ldrb	r3, [r2, #0]
  return (ch >= '0') && (ch <= '9');
    4dd4:	3b30      	subs	r3, #48	; 0x30
    4dd6:	b2db      	uxtb	r3, r3
  while (_is_digit(**str)) {
    4dd8:	2b09      	cmp	r3, #9
    4dda:	d9f1      	bls.n	4dc0 <_atoi+0x6>
  }
  return i;
}
    4ddc:	4770      	bx	lr

00004dde <_out_rev>:


// output the specified string in reverse, taking care of any zero-padding
static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, size_t len, unsigned int width, unsigned int flags)
{
    4dde:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4de2:	b083      	sub	sp, #12
    4de4:	4605      	mov	r5, r0
    4de6:	460e      	mov	r6, r1
    4de8:	4693      	mov	fp, r2
    4dea:	461f      	mov	r7, r3
    4dec:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
    4df0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
    4df2:	f8dd 9038 	ldr.w	r9, [sp, #56]	; 0x38
  const size_t start_idx = idx;

  // pad spaces up to given width
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
    4df6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4df8:	f013 0f03 	tst.w	r3, #3
    4dfc:	d119      	bne.n	4e32 <_out_rev+0x54>
    for (size_t i = len; i < width; i++) {
    4dfe:	46a0      	mov	r8, r4
    4e00:	9201      	str	r2, [sp, #4]
    4e02:	45c8      	cmp	r8, r9
    4e04:	d209      	bcs.n	4e1a <_out_rev+0x3c>
      out(' ', buffer, idx++, maxlen);
    4e06:	f102 0b01 	add.w	fp, r2, #1
    4e0a:	463b      	mov	r3, r7
    4e0c:	4631      	mov	r1, r6
    4e0e:	2020      	movs	r0, #32
    4e10:	47a8      	blx	r5
    for (size_t i = len; i < width; i++) {
    4e12:	f108 0801 	add.w	r8, r8, #1
      out(' ', buffer, idx++, maxlen);
    4e16:	465a      	mov	r2, fp
    4e18:	e7f3      	b.n	4e02 <_out_rev+0x24>
    4e1a:	f8dd b004 	ldr.w	fp, [sp, #4]
    4e1e:	e008      	b.n	4e32 <_out_rev+0x54>
    }
  }

  // reverse string
  while (len) {
    out(buf[--len], buffer, idx++, maxlen);
    4e20:	3c01      	subs	r4, #1
    4e22:	f102 0801 	add.w	r8, r2, #1
    4e26:	463b      	mov	r3, r7
    4e28:	4631      	mov	r1, r6
    4e2a:	f81a 0004 	ldrb.w	r0, [sl, r4]
    4e2e:	47a8      	blx	r5
    4e30:	4642      	mov	r2, r8
  while (len) {
    4e32:	2c00      	cmp	r4, #0
    4e34:	d1f4      	bne.n	4e20 <_out_rev+0x42>
  }

  // append pad spaces up to given width
  if (flags & FLAGS_LEFT) {
    4e36:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4e38:	f013 0f02 	tst.w	r3, #2
    4e3c:	d103      	bne.n	4e46 <_out_rev+0x68>
      out(' ', buffer, idx++, maxlen);
    }
  }

  return idx;
}
    4e3e:	4610      	mov	r0, r2
    4e40:	b003      	add	sp, #12
    4e42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    while (idx - start_idx < width) {
    4e46:	eba2 030b 	sub.w	r3, r2, fp
    4e4a:	454b      	cmp	r3, r9
    4e4c:	d2f7      	bcs.n	4e3e <_out_rev+0x60>
      out(' ', buffer, idx++, maxlen);
    4e4e:	1c54      	adds	r4, r2, #1
    4e50:	463b      	mov	r3, r7
    4e52:	4631      	mov	r1, r6
    4e54:	2020      	movs	r0, #32
    4e56:	47a8      	blx	r5
    4e58:	4622      	mov	r2, r4
    4e5a:	e7f4      	b.n	4e46 <_out_rev+0x68>

00004e5c <_ntoa_format>:


// internal itoa format
static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, size_t len, bool negative, unsigned int base, unsigned int prec, unsigned int width, unsigned int flags)
{
    4e5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    4e60:	b085      	sub	sp, #20
    4e62:	9d0c      	ldr	r5, [sp, #48]	; 0x30
    4e64:	9c0d      	ldr	r4, [sp, #52]	; 0x34
    4e66:	f89d 9038 	ldrb.w	r9, [sp, #56]	; 0x38
    4e6a:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
    4e6e:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
    4e72:	9f11      	ldr	r7, [sp, #68]	; 0x44
    4e74:	9e12      	ldr	r6, [sp, #72]	; 0x48
  // pad leading zeros
  if (!(flags & FLAGS_LEFT)) {
    4e76:	f016 0f02 	tst.w	r6, #2
    4e7a:	d121      	bne.n	4ec0 <_ntoa_format+0x64>
    if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
    4e7c:	b17f      	cbz	r7, 4e9e <_ntoa_format+0x42>
    4e7e:	f016 0f01 	tst.w	r6, #1
    4e82:	d00c      	beq.n	4e9e <_ntoa_format+0x42>
    4e84:	f1b9 0f00 	cmp.w	r9, #0
    4e88:	d102      	bne.n	4e90 <_ntoa_format+0x34>
    4e8a:	f016 0f0c 	tst.w	r6, #12
    4e8e:	d006      	beq.n	4e9e <_ntoa_format+0x42>
      width--;
    4e90:	3f01      	subs	r7, #1
    4e92:	e004      	b.n	4e9e <_ntoa_format+0x42>
    }
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
      buf[len++] = '0';
    4e94:	f04f 0c30 	mov.w	ip, #48	; 0x30
    4e98:	f805 c004 	strb.w	ip, [r5, r4]
    4e9c:	3401      	adds	r4, #1
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
    4e9e:	4574      	cmp	r4, lr
    4ea0:	d201      	bcs.n	4ea6 <_ntoa_format+0x4a>
    4ea2:	2c1f      	cmp	r4, #31
    4ea4:	d9f6      	bls.n	4e94 <_ntoa_format+0x38>
    }
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
    4ea6:	f016 0f01 	tst.w	r6, #1
    4eaa:	d009      	beq.n	4ec0 <_ntoa_format+0x64>
    4eac:	42bc      	cmp	r4, r7
    4eae:	d207      	bcs.n	4ec0 <_ntoa_format+0x64>
    4eb0:	2c1f      	cmp	r4, #31
    4eb2:	d805      	bhi.n	4ec0 <_ntoa_format+0x64>
      buf[len++] = '0';
    4eb4:	f04f 0c30 	mov.w	ip, #48	; 0x30
    4eb8:	f805 c004 	strb.w	ip, [r5, r4]
    4ebc:	3401      	adds	r4, #1
    4ebe:	e7f2      	b.n	4ea6 <_ntoa_format+0x4a>
    }
  }

  // handle hash
  if (flags & FLAGS_HASH) {
    4ec0:	f016 0f10 	tst.w	r6, #16
    4ec4:	d017      	beq.n	4ef6 <_ntoa_format+0x9a>
    if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
    4ec6:	f416 6f80 	tst.w	r6, #1024	; 0x400
    4eca:	d104      	bne.n	4ed6 <_ntoa_format+0x7a>
    4ecc:	b11c      	cbz	r4, 4ed6 <_ntoa_format+0x7a>
    4ece:	4574      	cmp	r4, lr
    4ed0:	d024      	beq.n	4f1c <_ntoa_format+0xc0>
    4ed2:	42bc      	cmp	r4, r7
    4ed4:	d022      	beq.n	4f1c <_ntoa_format+0xc0>
      len--;
      if (len && (base == 16U)) {
        len--;
      }
    }
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
    4ed6:	f1b8 0f10 	cmp.w	r8, #16
    4eda:	d02b      	beq.n	4f34 <_ntoa_format+0xd8>
      buf[len++] = 'x';
    }
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
    4edc:	f1b8 0f10 	cmp.w	r8, #16
    4ee0:	d033      	beq.n	4f4a <_ntoa_format+0xee>
      buf[len++] = 'X';
    }
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
    4ee2:	f1b8 0f02 	cmp.w	r8, #2
    4ee6:	d03b      	beq.n	4f60 <_ntoa_format+0x104>
      buf[len++] = 'b';
    }
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
    4ee8:	2c1f      	cmp	r4, #31
    4eea:	d804      	bhi.n	4ef6 <_ntoa_format+0x9a>
      buf[len++] = '0';
    4eec:	f04f 0c30 	mov.w	ip, #48	; 0x30
    4ef0:	f805 c004 	strb.w	ip, [r5, r4]
    4ef4:	3401      	adds	r4, #1
    }
  }

  if (len < PRINTF_NTOA_BUFFER_SIZE) {
    4ef6:	2c1f      	cmp	r4, #31
    4ef8:	d807      	bhi.n	4f0a <_ntoa_format+0xae>
    if (negative) {
    4efa:	f1b9 0f00 	cmp.w	r9, #0
    4efe:	d037      	beq.n	4f70 <_ntoa_format+0x114>
      buf[len++] = '-';
    4f00:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
    4f04:	f805 c004 	strb.w	ip, [r5, r4]
    4f08:	3401      	adds	r4, #1
    else if (flags & FLAGS_SPACE) {
      buf[len++] = ' ';
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
    4f0a:	9603      	str	r6, [sp, #12]
    4f0c:	9702      	str	r7, [sp, #8]
    4f0e:	9401      	str	r4, [sp, #4]
    4f10:	9500      	str	r5, [sp, #0]
    4f12:	f7ff ff64 	bl	4dde <_out_rev>
}
    4f16:	b005      	add	sp, #20
    4f18:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
      if (len && (base == 16U)) {
    4f1c:	f1b4 0c01 	subs.w	ip, r4, #1
    4f20:	d006      	beq.n	4f30 <_ntoa_format+0xd4>
    4f22:	f1b8 0f10 	cmp.w	r8, #16
    4f26:	d001      	beq.n	4f2c <_ntoa_format+0xd0>
      len--;
    4f28:	4664      	mov	r4, ip
    4f2a:	e7d4      	b.n	4ed6 <_ntoa_format+0x7a>
        len--;
    4f2c:	3c02      	subs	r4, #2
    4f2e:	e7d2      	b.n	4ed6 <_ntoa_format+0x7a>
      len--;
    4f30:	4664      	mov	r4, ip
    4f32:	e7d0      	b.n	4ed6 <_ntoa_format+0x7a>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
    4f34:	f016 0f20 	tst.w	r6, #32
    4f38:	d1d0      	bne.n	4edc <_ntoa_format+0x80>
    4f3a:	2c1f      	cmp	r4, #31
    4f3c:	d8ce      	bhi.n	4edc <_ntoa_format+0x80>
      buf[len++] = 'x';
    4f3e:	f04f 0c78 	mov.w	ip, #120	; 0x78
    4f42:	f805 c004 	strb.w	ip, [r5, r4]
    4f46:	3401      	adds	r4, #1
    4f48:	e7ce      	b.n	4ee8 <_ntoa_format+0x8c>
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
    4f4a:	f016 0f20 	tst.w	r6, #32
    4f4e:	d0c8      	beq.n	4ee2 <_ntoa_format+0x86>
    4f50:	2c1f      	cmp	r4, #31
    4f52:	d8c6      	bhi.n	4ee2 <_ntoa_format+0x86>
      buf[len++] = 'X';
    4f54:	f04f 0c58 	mov.w	ip, #88	; 0x58
    4f58:	f805 c004 	strb.w	ip, [r5, r4]
    4f5c:	3401      	adds	r4, #1
    4f5e:	e7c3      	b.n	4ee8 <_ntoa_format+0x8c>
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
    4f60:	2c1f      	cmp	r4, #31
    4f62:	d8c1      	bhi.n	4ee8 <_ntoa_format+0x8c>
      buf[len++] = 'b';
    4f64:	f04f 0c62 	mov.w	ip, #98	; 0x62
    4f68:	f805 c004 	strb.w	ip, [r5, r4]
    4f6c:	3401      	adds	r4, #1
    4f6e:	e7bb      	b.n	4ee8 <_ntoa_format+0x8c>
    else if (flags & FLAGS_PLUS) {
    4f70:	f016 0f04 	tst.w	r6, #4
    4f74:	d005      	beq.n	4f82 <_ntoa_format+0x126>
      buf[len++] = '+';  // ignore the space if the '+' exists
    4f76:	f04f 0c2b 	mov.w	ip, #43	; 0x2b
    4f7a:	f805 c004 	strb.w	ip, [r5, r4]
    4f7e:	3401      	adds	r4, #1
    4f80:	e7c3      	b.n	4f0a <_ntoa_format+0xae>
    else if (flags & FLAGS_SPACE) {
    4f82:	f016 0f08 	tst.w	r6, #8
    4f86:	d0c0      	beq.n	4f0a <_ntoa_format+0xae>
      buf[len++] = ' ';
    4f88:	f04f 0c20 	mov.w	ip, #32
    4f8c:	f805 c004 	strb.w	ip, [r5, r4]
    4f90:	3401      	adds	r4, #1
    4f92:	e7ba      	b.n	4f0a <_ntoa_format+0xae>

00004f94 <_ntoa_long>:


// internal itoa for 'long' type
static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long value, bool negative, unsigned long base, unsigned int prec, unsigned int width, unsigned int flags)
{
    4f94:	b5f0      	push	{r4, r5, r6, r7, lr}
    4f96:	b091      	sub	sp, #68	; 0x44
    4f98:	9c16      	ldr	r4, [sp, #88]	; 0x58
    4f9a:	9d18      	ldr	r5, [sp, #96]	; 0x60
    4f9c:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
    4f9e:	b90c      	cbnz	r4, 4fa4 <_ntoa_long+0x10>
    flags &= ~FLAGS_HASH;
    4fa0:	f026 0610 	bic.w	r6, r6, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
    4fa4:	f416 6e80 	ands.w	lr, r6, #1024	; 0x400
    4fa8:	d016      	beq.n	4fd8 <_ntoa_long+0x44>
    4faa:	b364      	cbz	r4, 5006 <_ntoa_long+0x72>
    4fac:	f04f 0e00 	mov.w	lr, #0
    4fb0:	e012      	b.n	4fd8 <_ntoa_long+0x44>
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
    4fb2:	f10c 0c30 	add.w	ip, ip, #48	; 0x30
    4fb6:	fa5f fc8c 	uxtb.w	ip, ip
    4fba:	f10e 0701 	add.w	r7, lr, #1
    4fbe:	f10e 0e40 	add.w	lr, lr, #64	; 0x40
    4fc2:	44ee      	add	lr, sp
    4fc4:	f80e cc20 	strb.w	ip, [lr, #-32]
      value /= base;
    4fc8:	fbb4 fcf5 	udiv	ip, r4, r5
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
    4fcc:	42ac      	cmp	r4, r5
    4fce:	d31b      	bcc.n	5008 <_ntoa_long+0x74>
    4fd0:	2f1f      	cmp	r7, #31
    4fd2:	d819      	bhi.n	5008 <_ntoa_long+0x74>
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
    4fd4:	46be      	mov	lr, r7
      value /= base;
    4fd6:	4664      	mov	r4, ip
      const char digit = (char)(value % base);
    4fd8:	fbb4 fcf5 	udiv	ip, r4, r5
    4fdc:	fb05 4c1c 	mls	ip, r5, ip, r4
    4fe0:	fa5f fc8c 	uxtb.w	ip, ip
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
    4fe4:	f1bc 0f09 	cmp.w	ip, #9
    4fe8:	d9e3      	bls.n	4fb2 <_ntoa_long+0x1e>
    4fea:	f016 0f20 	tst.w	r6, #32
    4fee:	d008      	beq.n	5002 <_ntoa_long+0x6e>
    4ff0:	2741      	movs	r7, #65	; 0x41
    4ff2:	44bc      	add	ip, r7
    4ff4:	fa5f fc8c 	uxtb.w	ip, ip
    4ff8:	f1ac 0c0a 	sub.w	ip, ip, #10
    4ffc:	fa5f fc8c 	uxtb.w	ip, ip
    5000:	e7db      	b.n	4fba <_ntoa_long+0x26>
    5002:	2761      	movs	r7, #97	; 0x61
    5004:	e7f5      	b.n	4ff2 <_ntoa_long+0x5e>
  size_t len = 0U;
    5006:	4627      	mov	r7, r4
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
    5008:	9606      	str	r6, [sp, #24]
    500a:	9c1a      	ldr	r4, [sp, #104]	; 0x68
    500c:	9405      	str	r4, [sp, #20]
    500e:	9c19      	ldr	r4, [sp, #100]	; 0x64
    5010:	9404      	str	r4, [sp, #16]
    5012:	9503      	str	r5, [sp, #12]
    5014:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
    5018:	9402      	str	r4, [sp, #8]
    501a:	9701      	str	r7, [sp, #4]
    501c:	ac08      	add	r4, sp, #32
    501e:	9400      	str	r4, [sp, #0]
    5020:	f7ff ff1c 	bl	4e5c <_ntoa_format>
}
    5024:	b011      	add	sp, #68	; 0x44
    5026:	bdf0      	pop	{r4, r5, r6, r7, pc}

00005028 <_ntoa_long_long>:


// internal itoa for 'long long' type
#if defined(PRINTF_SUPPORT_LONG_LONG)
static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long long value, bool negative, unsigned long long base, unsigned int prec, unsigned int width, unsigned int flags)
{
    5028:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    502c:	b095      	sub	sp, #84	; 0x54
    502e:	9009      	str	r0, [sp, #36]	; 0x24
    5030:	910a      	str	r1, [sp, #40]	; 0x28
    5032:	920b      	str	r2, [sp, #44]	; 0x2c
    5034:	469b      	mov	fp, r3
    5036:	9d1e      	ldr	r5, [sp, #120]	; 0x78
    5038:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
    503a:	9f22      	ldr	r7, [sp, #136]	; 0x88
    503c:	f8dd 808c 	ldr.w	r8, [sp, #140]	; 0x8c
    5040:	f8dd a098 	ldr.w	sl, [sp, #152]	; 0x98
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
    5044:	ea55 0306 	orrs.w	r3, r5, r6
    5048:	d101      	bne.n	504e <_ntoa_long_long+0x26>
    flags &= ~FLAGS_HASH;
    504a:	f02a 0a10 	bic.w	sl, sl, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
    504e:	f41a 6480 	ands.w	r4, sl, #1024	; 0x400
    5052:	d01f      	beq.n	5094 <_ntoa_long_long+0x6c>
    5054:	ea55 0306 	orrs.w	r3, r5, r6
    5058:	d030      	beq.n	50bc <_ntoa_long_long+0x94>
    505a:	2400      	movs	r4, #0
    505c:	e01a      	b.n	5094 <_ntoa_long_long+0x6c>
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
    505e:	f103 0230 	add.w	r2, r3, #48	; 0x30
    5062:	b2d2      	uxtb	r2, r2
    5064:	f104 0901 	add.w	r9, r4, #1
    5068:	f104 0350 	add.w	r3, r4, #80	; 0x50
    506c:	eb0d 0403 	add.w	r4, sp, r3
    5070:	f804 2c20 	strb.w	r2, [r4, #-32]
      value /= base;
    5074:	463a      	mov	r2, r7
    5076:	4643      	mov	r3, r8
    5078:	4628      	mov	r0, r5
    507a:	4631      	mov	r1, r6
    507c:	f006 fb92 	bl	b7a4 <__aeabi_uldivmod>
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
    5080:	42bd      	cmp	r5, r7
    5082:	eb76 0308 	sbcs.w	r3, r6, r8
    5086:	d31b      	bcc.n	50c0 <_ntoa_long_long+0x98>
    5088:	f1b9 0f1f 	cmp.w	r9, #31
    508c:	d818      	bhi.n	50c0 <_ntoa_long_long+0x98>
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
    508e:	464c      	mov	r4, r9
      value /= base;
    5090:	4605      	mov	r5, r0
    5092:	460e      	mov	r6, r1
      const char digit = (char)(value % base);
    5094:	463a      	mov	r2, r7
    5096:	4643      	mov	r3, r8
    5098:	4628      	mov	r0, r5
    509a:	4631      	mov	r1, r6
    509c:	f006 fb82 	bl	b7a4 <__aeabi_uldivmod>
    50a0:	b2d3      	uxtb	r3, r2
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
    50a2:	2b09      	cmp	r3, #9
    50a4:	d9db      	bls.n	505e <_ntoa_long_long+0x36>
    50a6:	f01a 0f20 	tst.w	sl, #32
    50aa:	d005      	beq.n	50b8 <_ntoa_long_long+0x90>
    50ac:	2241      	movs	r2, #65	; 0x41
    50ae:	441a      	add	r2, r3
    50b0:	b2d2      	uxtb	r2, r2
    50b2:	3a0a      	subs	r2, #10
    50b4:	b2d2      	uxtb	r2, r2
    50b6:	e7d5      	b.n	5064 <_ntoa_long_long+0x3c>
    50b8:	2261      	movs	r2, #97	; 0x61
    50ba:	e7f8      	b.n	50ae <_ntoa_long_long+0x86>
  size_t len = 0U;
    50bc:	f04f 0900 	mov.w	r9, #0
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
    50c0:	f8cd a018 	str.w	sl, [sp, #24]
    50c4:	9b25      	ldr	r3, [sp, #148]	; 0x94
    50c6:	9305      	str	r3, [sp, #20]
    50c8:	9b24      	ldr	r3, [sp, #144]	; 0x90
    50ca:	9304      	str	r3, [sp, #16]
    50cc:	9703      	str	r7, [sp, #12]
    50ce:	f89d 3080 	ldrb.w	r3, [sp, #128]	; 0x80
    50d2:	9302      	str	r3, [sp, #8]
    50d4:	f8cd 9004 	str.w	r9, [sp, #4]
    50d8:	ab0c      	add	r3, sp, #48	; 0x30
    50da:	9300      	str	r3, [sp, #0]
    50dc:	465b      	mov	r3, fp
    50de:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    50e0:	990a      	ldr	r1, [sp, #40]	; 0x28
    50e2:	9809      	ldr	r0, [sp, #36]	; 0x24
    50e4:	f7ff feba 	bl	4e5c <_ntoa_format>
}
    50e8:	b015      	add	sp, #84	; 0x54
    50ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

000050f0 <_vsnprintf>:
#endif  // PRINTF_SUPPORT_FLOAT


// internal vsnprintf
static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_list va)
{
    50f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    50f4:	b08f      	sub	sp, #60	; 0x3c
    50f6:	4607      	mov	r7, r0
    50f8:	4616      	mov	r6, r2
    50fa:	930d      	str	r3, [sp, #52]	; 0x34
  unsigned int flags, width, precision, n;
  size_t idx = 0U;

  if (!buffer) {
    50fc:	468b      	mov	fp, r1
    50fe:	2900      	cmp	r1, #0
    5100:	f000 82d8 	beq.w	56b4 <_vsnprintf+0x5c4>
        format++;
        break;
      }

      case '%' :
        out('%', buffer, idx++, maxlen);
    5104:	2400      	movs	r4, #0
  while (*format)
    5106:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    5108:	7818      	ldrb	r0, [r3, #0]
    510a:	2800      	cmp	r0, #0
    510c:	f000 82d4 	beq.w	56b8 <_vsnprintf+0x5c8>
    if (*format != '%') {
    5110:	2825      	cmp	r0, #37	; 0x25
    5112:	d009      	beq.n	5128 <_vsnprintf+0x38>
      out(*format, buffer, idx++, maxlen);
    5114:	1c65      	adds	r5, r4, #1
    5116:	4633      	mov	r3, r6
    5118:	4622      	mov	r2, r4
    511a:	4659      	mov	r1, fp
    511c:	47b8      	blx	r7
      format++;
    511e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    5120:	3301      	adds	r3, #1
    5122:	930d      	str	r3, [sp, #52]	; 0x34
      out(*format, buffer, idx++, maxlen);
    5124:	462c      	mov	r4, r5
      continue;
    5126:	e7ee      	b.n	5106 <_vsnprintf+0x16>
      format++;
    5128:	3301      	adds	r3, #1
    512a:	930d      	str	r3, [sp, #52]	; 0x34
    flags = 0U;
    512c:	2500      	movs	r5, #0
      switch (*format) {
    512e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    5130:	7819      	ldrb	r1, [r3, #0]
    5132:	f1a1 0220 	sub.w	r2, r1, #32
    5136:	2a10      	cmp	r2, #16
    5138:	d80a      	bhi.n	5150 <_vsnprintf+0x60>
    513a:	e8df f002 	tbb	[pc, r2]
    513e:	0938      	.short	0x0938
    5140:	09093d09 	.word	0x09093d09
    5144:	09090909 	.word	0x09090909
    5148:	2e093309 	.word	0x2e093309
    514c:	0909      	.short	0x0909
    514e:	29          	.byte	0x29
    514f:	00          	.byte	0x00
  return (ch >= '0') && (ch <= '9');
    5150:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
    5154:	b2db      	uxtb	r3, r3
    if (_is_digit(*format)) {
    5156:	2b09      	cmp	r3, #9
    5158:	d933      	bls.n	51c2 <_vsnprintf+0xd2>
    else if (*format == '*') {
    515a:	292a      	cmp	r1, #42	; 0x2a
    515c:	d036      	beq.n	51cc <_vsnprintf+0xdc>
    width = 0U;
    515e:	2300      	movs	r3, #0
    5160:	930a      	str	r3, [sp, #40]	; 0x28
    if (*format == '.') {
    5162:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    5164:	781a      	ldrb	r2, [r3, #0]
    5166:	2a2e      	cmp	r2, #46	; 0x2e
    5168:	d040      	beq.n	51ec <_vsnprintf+0xfc>
    precision = 0U;
    516a:	f04f 0a00 	mov.w	sl, #0
    switch (*format) {
    516e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    5170:	7813      	ldrb	r3, [r2, #0]
    5172:	3b68      	subs	r3, #104	; 0x68
    5174:	2b12      	cmp	r3, #18
    5176:	d877      	bhi.n	5268 <_vsnprintf+0x178>
    5178:	e8df f003 	tbb	[pc, r3]
    517c:	76727664 	.word	0x76727664
    5180:	76767656 	.word	0x76767656
    5184:	76767676 	.word	0x76767676
    5188:	76767676 	.word	0x76767676
    518c:	7676      	.short	0x7676
    518e:	d3          	.byte	0xd3
    518f:	00          	.byte	0x00
        case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
    5190:	f045 0501 	orr.w	r5, r5, #1
    5194:	3301      	adds	r3, #1
    5196:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
    5198:	e7c9      	b.n	512e <_vsnprintf+0x3e>
        case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
    519a:	f045 0502 	orr.w	r5, r5, #2
    519e:	3301      	adds	r3, #1
    51a0:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
    51a2:	e7c4      	b.n	512e <_vsnprintf+0x3e>
        case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
    51a4:	f045 0504 	orr.w	r5, r5, #4
    51a8:	3301      	adds	r3, #1
    51aa:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
    51ac:	e7bf      	b.n	512e <_vsnprintf+0x3e>
        case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
    51ae:	f045 0508 	orr.w	r5, r5, #8
    51b2:	3301      	adds	r3, #1
    51b4:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
    51b6:	e7ba      	b.n	512e <_vsnprintf+0x3e>
        case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
    51b8:	f045 0510 	orr.w	r5, r5, #16
    51bc:	3301      	adds	r3, #1
    51be:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
    51c0:	e7b5      	b.n	512e <_vsnprintf+0x3e>
      width = _atoi(&format);
    51c2:	a80d      	add	r0, sp, #52	; 0x34
    51c4:	f7ff fdf9 	bl	4dba <_atoi>
    51c8:	900a      	str	r0, [sp, #40]	; 0x28
    51ca:	e7ca      	b.n	5162 <_vsnprintf+0x72>
      const int w = va_arg(va, int);
    51cc:	9b18      	ldr	r3, [sp, #96]	; 0x60
    51ce:	1d1a      	adds	r2, r3, #4
    51d0:	9218      	str	r2, [sp, #96]	; 0x60
    51d2:	6818      	ldr	r0, [r3, #0]
      if (w < 0) {
    51d4:	2800      	cmp	r0, #0
    51d6:	db04      	blt.n	51e2 <_vsnprintf+0xf2>
        width = (unsigned int)w;
    51d8:	900a      	str	r0, [sp, #40]	; 0x28
      format++;
    51da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    51dc:	3301      	adds	r3, #1
    51de:	930d      	str	r3, [sp, #52]	; 0x34
    51e0:	e7bf      	b.n	5162 <_vsnprintf+0x72>
        flags |= FLAGS_LEFT;    // reverse padding
    51e2:	f045 0502 	orr.w	r5, r5, #2
        width = (unsigned int)-w;
    51e6:	4243      	negs	r3, r0
    51e8:	930a      	str	r3, [sp, #40]	; 0x28
    51ea:	e7f6      	b.n	51da <_vsnprintf+0xea>
      flags |= FLAGS_PRECISION;
    51ec:	f445 6580 	orr.w	r5, r5, #1024	; 0x400
      format++;
    51f0:	1c5a      	adds	r2, r3, #1
    51f2:	920d      	str	r2, [sp, #52]	; 0x34
      if (_is_digit(*format)) {
    51f4:	785a      	ldrb	r2, [r3, #1]
  return (ch >= '0') && (ch <= '9');
    51f6:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
    51fa:	b2db      	uxtb	r3, r3
      if (_is_digit(*format)) {
    51fc:	2b09      	cmp	r3, #9
    51fe:	d904      	bls.n	520a <_vsnprintf+0x11a>
      else if (*format == '*') {
    5200:	2a2a      	cmp	r2, #42	; 0x2a
    5202:	d007      	beq.n	5214 <_vsnprintf+0x124>
    precision = 0U;
    5204:	f04f 0a00 	mov.w	sl, #0
    5208:	e7b1      	b.n	516e <_vsnprintf+0x7e>
        precision = _atoi(&format);
    520a:	a80d      	add	r0, sp, #52	; 0x34
    520c:	f7ff fdd5 	bl	4dba <_atoi>
    5210:	4682      	mov	sl, r0
    5212:	e7ac      	b.n	516e <_vsnprintf+0x7e>
        const int prec = (int)va_arg(va, int);
    5214:	9b18      	ldr	r3, [sp, #96]	; 0x60
    5216:	1d1a      	adds	r2, r3, #4
    5218:	9218      	str	r2, [sp, #96]	; 0x60
    521a:	681b      	ldr	r3, [r3, #0]
        precision = prec > 0 ? (unsigned int)prec : 0U;
    521c:	ea23 7ae3 	bic.w	sl, r3, r3, asr #31
        format++;
    5220:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    5222:	3301      	adds	r3, #1
    5224:	930d      	str	r3, [sp, #52]	; 0x34
    5226:	e7a2      	b.n	516e <_vsnprintf+0x7e>
        flags |= FLAGS_LONG;
    5228:	f445 7180 	orr.w	r1, r5, #256	; 0x100
        format++;
    522c:	1c53      	adds	r3, r2, #1
    522e:	930d      	str	r3, [sp, #52]	; 0x34
        if (*format == 'l') {
    5230:	7852      	ldrb	r2, [r2, #1]
    5232:	2a6c      	cmp	r2, #108	; 0x6c
    5234:	d001      	beq.n	523a <_vsnprintf+0x14a>
        flags |= FLAGS_LONG;
    5236:	460d      	mov	r5, r1
    5238:	e016      	b.n	5268 <_vsnprintf+0x178>
          flags |= FLAGS_LONG_LONG;
    523a:	f445 7540 	orr.w	r5, r5, #768	; 0x300
          format++;
    523e:	3301      	adds	r3, #1
    5240:	930d      	str	r3, [sp, #52]	; 0x34
    5242:	e011      	b.n	5268 <_vsnprintf+0x178>
        flags |= FLAGS_SHORT;
    5244:	f045 0180 	orr.w	r1, r5, #128	; 0x80
        format++;
    5248:	1c53      	adds	r3, r2, #1
    524a:	930d      	str	r3, [sp, #52]	; 0x34
        if (*format == 'h') {
    524c:	7852      	ldrb	r2, [r2, #1]
    524e:	2a68      	cmp	r2, #104	; 0x68
    5250:	d001      	beq.n	5256 <_vsnprintf+0x166>
        flags |= FLAGS_SHORT;
    5252:	460d      	mov	r5, r1
    5254:	e008      	b.n	5268 <_vsnprintf+0x178>
          flags |= FLAGS_CHAR;
    5256:	f045 05c0 	orr.w	r5, r5, #192	; 0xc0
          format++;
    525a:	3301      	adds	r3, #1
    525c:	930d      	str	r3, [sp, #52]	; 0x34
    525e:	e003      	b.n	5268 <_vsnprintf+0x178>
        flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
    5260:	f445 7500 	orr.w	r5, r5, #512	; 0x200
        format++;
    5264:	3201      	adds	r2, #1
    5266:	920d      	str	r2, [sp, #52]	; 0x34
    switch (*format) {
    5268:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    526a:	7818      	ldrb	r0, [r3, #0]
    526c:	f1a0 0325 	sub.w	r3, r0, #37	; 0x25
    5270:	2b53      	cmp	r3, #83	; 0x53
    5272:	f200 8215 	bhi.w	56a0 <_vsnprintf+0x5b0>
    5276:	e8df f013 	tbh	[pc, r3, lsl #1]
    527a:	0208      	.short	0x0208
    527c:	02130213 	.word	0x02130213
    5280:	02130213 	.word	0x02130213
    5284:	02130213 	.word	0x02130213
    5288:	02130213 	.word	0x02130213
    528c:	02130213 	.word	0x02130213
    5290:	02130213 	.word	0x02130213
    5294:	02130213 	.word	0x02130213
    5298:	02130213 	.word	0x02130213
    529c:	02130213 	.word	0x02130213
    52a0:	02130213 	.word	0x02130213
    52a4:	02130213 	.word	0x02130213
    52a8:	02130213 	.word	0x02130213
    52ac:	02130213 	.word	0x02130213
    52b0:	02130213 	.word	0x02130213
    52b4:	02130213 	.word	0x02130213
    52b8:	02130213 	.word	0x02130213
    52bc:	02130213 	.word	0x02130213
    52c0:	02130213 	.word	0x02130213
    52c4:	02130213 	.word	0x02130213
    52c8:	02130213 	.word	0x02130213
    52cc:	02130213 	.word	0x02130213
    52d0:	02130213 	.word	0x02130213
    52d4:	02130213 	.word	0x02130213
    52d8:	02130213 	.word	0x02130213
    52dc:	02130213 	.word	0x02130213
    52e0:	02130059 	.word	0x02130059
    52e4:	02130213 	.word	0x02130213
    52e8:	02130213 	.word	0x02130213
    52ec:	02130213 	.word	0x02130213
    52f0:	02130213 	.word	0x02130213
    52f4:	014f0059 	.word	0x014f0059
    52f8:	02130059 	.word	0x02130059
    52fc:	02130213 	.word	0x02130213
    5300:	00590213 	.word	0x00590213
    5304:	02130213 	.word	0x02130213
    5308:	02130213 	.word	0x02130213
    530c:	00590213 	.word	0x00590213
    5310:	021301ed 	.word	0x021301ed
    5314:	01880213 	.word	0x01880213
    5318:	00590213 	.word	0x00590213
    531c:	02130213 	.word	0x02130213
    5320:	0059      	.short	0x0059
        flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
    5322:	f445 7580 	orr.w	r5, r5, #256	; 0x100
        format++;
    5326:	3201      	adds	r2, #1
    5328:	920d      	str	r2, [sp, #52]	; 0x34
        break;
    532a:	e79d      	b.n	5268 <_vsnprintf+0x178>
        if (*format == 'x' || *format == 'X') {
    532c:	2878      	cmp	r0, #120	; 0x78
    532e:	d009      	beq.n	5344 <_vsnprintf+0x254>
    5330:	2858      	cmp	r0, #88	; 0x58
    5332:	d03a      	beq.n	53aa <_vsnprintf+0x2ba>
        else if (*format == 'o') {
    5334:	286f      	cmp	r0, #111	; 0x6f
    5336:	d03a      	beq.n	53ae <_vsnprintf+0x2be>
        else if (*format == 'b') {
    5338:	2862      	cmp	r0, #98	; 0x62
    533a:	d03a      	beq.n	53b2 <_vsnprintf+0x2c2>
          flags &= ~FLAGS_HASH;   // no hash for dec format
    533c:	f025 0510 	bic.w	r5, r5, #16
          base = 10U;
    5340:	230a      	movs	r3, #10
    5342:	e000      	b.n	5346 <_vsnprintf+0x256>
          base = 16U;
    5344:	2310      	movs	r3, #16
        if (*format == 'X') {
    5346:	2858      	cmp	r0, #88	; 0x58
    5348:	d035      	beq.n	53b6 <_vsnprintf+0x2c6>
        if ((*format != 'i') && (*format != 'd')) {
    534a:	2869      	cmp	r0, #105	; 0x69
    534c:	d003      	beq.n	5356 <_vsnprintf+0x266>
    534e:	2864      	cmp	r0, #100	; 0x64
    5350:	d001      	beq.n	5356 <_vsnprintf+0x266>
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
    5352:	f025 050c 	bic.w	r5, r5, #12
        if (flags & FLAGS_PRECISION) {
    5356:	f415 6f80 	tst.w	r5, #1024	; 0x400
    535a:	d001      	beq.n	5360 <_vsnprintf+0x270>
          flags &= ~FLAGS_ZEROPAD;
    535c:	f025 0501 	bic.w	r5, r5, #1
        if ((*format == 'i') || (*format == 'd')) {
    5360:	2869      	cmp	r0, #105	; 0x69
    5362:	d02b      	beq.n	53bc <_vsnprintf+0x2cc>
    5364:	2864      	cmp	r0, #100	; 0x64
    5366:	d029      	beq.n	53bc <_vsnprintf+0x2cc>
          if (flags & FLAGS_LONG_LONG) {
    5368:	f415 7f00 	tst.w	r5, #512	; 0x200
    536c:	f040 8096 	bne.w	549c <_vsnprintf+0x3ac>
          else if (flags & FLAGS_LONG) {
    5370:	f415 7f80 	tst.w	r5, #256	; 0x100
    5374:	f040 80ae 	bne.w	54d4 <_vsnprintf+0x3e4>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
    5378:	f015 0f40 	tst.w	r5, #64	; 0x40
    537c:	f000 80bf 	beq.w	54fe <_vsnprintf+0x40e>
    5380:	9a18      	ldr	r2, [sp, #96]	; 0x60
    5382:	1d11      	adds	r1, r2, #4
    5384:	9118      	str	r1, [sp, #96]	; 0x60
    5386:	7812      	ldrb	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
    5388:	9505      	str	r5, [sp, #20]
    538a:	990a      	ldr	r1, [sp, #40]	; 0x28
    538c:	9104      	str	r1, [sp, #16]
    538e:	f8cd a00c 	str.w	sl, [sp, #12]
    5392:	9302      	str	r3, [sp, #8]
    5394:	2300      	movs	r3, #0
    5396:	9301      	str	r3, [sp, #4]
    5398:	9200      	str	r2, [sp, #0]
    539a:	4633      	mov	r3, r6
    539c:	4622      	mov	r2, r4
    539e:	4659      	mov	r1, fp
    53a0:	4638      	mov	r0, r7
    53a2:	f7ff fdf7 	bl	4f94 <_ntoa_long>
    53a6:	4604      	mov	r4, r0
    53a8:	e029      	b.n	53fe <_vsnprintf+0x30e>
          base = 16U;
    53aa:	2310      	movs	r3, #16
    53ac:	e7cb      	b.n	5346 <_vsnprintf+0x256>
          base =  8U;
    53ae:	2308      	movs	r3, #8
    53b0:	e7c9      	b.n	5346 <_vsnprintf+0x256>
          base =  2U;
    53b2:	2302      	movs	r3, #2
    53b4:	e7c7      	b.n	5346 <_vsnprintf+0x256>
          flags |= FLAGS_UPPERCASE;
    53b6:	f045 0520 	orr.w	r5, r5, #32
    53ba:	e7c6      	b.n	534a <_vsnprintf+0x25a>
          if (flags & FLAGS_LONG_LONG) {
    53bc:	f415 7f00 	tst.w	r5, #512	; 0x200
    53c0:	d121      	bne.n	5406 <_vsnprintf+0x316>
          else if (flags & FLAGS_LONG) {
    53c2:	f415 7f80 	tst.w	r5, #256	; 0x100
    53c6:	d142      	bne.n	544e <_vsnprintf+0x35e>
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
    53c8:	f015 0f40 	tst.w	r5, #64	; 0x40
    53cc:	d058      	beq.n	5480 <_vsnprintf+0x390>
    53ce:	9a18      	ldr	r2, [sp, #96]	; 0x60
    53d0:	1d11      	adds	r1, r2, #4
    53d2:	9118      	str	r1, [sp, #96]	; 0x60
    53d4:	7812      	ldrb	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
    53d6:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
    53da:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
    53de:	9505      	str	r5, [sp, #20]
    53e0:	980a      	ldr	r0, [sp, #40]	; 0x28
    53e2:	9004      	str	r0, [sp, #16]
    53e4:	f8cd a00c 	str.w	sl, [sp, #12]
    53e8:	9302      	str	r3, [sp, #8]
    53ea:	0fd2      	lsrs	r2, r2, #31
    53ec:	9201      	str	r2, [sp, #4]
    53ee:	9100      	str	r1, [sp, #0]
    53f0:	4633      	mov	r3, r6
    53f2:	4622      	mov	r2, r4
    53f4:	4659      	mov	r1, fp
    53f6:	4638      	mov	r0, r7
    53f8:	f7ff fdcc 	bl	4f94 <_ntoa_long>
    53fc:	4604      	mov	r4, r0
        format++;
    53fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    5400:	3301      	adds	r3, #1
    5402:	930d      	str	r3, [sp, #52]	; 0x34
        break;
    5404:	e67f      	b.n	5106 <_vsnprintf+0x16>
            const long long value = va_arg(va, long long);
    5406:	9a18      	ldr	r2, [sp, #96]	; 0x60
    5408:	3207      	adds	r2, #7
    540a:	f022 0207 	bic.w	r2, r2, #7
    540e:	f102 0108 	add.w	r1, r2, #8
    5412:	9118      	str	r1, [sp, #96]	; 0x60
    5414:	6851      	ldr	r1, [r2, #4]
            idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
    5416:	6812      	ldr	r2, [r2, #0]
    5418:	4608      	mov	r0, r1
    541a:	2900      	cmp	r1, #0
    541c:	db13      	blt.n	5446 <_vsnprintf+0x356>
    541e:	9508      	str	r5, [sp, #32]
    5420:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    5422:	9507      	str	r5, [sp, #28]
    5424:	f8cd a018 	str.w	sl, [sp, #24]
    5428:	9304      	str	r3, [sp, #16]
    542a:	2300      	movs	r3, #0
    542c:	9305      	str	r3, [sp, #20]
    542e:	0fc9      	lsrs	r1, r1, #31
    5430:	9102      	str	r1, [sp, #8]
    5432:	9200      	str	r2, [sp, #0]
    5434:	9001      	str	r0, [sp, #4]
    5436:	4633      	mov	r3, r6
    5438:	4622      	mov	r2, r4
    543a:	4659      	mov	r1, fp
    543c:	4638      	mov	r0, r7
    543e:	f7ff fdf3 	bl	5028 <_ntoa_long_long>
    5442:	4604      	mov	r4, r0
    5444:	e7db      	b.n	53fe <_vsnprintf+0x30e>
    5446:	4252      	negs	r2, r2
    5448:	eb61 0041 	sbc.w	r0, r1, r1, lsl #1
    544c:	e7e7      	b.n	541e <_vsnprintf+0x32e>
            const long value = va_arg(va, long);
    544e:	9a18      	ldr	r2, [sp, #96]	; 0x60
    5450:	1d11      	adds	r1, r2, #4
    5452:	9118      	str	r1, [sp, #96]	; 0x60
    5454:	6812      	ldr	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
    5456:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
    545a:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
    545e:	9505      	str	r5, [sp, #20]
    5460:	980a      	ldr	r0, [sp, #40]	; 0x28
    5462:	9004      	str	r0, [sp, #16]
    5464:	f8cd a00c 	str.w	sl, [sp, #12]
    5468:	9302      	str	r3, [sp, #8]
    546a:	0fd2      	lsrs	r2, r2, #31
    546c:	9201      	str	r2, [sp, #4]
    546e:	9100      	str	r1, [sp, #0]
    5470:	4633      	mov	r3, r6
    5472:	4622      	mov	r2, r4
    5474:	4659      	mov	r1, fp
    5476:	4638      	mov	r0, r7
    5478:	f7ff fd8c 	bl	4f94 <_ntoa_long>
    547c:	4604      	mov	r4, r0
    547e:	e7be      	b.n	53fe <_vsnprintf+0x30e>
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
    5480:	f015 0f80 	tst.w	r5, #128	; 0x80
    5484:	d005      	beq.n	5492 <_vsnprintf+0x3a2>
    5486:	9a18      	ldr	r2, [sp, #96]	; 0x60
    5488:	1d11      	adds	r1, r2, #4
    548a:	9118      	str	r1, [sp, #96]	; 0x60
    548c:	f9b2 2000 	ldrsh.w	r2, [r2]
    5490:	e7a1      	b.n	53d6 <_vsnprintf+0x2e6>
    5492:	9a18      	ldr	r2, [sp, #96]	; 0x60
    5494:	1d11      	adds	r1, r2, #4
    5496:	9118      	str	r1, [sp, #96]	; 0x60
    5498:	6812      	ldr	r2, [r2, #0]
    549a:	e79c      	b.n	53d6 <_vsnprintf+0x2e6>
            idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, base, precision, width, flags);
    549c:	9a18      	ldr	r2, [sp, #96]	; 0x60
    549e:	3207      	adds	r2, #7
    54a0:	f022 0207 	bic.w	r2, r2, #7
    54a4:	f102 0108 	add.w	r1, r2, #8
    54a8:	9118      	str	r1, [sp, #96]	; 0x60
    54aa:	9508      	str	r5, [sp, #32]
    54ac:	990a      	ldr	r1, [sp, #40]	; 0x28
    54ae:	9107      	str	r1, [sp, #28]
    54b0:	f8cd a018 	str.w	sl, [sp, #24]
    54b4:	2100      	movs	r1, #0
    54b6:	9304      	str	r3, [sp, #16]
    54b8:	9105      	str	r1, [sp, #20]
    54ba:	9102      	str	r1, [sp, #8]
    54bc:	e9d2 2300 	ldrd	r2, r3, [r2]
    54c0:	e9cd 2300 	strd	r2, r3, [sp]
    54c4:	4633      	mov	r3, r6
    54c6:	4622      	mov	r2, r4
    54c8:	4659      	mov	r1, fp
    54ca:	4638      	mov	r0, r7
    54cc:	f7ff fdac 	bl	5028 <_ntoa_long_long>
    54d0:	4604      	mov	r4, r0
    54d2:	e794      	b.n	53fe <_vsnprintf+0x30e>
            idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, precision, width, flags);
    54d4:	9a18      	ldr	r2, [sp, #96]	; 0x60
    54d6:	1d11      	adds	r1, r2, #4
    54d8:	9118      	str	r1, [sp, #96]	; 0x60
    54da:	9505      	str	r5, [sp, #20]
    54dc:	990a      	ldr	r1, [sp, #40]	; 0x28
    54de:	9104      	str	r1, [sp, #16]
    54e0:	f8cd a00c 	str.w	sl, [sp, #12]
    54e4:	9302      	str	r3, [sp, #8]
    54e6:	2300      	movs	r3, #0
    54e8:	9301      	str	r3, [sp, #4]
    54ea:	6813      	ldr	r3, [r2, #0]
    54ec:	9300      	str	r3, [sp, #0]
    54ee:	4633      	mov	r3, r6
    54f0:	4622      	mov	r2, r4
    54f2:	4659      	mov	r1, fp
    54f4:	4638      	mov	r0, r7
    54f6:	f7ff fd4d 	bl	4f94 <_ntoa_long>
    54fa:	4604      	mov	r4, r0
    54fc:	e77f      	b.n	53fe <_vsnprintf+0x30e>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
    54fe:	f015 0f80 	tst.w	r5, #128	; 0x80
    5502:	d004      	beq.n	550e <_vsnprintf+0x41e>
    5504:	9a18      	ldr	r2, [sp, #96]	; 0x60
    5506:	1d11      	adds	r1, r2, #4
    5508:	9118      	str	r1, [sp, #96]	; 0x60
    550a:	8812      	ldrh	r2, [r2, #0]
    550c:	e73c      	b.n	5388 <_vsnprintf+0x298>
    550e:	9a18      	ldr	r2, [sp, #96]	; 0x60
    5510:	1d11      	adds	r1, r2, #4
    5512:	9118      	str	r1, [sp, #96]	; 0x60
    5514:	6812      	ldr	r2, [r2, #0]
    5516:	e737      	b.n	5388 <_vsnprintf+0x298>
        if (!(flags & FLAGS_LEFT)) {
    5518:	f015 0502 	ands.w	r5, r5, #2
    551c:	d01f      	beq.n	555e <_vsnprintf+0x46e>
        unsigned int l = 1U;
    551e:	f04f 0801 	mov.w	r8, #1
        out((char)va_arg(va, int), buffer, idx++, maxlen);
    5522:	9818      	ldr	r0, [sp, #96]	; 0x60
    5524:	1d03      	adds	r3, r0, #4
    5526:	9318      	str	r3, [sp, #96]	; 0x60
    5528:	f104 0901 	add.w	r9, r4, #1
    552c:	4633      	mov	r3, r6
    552e:	4622      	mov	r2, r4
    5530:	4659      	mov	r1, fp
    5532:	7800      	ldrb	r0, [r0, #0]
    5534:	47b8      	blx	r7
        if (flags & FLAGS_LEFT) {
    5536:	b9bd      	cbnz	r5, 5568 <_vsnprintf+0x478>
        format++;
    5538:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    553a:	3301      	adds	r3, #1
    553c:	930d      	str	r3, [sp, #52]	; 0x34
        break;
    553e:	464c      	mov	r4, r9
    5540:	e5e1      	b.n	5106 <_vsnprintf+0x16>
            out(' ', buffer, idx++, maxlen);
    5542:	f102 0901 	add.w	r9, r2, #1
    5546:	4633      	mov	r3, r6
    5548:	4659      	mov	r1, fp
    554a:	2020      	movs	r0, #32
    554c:	47b8      	blx	r7
          while (l++ < width) {
    554e:	4643      	mov	r3, r8
            out(' ', buffer, idx++, maxlen);
    5550:	464a      	mov	r2, r9
          while (l++ < width) {
    5552:	f103 0801 	add.w	r8, r3, #1
    5556:	459a      	cmp	sl, r3
    5558:	d8f3      	bhi.n	5542 <_vsnprintf+0x452>
    555a:	4614      	mov	r4, r2
    555c:	e7e1      	b.n	5522 <_vsnprintf+0x432>
        unsigned int l = 1U;
    555e:	2301      	movs	r3, #1
    5560:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
    5564:	4622      	mov	r2, r4
    5566:	e7f4      	b.n	5552 <_vsnprintf+0x462>
    5568:	464a      	mov	r2, r9
    556a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
    556e:	e006      	b.n	557e <_vsnprintf+0x48e>
            out(' ', buffer, idx++, maxlen);
    5570:	1c55      	adds	r5, r2, #1
    5572:	4633      	mov	r3, r6
    5574:	4659      	mov	r1, fp
    5576:	2020      	movs	r0, #32
    5578:	47b8      	blx	r7
          while (l++ < width) {
    557a:	46a0      	mov	r8, r4
            out(' ', buffer, idx++, maxlen);
    557c:	462a      	mov	r2, r5
          while (l++ < width) {
    557e:	f108 0401 	add.w	r4, r8, #1
    5582:	45c1      	cmp	r9, r8
    5584:	d8f4      	bhi.n	5570 <_vsnprintf+0x480>
    5586:	4691      	mov	r9, r2
    5588:	e7d6      	b.n	5538 <_vsnprintf+0x448>
        const char* p = va_arg(va, char*);
    558a:	9b18      	ldr	r3, [sp, #96]	; 0x60
    558c:	1d1a      	adds	r2, r3, #4
    558e:	9218      	str	r2, [sp, #96]	; 0x60
    5590:	f8d3 9000 	ldr.w	r9, [r3]
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
    5594:	f1ba 0f00 	cmp.w	sl, #0
    5598:	d11e      	bne.n	55d8 <_vsnprintf+0x4e8>
    559a:	f04f 33ff 	mov.w	r3, #4294967295
    559e:	46c8      	mov	r8, r9
    55a0:	e002      	b.n	55a8 <_vsnprintf+0x4b8>
  for (s = str; *s && maxsize--; ++s);
    55a2:	f108 0801 	add.w	r8, r8, #1
    55a6:	4613      	mov	r3, r2
    55a8:	f898 2000 	ldrb.w	r2, [r8]
    55ac:	b112      	cbz	r2, 55b4 <_vsnprintf+0x4c4>
    55ae:	1e5a      	subs	r2, r3, #1
    55b0:	2b00      	cmp	r3, #0
    55b2:	d1f6      	bne.n	55a2 <_vsnprintf+0x4b2>
  return (unsigned int)(s - str);
    55b4:	eba8 0809 	sub.w	r8, r8, r9
        if (flags & FLAGS_PRECISION) {
    55b8:	f415 6380 	ands.w	r3, r5, #1024	; 0x400
    55bc:	930b      	str	r3, [sp, #44]	; 0x2c
    55be:	d002      	beq.n	55c6 <_vsnprintf+0x4d6>
          l = (l < precision ? l : precision);
    55c0:	45d0      	cmp	r8, sl
    55c2:	bf28      	it	cs
    55c4:	46d0      	movcs	r8, sl
        if (!(flags & FLAGS_LEFT)) {
    55c6:	f015 0302 	ands.w	r3, r5, #2
    55ca:	930c      	str	r3, [sp, #48]	; 0x30
    55cc:	d006      	beq.n	55dc <_vsnprintf+0x4ec>
    55ce:	4622      	mov	r2, r4
    55d0:	4654      	mov	r4, sl
    55d2:	46b2      	mov	sl, r6
    55d4:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    55d6:	e01d      	b.n	5614 <_vsnprintf+0x524>
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
    55d8:	4653      	mov	r3, sl
    55da:	e7e0      	b.n	559e <_vsnprintf+0x4ae>
    55dc:	4622      	mov	r2, r4
    55de:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    55e0:	4643      	mov	r3, r8
    55e2:	e007      	b.n	55f4 <_vsnprintf+0x504>
            out(' ', buffer, idx++, maxlen);
    55e4:	f102 0801 	add.w	r8, r2, #1
    55e8:	4633      	mov	r3, r6
    55ea:	4659      	mov	r1, fp
    55ec:	2020      	movs	r0, #32
    55ee:	47b8      	blx	r7
          while (l++ < width) {
    55f0:	462b      	mov	r3, r5
            out(' ', buffer, idx++, maxlen);
    55f2:	4642      	mov	r2, r8
          while (l++ < width) {
    55f4:	1c5d      	adds	r5, r3, #1
    55f6:	429c      	cmp	r4, r3
    55f8:	d8f4      	bhi.n	55e4 <_vsnprintf+0x4f4>
    55fa:	46a8      	mov	r8, r5
    55fc:	4654      	mov	r4, sl
    55fe:	46b2      	mov	sl, r6
    5600:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    5602:	e007      	b.n	5614 <_vsnprintf+0x524>
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
    5604:	461c      	mov	r4, r3
          out(*(p++), buffer, idx++, maxlen);
    5606:	f109 0901 	add.w	r9, r9, #1
    560a:	1c55      	adds	r5, r2, #1
    560c:	4653      	mov	r3, sl
    560e:	4659      	mov	r1, fp
    5610:	47b8      	blx	r7
    5612:	462a      	mov	r2, r5
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
    5614:	f899 0000 	ldrb.w	r0, [r9]
    5618:	b120      	cbz	r0, 5624 <_vsnprintf+0x534>
    561a:	2e00      	cmp	r6, #0
    561c:	d0f3      	beq.n	5606 <_vsnprintf+0x516>
    561e:	1e63      	subs	r3, r4, #1
    5620:	2c00      	cmp	r4, #0
    5622:	d1ef      	bne.n	5604 <_vsnprintf+0x514>
        if (flags & FLAGS_LEFT) {
    5624:	4614      	mov	r4, r2
    5626:	4656      	mov	r6, sl
    5628:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    562a:	b91b      	cbnz	r3, 5634 <_vsnprintf+0x544>
        format++;
    562c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    562e:	3301      	adds	r3, #1
    5630:	930d      	str	r3, [sp, #52]	; 0x34
        break;
    5632:	e568      	b.n	5106 <_vsnprintf+0x16>
    5634:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
    5638:	e006      	b.n	5648 <_vsnprintf+0x558>
            out(' ', buffer, idx++, maxlen);
    563a:	1c55      	adds	r5, r2, #1
    563c:	4633      	mov	r3, r6
    563e:	4659      	mov	r1, fp
    5640:	2020      	movs	r0, #32
    5642:	47b8      	blx	r7
          while (l++ < width) {
    5644:	46a0      	mov	r8, r4
            out(' ', buffer, idx++, maxlen);
    5646:	462a      	mov	r2, r5
          while (l++ < width) {
    5648:	f108 0401 	add.w	r4, r8, #1
    564c:	45c1      	cmp	r9, r8
    564e:	d8f4      	bhi.n	563a <_vsnprintf+0x54a>
    5650:	4614      	mov	r4, r2
    5652:	e7eb      	b.n	562c <_vsnprintf+0x53c>
        flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
    5654:	f045 0521 	orr.w	r5, r5, #33	; 0x21
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
    5658:	9b18      	ldr	r3, [sp, #96]	; 0x60
    565a:	1d1a      	adds	r2, r3, #4
    565c:	9218      	str	r2, [sp, #96]	; 0x60
    565e:	681b      	ldr	r3, [r3, #0]
    5660:	9505      	str	r5, [sp, #20]
    5662:	2208      	movs	r2, #8
    5664:	9204      	str	r2, [sp, #16]
    5666:	f8cd a00c 	str.w	sl, [sp, #12]
    566a:	2210      	movs	r2, #16
    566c:	9202      	str	r2, [sp, #8]
    566e:	2200      	movs	r2, #0
    5670:	9201      	str	r2, [sp, #4]
    5672:	9300      	str	r3, [sp, #0]
    5674:	4633      	mov	r3, r6
    5676:	4622      	mov	r2, r4
    5678:	4659      	mov	r1, fp
    567a:	4638      	mov	r0, r7
    567c:	f7ff fc8a 	bl	4f94 <_ntoa_long>
    5680:	4604      	mov	r4, r0
        format++;
    5682:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    5684:	3301      	adds	r3, #1
    5686:	930d      	str	r3, [sp, #52]	; 0x34
        break;
    5688:	e53d      	b.n	5106 <_vsnprintf+0x16>
        out('%', buffer, idx++, maxlen);
    568a:	1c65      	adds	r5, r4, #1
    568c:	4633      	mov	r3, r6
    568e:	4622      	mov	r2, r4
    5690:	4659      	mov	r1, fp
    5692:	2025      	movs	r0, #37	; 0x25
    5694:	47b8      	blx	r7
        format++;
    5696:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    5698:	3301      	adds	r3, #1
    569a:	930d      	str	r3, [sp, #52]	; 0x34
        out('%', buffer, idx++, maxlen);
    569c:	462c      	mov	r4, r5
        break;
    569e:	e532      	b.n	5106 <_vsnprintf+0x16>

      default :
        out(*format, buffer, idx++, maxlen);
    56a0:	1c65      	adds	r5, r4, #1
    56a2:	4633      	mov	r3, r6
    56a4:	4622      	mov	r2, r4
    56a6:	4659      	mov	r1, fp
    56a8:	47b8      	blx	r7
        format++;
    56aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    56ac:	3301      	adds	r3, #1
    56ae:	930d      	str	r3, [sp, #52]	; 0x34
        out(*format, buffer, idx++, maxlen);
    56b0:	462c      	mov	r4, r5
        break;
    56b2:	e528      	b.n	5106 <_vsnprintf+0x16>
    out = _out_null;
    56b4:	4f07      	ldr	r7, [pc, #28]	; (56d4 <_vsnprintf+0x5e4>)
    56b6:	e525      	b.n	5104 <_vsnprintf+0x14>
    }
  }

  // termination
  out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
    56b8:	42b4      	cmp	r4, r6
    56ba:	d308      	bcc.n	56ce <_vsnprintf+0x5de>
    56bc:	1e72      	subs	r2, r6, #1
    56be:	4633      	mov	r3, r6
    56c0:	4659      	mov	r1, fp
    56c2:	2000      	movs	r0, #0
    56c4:	47b8      	blx	r7

  // return written chars without terminating \0
  return (int)idx;
}
    56c6:	4620      	mov	r0, r4
    56c8:	b00f      	add	sp, #60	; 0x3c
    56ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
    56ce:	4622      	mov	r2, r4
    56d0:	e7f5      	b.n	56be <_vsnprintf+0x5ce>
    56d2:	bf00      	nop
    56d4:	00004db9 	.word	0x00004db9

000056d8 <snprintf_>:
  return ret;
}


int snprintf_(char* buffer, size_t count, const char* format, ...)
{
    56d8:	b40c      	push	{r2, r3}
    56da:	b510      	push	{r4, lr}
    56dc:	b084      	sub	sp, #16
    56de:	460a      	mov	r2, r1
    56e0:	ac06      	add	r4, sp, #24
    56e2:	f854 3b04 	ldr.w	r3, [r4], #4
  va_list va;
  va_start(va, format);
    56e6:	9403      	str	r4, [sp, #12]
  const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
    56e8:	9400      	str	r4, [sp, #0]
    56ea:	4601      	mov	r1, r0
    56ec:	4803      	ldr	r0, [pc, #12]	; (56fc <snprintf_+0x24>)
    56ee:	f7ff fcff 	bl	50f0 <_vsnprintf>
  va_end(va);
  return ret;
}
    56f2:	b004      	add	sp, #16
    56f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    56f8:	b002      	add	sp, #8
    56fa:	4770      	bx	lr
    56fc:	00004db1 	.word	0x00004db1

00005700 <reflect>:
 * Returns:		The reflection of the original data.
 *
 *********************************************************************/
static unsigned long
reflect(unsigned long data, unsigned char nBits)
{
    5700:	4602      	mov	r2, r0
	unsigned char  bit;

	/*
	 * Reflect the data about the center bit.
	 */
	for (bit = 0; bit < nBits; ++bit)
    5702:	2300      	movs	r3, #0
	unsigned long  reflection = 0x00000000;
    5704:	4618      	mov	r0, r3
	for (bit = 0; bit < nBits; ++bit)
    5706:	e004      	b.n	5712 <reflect+0x12>
		data = (data >> 1);
	}

	return (reflection);

}	/* reflect() */
    5708:	f85d fb04 	ldr.w	pc, [sp], #4
		data = (data >> 1);
    570c:	0852      	lsrs	r2, r2, #1
	for (bit = 0; bit < nBits; ++bit)
    570e:	3301      	adds	r3, #1
    5710:	b2db      	uxtb	r3, r3
    5712:	428b      	cmp	r3, r1
    5714:	d216      	bcs.n	5744 <reflect+0x44>
		if (data & 0x01)
    5716:	f012 0f01 	tst.w	r2, #1
    571a:	d0f7      	beq.n	570c <reflect+0xc>
{
    571c:	b500      	push	{lr}
			reflection |= (1 << ((nBits - 1) - bit));
    571e:	f101 3cff 	add.w	ip, r1, #4294967295
    5722:	ebac 0e03 	sub.w	lr, ip, r3
    5726:	f04f 0c01 	mov.w	ip, #1
    572a:	fa0c fc0e 	lsl.w	ip, ip, lr
    572e:	ea40 000c 	orr.w	r0, r0, ip
		data = (data >> 1);
    5732:	0852      	lsrs	r2, r2, #1
	for (bit = 0; bit < nBits; ++bit)
    5734:	3301      	adds	r3, #1
    5736:	b2db      	uxtb	r3, r3
    5738:	428b      	cmp	r3, r1
    573a:	d2e5      	bcs.n	5708 <reflect+0x8>
		if (data & 0x01)
    573c:	f012 0f01 	tst.w	r2, #1
    5740:	d0f7      	beq.n	5732 <reflect+0x32>
    5742:	e7ec      	b.n	571e <reflect+0x1e>
    5744:	4770      	bx	lr
	...

00005748 <crcInit>:


    /*
     * Compute the remainder of each possible dividend.
     */
    for (dividend = 0; dividend < 256; ++dividend)
    5748:	2000      	movs	r0, #0
    574a:	e011      	b.n	5770 <crcInit+0x28>
            {
                remainder = (remainder << 1) ^ POLYNOMIAL;
            }
            else
            {
                remainder = (remainder << 1);
    574c:	005b      	lsls	r3, r3, #1
    574e:	b29b      	uxth	r3, r3
        for (bit = 8; bit > 0; --bit)
    5750:	3a01      	subs	r2, #1
    5752:	b2d2      	uxtb	r2, r2
    5754:	b142      	cbz	r2, 5768 <crcInit+0x20>
            if (remainder & TOPBIT)
    5756:	f413 4f00 	tst.w	r3, #32768	; 0x8000
    575a:	d0f7      	beq.n	574c <crcInit+0x4>
                remainder = (remainder << 1) ^ POLYNOMIAL;
    575c:	f241 0121 	movw	r1, #4129	; 0x1021
    5760:	ea81 0343 	eor.w	r3, r1, r3, lsl #1
    5764:	b29b      	uxth	r3, r3
    5766:	e7f3      	b.n	5750 <crcInit+0x8>
        }

        /*
         * Store the result into the table.
         */
        crcTable[dividend] = remainder;
    5768:	4a05      	ldr	r2, [pc, #20]	; (5780 <crcInit+0x38>)
    576a:	f822 3010 	strh.w	r3, [r2, r0, lsl #1]
    for (dividend = 0; dividend < 256; ++dividend)
    576e:	3001      	adds	r0, #1
    5770:	28ff      	cmp	r0, #255	; 0xff
    5772:	dc04      	bgt.n	577e <crcInit+0x36>
        remainder = dividend << (WIDTH - 8);
    5774:	b283      	uxth	r3, r0
    5776:	021b      	lsls	r3, r3, #8
    5778:	b29b      	uxth	r3, r3
        for (bit = 8; bit > 0; --bit)
    577a:	2208      	movs	r2, #8
    577c:	e7ea      	b.n	5754 <crcInit+0xc>
    }

}   /* crcInit() */
    577e:	4770      	bx	lr
    5780:	200004a0 	.word	0x200004a0

00005784 <crcFast>:
 * Returns:		The CRC of the message.
 *
 *********************************************************************/
crc
crcFast(unsigned char const message[], int nBytes)
{
    5784:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5786:	4606      	mov	r6, r0
    5788:	460d      	mov	r5, r1


    /*
     * Divide the message by the polynomial, a byte at a time.
     */
    for (byte = 0; byte < nBytes; ++byte)
    578a:	2400      	movs	r4, #0
    crc	           remainder = INITIAL_REMAINDER;
    578c:	4627      	mov	r7, r4
    for (byte = 0; byte < nBytes; ++byte)
    578e:	e00d      	b.n	57ac <crcFast+0x28>
    {
        data = REFLECT_DATA(message[byte]) ^ (remainder >> (WIDTH - 8));
    5790:	2108      	movs	r1, #8
    5792:	5d30      	ldrb	r0, [r6, r4]
    5794:	f7ff ffb4 	bl	5700 <reflect>
    5798:	b2c3      	uxtb	r3, r0
    579a:	ea83 2317 	eor.w	r3, r3, r7, lsr #8
  		remainder = crcTable[data] ^ (remainder << 8);
    579e:	4a07      	ldr	r2, [pc, #28]	; (57bc <crcFast+0x38>)
    57a0:	f932 3013 	ldrsh.w	r3, [r2, r3, lsl #1]
    57a4:	ea83 2307 	eor.w	r3, r3, r7, lsl #8
    57a8:	b29f      	uxth	r7, r3
    for (byte = 0; byte < nBytes; ++byte)
    57aa:	3401      	adds	r4, #1
    57ac:	42ac      	cmp	r4, r5
    57ae:	dbef      	blt.n	5790 <crcFast+0xc>
    }

    /*
     * The final remainder is the CRC.
     */
    return (REFLECT_REMAINDER(remainder) ^ FINAL_XOR_VALUE);
    57b0:	2110      	movs	r1, #16
    57b2:	4638      	mov	r0, r7
    57b4:	f7ff ffa4 	bl	5700 <reflect>

}   /* crcFast() */
    57b8:	b280      	uxth	r0, r0
    57ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    57bc:	200004a0 	.word	0x200004a0

000057c0 <assertEFM>:
void assertEFM(const char *file, int line)
{
  (void)file;  /* Unused parameter */
  (void)line;  /* Unused parameter */

  while (true) {
    57c0:	e7fe      	b.n	57c0 <assertEFM>
	...

000057c4 <flashWaitStateControl>:
#if defined(_SILICON_LABS_32B_SERIES_2_CONFIG_2) || defined(_SILICON_LABS_32B_SERIES_2_CONFIG_3)
  coreFreq *= CMU_ClockDivGet(cmuClock_CORE);
#endif

  // Make sure the MSC is unlocked
  mscLocked = (MSC->STATUS & _MSC_STATUS_REGLOCK_MASK)
    57c4:	4b11      	ldr	r3, [pc, #68]	; (580c <flashWaitStateControl+0x48>)
    57c6:	69da      	ldr	r2, [r3, #28]
    57c8:	f402 3280 	and.w	r2, r2, #65536	; 0x10000
              == MSC_STATUS_REGLOCK_LOCKED;
  MSC->LOCK = MSC_LOCK_LOCKKEY_UNLOCK;
    57cc:	f641 3171 	movw	r1, #7025	; 0x1b71
    57d0:	63d9      	str	r1, [r3, #60]	; 0x3c

  // Get current flash read setting
  mode = MSC->READCTRL & ~_MSC_READCTRL_MODE_MASK;
    57d2:	689b      	ldr	r3, [r3, #8]
    57d4:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000

  // Set new mode based on the core clock frequency
#if defined(_SILICON_LABS_32B_SERIES_2_CONFIG_1)
  if (coreFreq <= CMU_MAX_FLASHREAD_FREQ_0WS) {
    57d8:	490d      	ldr	r1, [pc, #52]	; (5810 <flashWaitStateControl+0x4c>)
    57da:	4288      	cmp	r0, r1
    57dc:	d901      	bls.n	57e2 <flashWaitStateControl+0x1e>
  if ((coreFreq <= CMU_MAX_FREQ_0WS_1V1)
      || (vscale >= 1)) {
#endif
    mode |= MSC_READCTRL_MODE_WS0;
  } else {
    mode |= MSC_READCTRL_MODE_WS1;
    57de:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  }
  MSC->READCTRL = mode;
    57e2:	490a      	ldr	r1, [pc, #40]	; (580c <flashWaitStateControl+0x48>)
    57e4:	608b      	str	r3, [r1, #8]

#if defined(_SILICON_LABS_32B_SERIES_2_CONFIG_1)
  // Get current sram read setting
  mode = SYSCFG->DMEM0RAMCTRL & ~_SYSCFG_DMEM0RAMCTRL_RAMWSEN_MASK;
    57e6:	4b0b      	ldr	r3, [pc, #44]	; (5814 <flashWaitStateControl+0x50>)
    57e8:	f8d3 3218 	ldr.w	r3, [r3, #536]	; 0x218
    57ec:	f023 0302 	bic.w	r3, r3, #2

  // Set new mode based on the core clock frequency
  if (coreFreq > CMU_MAX_SRAM_FREQ_0WS) {
    57f0:	4909      	ldr	r1, [pc, #36]	; (5818 <flashWaitStateControl+0x54>)
    57f2:	4288      	cmp	r0, r1
    57f4:	d901      	bls.n	57fa <flashWaitStateControl+0x36>
    mode |= 1 << _SYSCFG_DMEM0RAMCTRL_RAMWSEN_SHIFT;
    57f6:	f043 0302 	orr.w	r3, r3, #2
  }
  SYSCFG->DMEM0RAMCTRL = mode;
    57fa:	4906      	ldr	r1, [pc, #24]	; (5814 <flashWaitStateControl+0x50>)
    57fc:	f8c1 3218 	str.w	r3, [r1, #536]	; 0x218
#endif
  if (mscLocked) {
    5800:	b112      	cbz	r2, 5808 <flashWaitStateControl+0x44>
    MSC->LOCK = MSC_LOCK_LOCKKEY_LOCK;
    5802:	4b02      	ldr	r3, [pc, #8]	; (580c <flashWaitStateControl+0x48>)
    5804:	2200      	movs	r2, #0
    5806:	63da      	str	r2, [r3, #60]	; 0x3c
  }
}
    5808:	4770      	bx	lr
    580a:	bf00      	nop
    580c:	40030000 	.word	0x40030000
    5810:	025317c0 	.word	0x025317c0
    5814:	4007c000 	.word	0x4007c000
    5818:	02faf080 	.word	0x02faf080

0000581c <HFRCODPLLDevinfoGet>:
 *
 * @param[in] freq
 *   HFRCODPLL frequency band
 ******************************************************************************/
static uint32_t HFRCODPLLDevinfoGet(CMU_HFRCODPLLFreq_TypeDef freq)
{
    581c:	b508      	push	{r3, lr}
  uint32_t ret = 0U;

  switch (freq) {
    581e:	4b34      	ldr	r3, [pc, #208]	; (58f0 <HFRCODPLLDevinfoGet+0xd4>)
    5820:	4298      	cmp	r0, r3
    5822:	d04d      	beq.n	58c0 <HFRCODPLLDevinfoGet+0xa4>
    5824:	d910      	bls.n	5848 <HFRCODPLLDevinfoGet+0x2c>
    5826:	4b33      	ldr	r3, [pc, #204]	; (58f4 <HFRCODPLLDevinfoGet+0xd8>)
    5828:	4298      	cmp	r0, r3
    582a:	d051      	beq.n	58d0 <HFRCODPLLDevinfoGet+0xb4>
    582c:	d931      	bls.n	5892 <HFRCODPLLDevinfoGet+0x76>
    582e:	4b32      	ldr	r3, [pc, #200]	; (58f8 <HFRCODPLLDevinfoGet+0xdc>)
    5830:	4298      	cmp	r0, r3
    5832:	d051      	beq.n	58d8 <HFRCODPLLDevinfoGet+0xbc>
    5834:	f503 0374 	add.w	r3, r3, #15990784	; 0xf40000
    5838:	f503 5310 	add.w	r3, r3, #9216	; 0x2400
    583c:	4298      	cmp	r0, r3
    583e:	d14f      	bne.n	58e0 <HFRCODPLLDevinfoGet+0xc4>
    case cmuHFRCODPLLFreq_64M0Hz:
      ret = DEVINFO->HFRCODPLLCAL[15].HFRCODPLLCAL;
      break;

    case cmuHFRCODPLLFreq_80M0Hz:
      ret = DEVINFO->HFRCODPLLCAL[16].HFRCODPLLCAL;
    5840:	4b2e      	ldr	r3, [pc, #184]	; (58fc <HFRCODPLLDevinfoGet+0xe0>)
    5842:	f8d3 0098 	ldr.w	r0, [r3, #152]	; 0x98
      break;
    5846:	e01d      	b.n	5884 <HFRCODPLLDevinfoGet+0x68>
  switch (freq) {
    5848:	4b2d      	ldr	r3, [pc, #180]	; (5900 <HFRCODPLLDevinfoGet+0xe4>)
    584a:	4298      	cmp	r0, r3
    584c:	d032      	beq.n	58b4 <HFRCODPLLDevinfoGet+0x98>
    584e:	d90b      	bls.n	5868 <HFRCODPLLDevinfoGet+0x4c>
    5850:	4b2c      	ldr	r3, [pc, #176]	; (5904 <HFRCODPLLDevinfoGet+0xe8>)
    5852:	4298      	cmp	r0, r3
    5854:	d031      	beq.n	58ba <HFRCODPLLDevinfoGet+0x9e>
    5856:	f503 1337 	add.w	r3, r3, #2998272	; 0x2dc000
    585a:	f503 63d8 	add.w	r3, r3, #1728	; 0x6c0
    585e:	4298      	cmp	r0, r3
    5860:	d13e      	bne.n	58e0 <HFRCODPLLDevinfoGet+0xc4>
      ret = DEVINFO->HFRCODPLLCAL[8].HFRCODPLLCAL;
    5862:	4b26      	ldr	r3, [pc, #152]	; (58fc <HFRCODPLLDevinfoGet+0xe0>)
    5864:	6f98      	ldr	r0, [r3, #120]	; 0x78
      break;
    5866:	e00d      	b.n	5884 <HFRCODPLLDevinfoGet+0x68>
  switch (freq) {
    5868:	4b27      	ldr	r3, [pc, #156]	; (5908 <HFRCODPLLDevinfoGet+0xec>)
    586a:	4298      	cmp	r0, r3
    586c:	d00e      	beq.n	588c <HFRCODPLLDevinfoGet+0x70>
    586e:	d908      	bls.n	5882 <HFRCODPLLDevinfoGet+0x66>
    5870:	4b26      	ldr	r3, [pc, #152]	; (590c <HFRCODPLLDevinfoGet+0xf0>)
    5872:	4298      	cmp	r0, r3
    5874:	d00a      	beq.n	588c <HFRCODPLLDevinfoGet+0x70>
    5876:	4b26      	ldr	r3, [pc, #152]	; (5910 <HFRCODPLLDevinfoGet+0xf4>)
    5878:	4298      	cmp	r0, r3
    587a:	d131      	bne.n	58e0 <HFRCODPLLDevinfoGet+0xc4>
      ret = DEVINFO->HFRCODPLLCAL[3].HFRCODPLLCAL;
    587c:	4b1f      	ldr	r3, [pc, #124]	; (58fc <HFRCODPLLDevinfoGet+0xe0>)
    587e:	6e58      	ldr	r0, [r3, #100]	; 0x64
      break;
    5880:	e000      	b.n	5884 <HFRCODPLLDevinfoGet+0x68>
  switch (freq) {
    5882:	b900      	cbnz	r0, 5886 <HFRCODPLLDevinfoGet+0x6a>
    default:
      EFM_ASSERT(false);
      break;
  }
  return ret;
}
    5884:	bd08      	pop	{r3, pc}
  switch (freq) {
    5886:	4b23      	ldr	r3, [pc, #140]	; (5914 <HFRCODPLLDevinfoGet+0xf8>)
    5888:	4298      	cmp	r0, r3
    588a:	d129      	bne.n	58e0 <HFRCODPLLDevinfoGet+0xc4>
      ret = DEVINFO->HFRCODPLLCAL[0].HFRCODPLLCAL;
    588c:	4b1b      	ldr	r3, [pc, #108]	; (58fc <HFRCODPLLDevinfoGet+0xe0>)
    588e:	6d98      	ldr	r0, [r3, #88]	; 0x58
      break;
    5890:	e7f8      	b.n	5884 <HFRCODPLLDevinfoGet+0x68>
  switch (freq) {
    5892:	4b21      	ldr	r3, [pc, #132]	; (5918 <HFRCODPLLDevinfoGet+0xfc>)
    5894:	4298      	cmp	r0, r3
    5896:	d017      	beq.n	58c8 <HFRCODPLLDevinfoGet+0xac>
    5898:	4b20      	ldr	r3, [pc, #128]	; (591c <HFRCODPLLDevinfoGet+0x100>)
    589a:	4298      	cmp	r0, r3
    589c:	d103      	bne.n	58a6 <HFRCODPLLDevinfoGet+0x8a>
      ret = DEVINFO->HFRCODPLLCAL[13].HFRCODPLLCAL;
    589e:	4b17      	ldr	r3, [pc, #92]	; (58fc <HFRCODPLLDevinfoGet+0xe0>)
    58a0:	f8d3 008c 	ldr.w	r0, [r3, #140]	; 0x8c
      break;
    58a4:	e7ee      	b.n	5884 <HFRCODPLLDevinfoGet+0x68>
  switch (freq) {
    58a6:	4b1e      	ldr	r3, [pc, #120]	; (5920 <HFRCODPLLDevinfoGet+0x104>)
    58a8:	4298      	cmp	r0, r3
    58aa:	d119      	bne.n	58e0 <HFRCODPLLDevinfoGet+0xc4>
      ret = DEVINFO->HFRCODPLLCAL[11].HFRCODPLLCAL;
    58ac:	4b13      	ldr	r3, [pc, #76]	; (58fc <HFRCODPLLDevinfoGet+0xe0>)
    58ae:	f8d3 0084 	ldr.w	r0, [r3, #132]	; 0x84
      break;
    58b2:	e7e7      	b.n	5884 <HFRCODPLLDevinfoGet+0x68>
      ret = DEVINFO->HFRCODPLLCAL[6].HFRCODPLLCAL;
    58b4:	4b11      	ldr	r3, [pc, #68]	; (58fc <HFRCODPLLDevinfoGet+0xe0>)
    58b6:	6f18      	ldr	r0, [r3, #112]	; 0x70
      break;
    58b8:	e7e4      	b.n	5884 <HFRCODPLLDevinfoGet+0x68>
      ret = DEVINFO->HFRCODPLLCAL[7].HFRCODPLLCAL;
    58ba:	4b10      	ldr	r3, [pc, #64]	; (58fc <HFRCODPLLDevinfoGet+0xe0>)
    58bc:	6f58      	ldr	r0, [r3, #116]	; 0x74
      break;
    58be:	e7e1      	b.n	5884 <HFRCODPLLDevinfoGet+0x68>
      ret = DEVINFO->HFRCODPLLCAL[10].HFRCODPLLCAL;
    58c0:	4b0e      	ldr	r3, [pc, #56]	; (58fc <HFRCODPLLDevinfoGet+0xe0>)
    58c2:	f8d3 0080 	ldr.w	r0, [r3, #128]	; 0x80
      break;
    58c6:	e7dd      	b.n	5884 <HFRCODPLLDevinfoGet+0x68>
      ret = DEVINFO->HFRCODPLLCAL[12].HFRCODPLLCAL;
    58c8:	4b0c      	ldr	r3, [pc, #48]	; (58fc <HFRCODPLLDevinfoGet+0xe0>)
    58ca:	f8d3 0088 	ldr.w	r0, [r3, #136]	; 0x88
      break;
    58ce:	e7d9      	b.n	5884 <HFRCODPLLDevinfoGet+0x68>
      ret = DEVINFO->HFRCODPLLCAL[14].HFRCODPLLCAL;
    58d0:	4b0a      	ldr	r3, [pc, #40]	; (58fc <HFRCODPLLDevinfoGet+0xe0>)
    58d2:	f8d3 0090 	ldr.w	r0, [r3, #144]	; 0x90
      break;
    58d6:	e7d5      	b.n	5884 <HFRCODPLLDevinfoGet+0x68>
      ret = DEVINFO->HFRCODPLLCAL[15].HFRCODPLLCAL;
    58d8:	4b08      	ldr	r3, [pc, #32]	; (58fc <HFRCODPLLDevinfoGet+0xe0>)
    58da:	f8d3 0094 	ldr.w	r0, [r3, #148]	; 0x94
      break;
    58de:	e7d1      	b.n	5884 <HFRCODPLLDevinfoGet+0x68>
      EFM_ASSERT(false);
    58e0:	f640 611a 	movw	r1, #3610	; 0xe1a
    58e4:	480f      	ldr	r0, [pc, #60]	; (5924 <HFRCODPLLDevinfoGet+0x108>)
    58e6:	f7ff ff6b 	bl	57c0 <assertEFM>
  uint32_t ret = 0U;
    58ea:	2000      	movs	r0, #0
      break;
    58ec:	e7ca      	b.n	5884 <HFRCODPLLDevinfoGet+0x68>
    58ee:	bf00      	nop
    58f0:	018cba80 	.word	0x018cba80
    58f4:	03567e00 	.word	0x03567e00
    58f8:	03d09000 	.word	0x03d09000
    58fc:	0fe08000 	.word	0x0fe08000
    5900:	00c65d40 	.word	0x00c65d40
    5904:	00f42400 	.word	0x00f42400
    5908:	001e8480 	.word	0x001e8480
    590c:	003d0900 	.word	0x003d0900
    5910:	006acfc0 	.word	0x006acfc0
    5914:	000f4240 	.word	0x000f4240
    5918:	0243d580 	.word	0x0243d580
    591c:	02dc6c00 	.word	0x02dc6c00
    5920:	01e84800 	.word	0x01e84800
    5924:	0000bc84 	.word	0x0000bc84

00005928 <traceClkGet>:
{
    5928:	b538      	push	{r3, r4, r5, lr}
    592a:	4605      	mov	r5, r0
    592c:	460c      	mov	r4, r1
  switch (CMU->TRACECLKCTRL & _CMU_TRACECLKCTRL_CLKSEL_MASK) {
    592e:	4b0e      	ldr	r3, [pc, #56]	; (5968 <traceClkGet+0x40>)
    5930:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
    5934:	f003 0303 	and.w	r3, r3, #3
    5938:	2b02      	cmp	r3, #2
    593a:	d009      	beq.n	5950 <traceClkGet+0x28>
    593c:	2b03      	cmp	r3, #3
    593e:	d00f      	beq.n	5960 <traceClkGet+0x38>
      EFM_ASSERT(false);
    5940:	f240 4142 	movw	r1, #1090	; 0x442
    5944:	4809      	ldr	r0, [pc, #36]	; (596c <traceClkGet+0x44>)
    5946:	f7ff ff3b 	bl	57c0 <assertEFM>
      s = cmuSelect_Error;
    594a:	2300      	movs	r3, #0
  uint32_t f = 0U;
    594c:	4618      	mov	r0, r3
      break;
    594e:	e002      	b.n	5956 <traceClkGet+0x2e>
      f = SystemHCLKGet();
    5950:	f000 fe82 	bl	6658 <SystemHCLKGet>
      s = cmuSelect_HCLK;
    5954:	230b      	movs	r3, #11
  if (freq != NULL) {
    5956:	b105      	cbz	r5, 595a <traceClkGet+0x32>
    *freq = f;
    5958:	6028      	str	r0, [r5, #0]
  if (sel != NULL) {
    595a:	b104      	cbz	r4, 595e <traceClkGet+0x36>
    *sel = s;
    595c:	7023      	strb	r3, [r4, #0]
}
    595e:	bd38      	pop	{r3, r4, r5, pc}
      f = SystemHFRCOEM23ClockGet();
    5960:	f000 fe9c 	bl	669c <SystemHFRCOEM23ClockGet>
      s = cmuSelect_HFRCOEM23;
    5964:	2305      	movs	r3, #5
      break;
    5966:	e7f6      	b.n	5956 <traceClkGet+0x2e>
    5968:	40008000 	.word	0x40008000
    596c:	0000bc84 	.word	0x0000bc84

00005970 <em01GrpaClkGet>:
{
    5970:	b538      	push	{r3, r4, r5, lr}
    5972:	4605      	mov	r5, r0
    5974:	460c      	mov	r4, r1
  switch (CMU->EM01GRPACLKCTRL & _CMU_EM01GRPACLKCTRL_CLKSEL_MASK) {
    5976:	4b14      	ldr	r3, [pc, #80]	; (59c8 <em01GrpaClkGet+0x58>)
    5978:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
    597c:	f003 0307 	and.w	r3, r3, #7
    5980:	3b01      	subs	r3, #1
    5982:	2b03      	cmp	r3, #3
    5984:	d817      	bhi.n	59b6 <em01GrpaClkGet+0x46>
    5986:	e8df f003 	tbb	[pc, r3]
    598a:	0a02      	.short	0x0a02
    598c:	120e      	.short	0x120e
      f = SystemHFRCODPLLClockGet();
    598e:	f000 fe3d 	bl	660c <SystemHFRCODPLLClockGet>
      s = cmuSelect_HFRCODPLL;
    5992:	2304      	movs	r3, #4
  if (freq != NULL) {
    5994:	b105      	cbz	r5, 5998 <em01GrpaClkGet+0x28>
    *freq = f;
    5996:	6028      	str	r0, [r5, #0]
  if (sel != NULL) {
    5998:	b104      	cbz	r4, 599c <em01GrpaClkGet+0x2c>
    *sel = s;
    599a:	7023      	strb	r3, [r4, #0]
}
    599c:	bd38      	pop	{r3, r4, r5, pc}
      f = SystemHFXOClockGet();
    599e:	f000 fe71 	bl	6684 <SystemHFXOClockGet>
      s = cmuSelect_HFXO;
    59a2:	2303      	movs	r3, #3
      break;
    59a4:	e7f6      	b.n	5994 <em01GrpaClkGet+0x24>
      f = SystemHFRCOEM23ClockGet();
    59a6:	f000 fe79 	bl	669c <SystemHFRCOEM23ClockGet>
      s = cmuSelect_HFRCOEM23;
    59aa:	2305      	movs	r3, #5
      break;
    59ac:	e7f2      	b.n	5994 <em01GrpaClkGet+0x24>
      f = SystemFSRCOClockGet();
    59ae:	f000 fe71 	bl	6694 <SystemFSRCOClockGet>
      s = cmuSelect_FSRCO;
    59b2:	2302      	movs	r3, #2
      break;
    59b4:	e7ee      	b.n	5994 <em01GrpaClkGet+0x24>
      EFM_ASSERT(false);
    59b6:	f640 5128 	movw	r1, #3368	; 0xd28
    59ba:	4804      	ldr	r0, [pc, #16]	; (59cc <em01GrpaClkGet+0x5c>)
    59bc:	f7ff ff00 	bl	57c0 <assertEFM>
      s = cmuSelect_Error;
    59c0:	2300      	movs	r3, #0
  uint32_t f = 0U;
    59c2:	4618      	mov	r0, r3
      break;
    59c4:	e7e6      	b.n	5994 <em01GrpaClkGet+0x24>
    59c6:	bf00      	nop
    59c8:	40008000 	.word	0x40008000
    59cc:	0000bc84 	.word	0x0000bc84

000059d0 <iadcClkGet>:
 *
 * @param[out] sel
 *   The selected oscillator.
 ******************************************************************************/
static void iadcClkGet(uint32_t *freq, CMU_Select_TypeDef *sel)
{
    59d0:	b530      	push	{r4, r5, lr}
    59d2:	b083      	sub	sp, #12
    59d4:	4605      	mov	r5, r0
    59d6:	460c      	mov	r4, r1
  uint32_t f = 0U;
    59d8:	2300      	movs	r3, #0
    59da:	9301      	str	r3, [sp, #4]
  CMU_Select_TypeDef s;

  switch (CMU->IADCCLKCTRL & _CMU_IADCCLKCTRL_CLKSEL_MASK) {
    59dc:	4b13      	ldr	r3, [pc, #76]	; (5a2c <iadcClkGet+0x5c>)
    59de:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
    59e2:	f003 0303 	and.w	r3, r3, #3
    59e6:	2b02      	cmp	r3, #2
    59e8:	d016      	beq.n	5a18 <iadcClkGet+0x48>
    59ea:	2b03      	cmp	r3, #3
    59ec:	d019      	beq.n	5a22 <iadcClkGet+0x52>
    59ee:	2b01      	cmp	r3, #1
    59f0:	d006      	beq.n	5a00 <iadcClkGet+0x30>
      s = cmuSelect_FSRCO;
      break;

    default:
      s = cmuSelect_Error;
      EFM_ASSERT(false);
    59f2:	f640 6144 	movw	r1, #3652	; 0xe44
    59f6:	480e      	ldr	r0, [pc, #56]	; (5a30 <iadcClkGet+0x60>)
    59f8:	f7ff fee2 	bl	57c0 <assertEFM>
      s = cmuSelect_Error;
    59fc:	2300      	movs	r3, #0
      break;
    59fe:	e004      	b.n	5a0a <iadcClkGet+0x3a>
      em01GrpaClkGet(&f, NULL);
    5a00:	2100      	movs	r1, #0
    5a02:	a801      	add	r0, sp, #4
    5a04:	f7ff ffb4 	bl	5970 <em01GrpaClkGet>
      s = cmuSelect_EM01GRPACLK;
    5a08:	230d      	movs	r3, #13
  }

  if (freq != NULL) {
    5a0a:	b10d      	cbz	r5, 5a10 <iadcClkGet+0x40>
    *freq = f;
    5a0c:	9a01      	ldr	r2, [sp, #4]
    5a0e:	602a      	str	r2, [r5, #0]
  }
  if (sel != NULL) {
    5a10:	b104      	cbz	r4, 5a14 <iadcClkGet+0x44>
    *sel = s;
    5a12:	7023      	strb	r3, [r4, #0]
  }
}
    5a14:	b003      	add	sp, #12
    5a16:	bd30      	pop	{r4, r5, pc}
      f = SystemHFRCOEM23ClockGet();
    5a18:	f000 fe40 	bl	669c <SystemHFRCOEM23ClockGet>
    5a1c:	9001      	str	r0, [sp, #4]
      s = cmuSelect_HFRCOEM23;
    5a1e:	2305      	movs	r3, #5
      break;
    5a20:	e7f3      	b.n	5a0a <iadcClkGet+0x3a>
      f = SystemFSRCOClockGet();
    5a22:	f000 fe37 	bl	6694 <SystemFSRCOClockGet>
    5a26:	9001      	str	r0, [sp, #4]
      s = cmuSelect_FSRCO;
    5a28:	2302      	movs	r3, #2
      break;
    5a2a:	e7ee      	b.n	5a0a <iadcClkGet+0x3a>
    5a2c:	40008000 	.word	0x40008000
    5a30:	0000bc84 	.word	0x0000bc84

00005a34 <em23GrpaClkGet>:
{
    5a34:	b538      	push	{r3, r4, r5, lr}
    5a36:	4605      	mov	r5, r0
    5a38:	460c      	mov	r4, r1
  switch (CMU->EM23GRPACLKCTRL & _CMU_EM23GRPACLKCTRL_CLKSEL_MASK) {
    5a3a:	4b11      	ldr	r3, [pc, #68]	; (5a80 <em23GrpaClkGet+0x4c>)
    5a3c:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
    5a40:	f003 0303 	and.w	r3, r3, #3
    5a44:	2b02      	cmp	r3, #2
    5a46:	d013      	beq.n	5a70 <em23GrpaClkGet+0x3c>
    5a48:	2b03      	cmp	r3, #3
    5a4a:	d015      	beq.n	5a78 <em23GrpaClkGet+0x44>
    5a4c:	2b01      	cmp	r3, #1
    5a4e:	d007      	beq.n	5a60 <em23GrpaClkGet+0x2c>
      EFM_ASSERT(false);
    5a50:	f640 5156 	movw	r1, #3414	; 0xd56
    5a54:	480b      	ldr	r0, [pc, #44]	; (5a84 <em23GrpaClkGet+0x50>)
    5a56:	f7ff feb3 	bl	57c0 <assertEFM>
      s = cmuSelect_Error;
    5a5a:	2300      	movs	r3, #0
  uint32_t f = 0U;
    5a5c:	4618      	mov	r0, r3
      break;
    5a5e:	e002      	b.n	5a66 <em23GrpaClkGet+0x32>
      f = SystemLFRCOClockGet();
    5a60:	f000 fe60 	bl	6724 <SystemLFRCOClockGet>
      s = cmuSelect_LFRCO;
    5a64:	2308      	movs	r3, #8
  if (freq != NULL) {
    5a66:	b105      	cbz	r5, 5a6a <em23GrpaClkGet+0x36>
    *freq = f;
    5a68:	6028      	str	r0, [r5, #0]
  if (sel != NULL) {
    5a6a:	b104      	cbz	r4, 5a6e <em23GrpaClkGet+0x3a>
    *sel = s;
    5a6c:	7023      	strb	r3, [r4, #0]
}
    5a6e:	bd38      	pop	{r3, r4, r5, pc}
      f = SystemLFXOClockGet();
    5a70:	f000 fe5e 	bl	6730 <SystemLFXOClockGet>
      s = cmuSelect_LFXO;
    5a74:	2307      	movs	r3, #7
      break;
    5a76:	e7f6      	b.n	5a66 <em23GrpaClkGet+0x32>
      f = SystemULFRCOClockGet();
    5a78:	f000 fe57 	bl	672a <SystemULFRCOClockGet>
      s = cmuSelect_ULFRCO;
    5a7c:	2309      	movs	r3, #9
      break;
    5a7e:	e7f2      	b.n	5a66 <em23GrpaClkGet+0x32>
    5a80:	40008000 	.word	0x40008000
    5a84:	0000bc84 	.word	0x0000bc84

00005a88 <em4GrpaClkGet>:
{
    5a88:	b538      	push	{r3, r4, r5, lr}
    5a8a:	4605      	mov	r5, r0
    5a8c:	460c      	mov	r4, r1
  switch (CMU->EM4GRPACLKCTRL & _CMU_EM4GRPACLKCTRL_CLKSEL_MASK) {
    5a8e:	4b11      	ldr	r3, [pc, #68]	; (5ad4 <em4GrpaClkGet+0x4c>)
    5a90:	f8d3 3160 	ldr.w	r3, [r3, #352]	; 0x160
    5a94:	f003 0303 	and.w	r3, r3, #3
    5a98:	2b02      	cmp	r3, #2
    5a9a:	d013      	beq.n	5ac4 <em4GrpaClkGet+0x3c>
    5a9c:	2b03      	cmp	r3, #3
    5a9e:	d015      	beq.n	5acc <em4GrpaClkGet+0x44>
    5aa0:	2b01      	cmp	r3, #1
    5aa2:	d007      	beq.n	5ab4 <em4GrpaClkGet+0x2c>
      EFM_ASSERT(false);
    5aa4:	f640 5184 	movw	r1, #3460	; 0xd84
    5aa8:	480b      	ldr	r0, [pc, #44]	; (5ad8 <em4GrpaClkGet+0x50>)
    5aaa:	f7ff fe89 	bl	57c0 <assertEFM>
      s = cmuSelect_Error;
    5aae:	2300      	movs	r3, #0
  uint32_t f = 0U;
    5ab0:	4618      	mov	r0, r3
      break;
    5ab2:	e002      	b.n	5aba <em4GrpaClkGet+0x32>
      f = SystemLFRCOClockGet();
    5ab4:	f000 fe36 	bl	6724 <SystemLFRCOClockGet>
      s = cmuSelect_LFRCO;
    5ab8:	2308      	movs	r3, #8
  if (freq != NULL) {
    5aba:	b105      	cbz	r5, 5abe <em4GrpaClkGet+0x36>
    *freq = f;
    5abc:	6028      	str	r0, [r5, #0]
  if (sel != NULL) {
    5abe:	b104      	cbz	r4, 5ac2 <em4GrpaClkGet+0x3a>
    *sel = s;
    5ac0:	7023      	strb	r3, [r4, #0]
}
    5ac2:	bd38      	pop	{r3, r4, r5, pc}
      f = SystemLFXOClockGet();
    5ac4:	f000 fe34 	bl	6730 <SystemLFXOClockGet>
      s = cmuSelect_LFXO;
    5ac8:	2307      	movs	r3, #7
      break;
    5aca:	e7f6      	b.n	5aba <em4GrpaClkGet+0x32>
      f = SystemULFRCOClockGet();
    5acc:	f000 fe2d 	bl	672a <SystemULFRCOClockGet>
      s = cmuSelect_ULFRCO;
    5ad0:	2309      	movs	r3, #9
      break;
    5ad2:	e7f2      	b.n	5aba <em4GrpaClkGet+0x32>
    5ad4:	40008000 	.word	0x40008000
    5ad8:	0000bc84 	.word	0x0000bc84

00005adc <wdog0ClkGet>:
 *
 * @param[out] sel
 *   The selected oscillator.
 ******************************************************************************/
static void wdog0ClkGet(uint32_t *freq, CMU_Select_TypeDef *sel)
{
    5adc:	b538      	push	{r3, r4, r5, lr}
    5ade:	4605      	mov	r5, r0
    5ae0:	460c      	mov	r4, r1
  uint32_t f = 0U;
  CMU_Select_TypeDef s;

  switch (CMU->WDOG0CLKCTRL & _CMU_WDOG0CLKCTRL_CLKSEL_MASK) {
    5ae2:	4b14      	ldr	r3, [pc, #80]	; (5b34 <wdog0ClkGet+0x58>)
    5ae4:	f8d3 3200 	ldr.w	r3, [r3, #512]	; 0x200
    5ae8:	f003 0307 	and.w	r3, r3, #7
    5aec:	3b01      	subs	r3, #1
    5aee:	2b03      	cmp	r3, #3
    5af0:	d818      	bhi.n	5b24 <wdog0ClkGet+0x48>
    5af2:	e8df f003 	tbb	[pc, r3]
    5af6:	0a02      	.short	0x0a02
    5af8:	120e      	.short	0x120e
    case _CMU_WDOG0CLKCTRL_CLKSEL_LFRCO:
      f = SystemLFRCOClockGet();
    5afa:	f000 fe13 	bl	6724 <SystemLFRCOClockGet>
      s = cmuSelect_LFRCO;
    5afe:	2308      	movs	r3, #8
      s = cmuSelect_Error;
      EFM_ASSERT(false);
      break;
  }

  if (freq != NULL) {
    5b00:	b105      	cbz	r5, 5b04 <wdog0ClkGet+0x28>
    *freq = f;
    5b02:	6028      	str	r0, [r5, #0]
  }
  if (sel != NULL) {
    5b04:	b104      	cbz	r4, 5b08 <wdog0ClkGet+0x2c>
    *sel = s;
    5b06:	7023      	strb	r3, [r4, #0]
  }
}
    5b08:	bd38      	pop	{r3, r4, r5, pc}
      f = SystemLFXOClockGet();
    5b0a:	f000 fe11 	bl	6730 <SystemLFXOClockGet>
      s = cmuSelect_LFXO;
    5b0e:	2307      	movs	r3, #7
      break;
    5b10:	e7f6      	b.n	5b00 <wdog0ClkGet+0x24>
      f = SystemULFRCOClockGet();
    5b12:	f000 fe0a 	bl	672a <SystemULFRCOClockGet>
      s = cmuSelect_ULFRCO;
    5b16:	2309      	movs	r3, #9
      break;
    5b18:	e7f2      	b.n	5b00 <wdog0ClkGet+0x24>
      f = SystemHCLKGet() / 1024U;
    5b1a:	f000 fd9d 	bl	6658 <SystemHCLKGet>
    5b1e:	0a80      	lsrs	r0, r0, #10
      s = cmuSelect_HCLKDIV1024;
    5b20:	230c      	movs	r3, #12
      break;
    5b22:	e7ed      	b.n	5b00 <wdog0ClkGet+0x24>
      EFM_ASSERT(false);
    5b24:	f640 61f7 	movw	r1, #3831	; 0xef7
    5b28:	4803      	ldr	r0, [pc, #12]	; (5b38 <wdog0ClkGet+0x5c>)
    5b2a:	f7ff fe49 	bl	57c0 <assertEFM>
      s = cmuSelect_Error;
    5b2e:	2300      	movs	r3, #0
  uint32_t f = 0U;
    5b30:	4618      	mov	r0, r3
      break;
    5b32:	e7e5      	b.n	5b00 <wdog0ClkGet+0x24>
    5b34:	40008000 	.word	0x40008000
    5b38:	0000bc84 	.word	0x0000bc84

00005b3c <wdog1ClkGet>:
{
    5b3c:	b538      	push	{r3, r4, r5, lr}
    5b3e:	4605      	mov	r5, r0
    5b40:	460c      	mov	r4, r1
  switch (CMU->WDOG1CLKCTRL & _CMU_WDOG1CLKCTRL_CLKSEL_MASK) {
    5b42:	4b14      	ldr	r3, [pc, #80]	; (5b94 <wdog1ClkGet+0x58>)
    5b44:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
    5b48:	f003 0307 	and.w	r3, r3, #7
    5b4c:	3b01      	subs	r3, #1
    5b4e:	2b03      	cmp	r3, #3
    5b50:	d818      	bhi.n	5b84 <wdog1ClkGet+0x48>
    5b52:	e8df f003 	tbb	[pc, r3]
    5b56:	0a02      	.short	0x0a02
    5b58:	120e      	.short	0x120e
      f = SystemLFRCOClockGet();
    5b5a:	f000 fde3 	bl	6724 <SystemLFRCOClockGet>
      s = cmuSelect_LFRCO;
    5b5e:	2308      	movs	r3, #8
  if (freq != NULL) {
    5b60:	b105      	cbz	r5, 5b64 <wdog1ClkGet+0x28>
    *freq = f;
    5b62:	6028      	str	r0, [r5, #0]
  if (sel != NULL) {
    5b64:	b104      	cbz	r4, 5b68 <wdog1ClkGet+0x2c>
    *sel = s;
    5b66:	7023      	strb	r3, [r4, #0]
}
    5b68:	bd38      	pop	{r3, r4, r5, pc}
      f = SystemLFXOClockGet();
    5b6a:	f000 fde1 	bl	6730 <SystemLFXOClockGet>
      s = cmuSelect_LFXO;
    5b6e:	2307      	movs	r3, #7
      break;
    5b70:	e7f6      	b.n	5b60 <wdog1ClkGet+0x24>
      f = SystemULFRCOClockGet();
    5b72:	f000 fdda 	bl	672a <SystemULFRCOClockGet>
      s = cmuSelect_ULFRCO;
    5b76:	2309      	movs	r3, #9
      break;
    5b78:	e7f2      	b.n	5b60 <wdog1ClkGet+0x24>
      f = SystemHCLKGet() / 1024U;
    5b7a:	f000 fd6d 	bl	6658 <SystemHCLKGet>
    5b7e:	0a80      	lsrs	r0, r0, #10
      s = cmuSelect_HCLKDIV1024;
    5b80:	230c      	movs	r3, #12
      break;
    5b82:	e7ed      	b.n	5b60 <wdog1ClkGet+0x24>
      EFM_ASSERT(false);
    5b84:	f240 4177 	movw	r1, #1143	; 0x477
    5b88:	4803      	ldr	r0, [pc, #12]	; (5b98 <wdog1ClkGet+0x5c>)
    5b8a:	f7ff fe19 	bl	57c0 <assertEFM>
      s = cmuSelect_Error;
    5b8e:	2300      	movs	r3, #0
  uint32_t f = 0U;
    5b90:	4618      	mov	r0, r3
      break;
    5b92:	e7e5      	b.n	5b60 <wdog1ClkGet+0x24>
    5b94:	40008000 	.word	0x40008000
    5b98:	0000bc84 	.word	0x0000bc84

00005b9c <rtccClkGet>:
{
    5b9c:	b538      	push	{r3, r4, r5, lr}
    5b9e:	4605      	mov	r5, r0
    5ba0:	460c      	mov	r4, r1
  switch (CMU->RTCCCLKCTRL & _CMU_RTCCCLKCTRL_CLKSEL_MASK) {
    5ba2:	4b11      	ldr	r3, [pc, #68]	; (5be8 <rtccClkGet+0x4c>)
    5ba4:	f8d3 3240 	ldr.w	r3, [r3, #576]	; 0x240
    5ba8:	f003 0303 	and.w	r3, r3, #3
    5bac:	2b02      	cmp	r3, #2
    5bae:	d013      	beq.n	5bd8 <rtccClkGet+0x3c>
    5bb0:	2b03      	cmp	r3, #3
    5bb2:	d015      	beq.n	5be0 <rtccClkGet+0x44>
    5bb4:	2b01      	cmp	r3, #1
    5bb6:	d007      	beq.n	5bc8 <rtccClkGet+0x2c>
      EFM_ASSERT(false);
    5bb8:	f640 618b 	movw	r1, #3723	; 0xe8b
    5bbc:	480b      	ldr	r0, [pc, #44]	; (5bec <rtccClkGet+0x50>)
    5bbe:	f7ff fdff 	bl	57c0 <assertEFM>
      s = cmuSelect_Error;
    5bc2:	2300      	movs	r3, #0
  uint32_t f = 0U;
    5bc4:	4618      	mov	r0, r3
      break;
    5bc6:	e002      	b.n	5bce <rtccClkGet+0x32>
      f = SystemLFRCOClockGet();
    5bc8:	f000 fdac 	bl	6724 <SystemLFRCOClockGet>
      s = cmuSelect_LFRCO;
    5bcc:	2308      	movs	r3, #8
  if (freq != NULL) {
    5bce:	b105      	cbz	r5, 5bd2 <rtccClkGet+0x36>
    *freq = f;
    5bd0:	6028      	str	r0, [r5, #0]
  if (sel != NULL) {
    5bd2:	b104      	cbz	r4, 5bd6 <rtccClkGet+0x3a>
    *sel = s;
    5bd4:	7023      	strb	r3, [r4, #0]
}
    5bd6:	bd38      	pop	{r3, r4, r5, pc}
      f = SystemLFXOClockGet();
    5bd8:	f000 fdaa 	bl	6730 <SystemLFXOClockGet>
      s = cmuSelect_LFXO;
    5bdc:	2307      	movs	r3, #7
      break;
    5bde:	e7f6      	b.n	5bce <rtccClkGet+0x32>
      f = SystemULFRCOClockGet();
    5be0:	f000 fda3 	bl	672a <SystemULFRCOClockGet>
      s = cmuSelect_ULFRCO;
    5be4:	2309      	movs	r3, #9
      break;
    5be6:	e7f2      	b.n	5bce <rtccClkGet+0x32>
    5be8:	40008000 	.word	0x40008000
    5bec:	0000bc84 	.word	0x0000bc84

00005bf0 <dpllRefClkGet>:
{
    5bf0:	b538      	push	{r3, r4, r5, lr}
    5bf2:	4605      	mov	r5, r0
    5bf4:	460c      	mov	r4, r1
  switch (CMU->DPLLREFCLKCTRL & _CMU_DPLLREFCLKCTRL_CLKSEL_MASK) {
    5bf6:	4b12      	ldr	r3, [pc, #72]	; (5c40 <dpllRefClkGet+0x50>)
    5bf8:	f8d3 0100 	ldr.w	r0, [r3, #256]	; 0x100
    5bfc:	f000 0003 	and.w	r0, r0, #3
    5c00:	2803      	cmp	r0, #3
    5c02:	d80f      	bhi.n	5c24 <dpllRefClkGet+0x34>
    5c04:	e8df f000 	tbb	[pc, r0]
    5c08:	0a060216 	.word	0x0a060216
      f = SystemHFXOClockGet();
    5c0c:	f000 fd3a 	bl	6684 <SystemHFXOClockGet>
      s = cmuSelect_HFXO;
    5c10:	2303      	movs	r3, #3
      break;
    5c12:	e010      	b.n	5c36 <dpllRefClkGet+0x46>
      f = SystemLFXOClockGet();
    5c14:	f000 fd8c 	bl	6730 <SystemLFXOClockGet>
      s = cmuSelect_LFXO;
    5c18:	2307      	movs	r3, #7
      break;
    5c1a:	e00c      	b.n	5c36 <dpllRefClkGet+0x46>
      f = SystemCLKIN0Get();
    5c1c:	f000 fd38 	bl	6690 <SystemCLKIN0Get>
      s = cmuSelect_CLKIN0;
    5c20:	2306      	movs	r3, #6
      break;
    5c22:	e008      	b.n	5c36 <dpllRefClkGet+0x46>
      EFM_ASSERT(false);
    5c24:	f640 41e5 	movw	r1, #3301	; 0xce5
    5c28:	4806      	ldr	r0, [pc, #24]	; (5c44 <dpllRefClkGet+0x54>)
    5c2a:	f7ff fdc9 	bl	57c0 <assertEFM>
      s = cmuSelect_Error;
    5c2e:	2300      	movs	r3, #0
  uint32_t f = 0U;
    5c30:	4618      	mov	r0, r3
      break;
    5c32:	e000      	b.n	5c36 <dpllRefClkGet+0x46>
  switch (CMU->DPLLREFCLKCTRL & _CMU_DPLLREFCLKCTRL_CLKSEL_MASK) {
    5c34:	2301      	movs	r3, #1
  if (freq != NULL) {
    5c36:	b105      	cbz	r5, 5c3a <dpllRefClkGet+0x4a>
    *freq = f;
    5c38:	6028      	str	r0, [r5, #0]
  if (sel != NULL) {
    5c3a:	b104      	cbz	r4, 5c3e <dpllRefClkGet+0x4e>
    *sel = s;
    5c3c:	7023      	strb	r3, [r4, #0]
}
    5c3e:	bd38      	pop	{r3, r4, r5, pc}
    5c40:	40008000 	.word	0x40008000
    5c44:	0000bc84 	.word	0x0000bc84

00005c48 <waitStateMax>:
{
    5c48:	b508      	push	{r3, lr}
  flashWaitStateControl(SystemMaxCoreClockGet(), 0);
    5c4a:	f000 fd17 	bl	667c <SystemMaxCoreClockGet>
    5c4e:	2100      	movs	r1, #0
    5c50:	f7ff fdb8 	bl	57c4 <flashWaitStateControl>
}
    5c54:	bd08      	pop	{r3, pc}
	...

00005c58 <CMU_ClockDivGet>:
{
    5c58:	b510      	push	{r4, lr}
  switch (clock) {
    5c5a:	3801      	subs	r0, #1
    5c5c:	280e      	cmp	r0, #14
    5c5e:	d820      	bhi.n	5ca2 <CMU_ClockDivGet+0x4a>
    5c60:	e8df f000 	tbb	[pc, r0]
    5c64:	1f1a1408 	.word	0x1f1a1408
    5c68:	1f1f1f1f 	.word	0x1f1f1f1f
    5c6c:	1f1f1f1f 	.word	0x1f1f1f1f
    5c70:	1f1f      	.short	0x1f1f
    5c72:	08          	.byte	0x08
    5c73:	00          	.byte	0x00
      ret = (CMU->SYSCLKCTRL & _CMU_SYSCLKCTRL_HCLKPRESC_MASK)
    5c74:	4b0c      	ldr	r3, [pc, #48]	; (5ca8 <CMU_ClockDivGet+0x50>)
    5c76:	6f1c      	ldr	r4, [r3, #112]	; 0x70
    5c78:	f3c4 3401 	ubfx	r4, r4, #12, #2
      if (ret == 2U ) {   // Unused value, illegal prescaler
    5c7c:	2c02      	cmp	r4, #2
    5c7e:	d111      	bne.n	5ca4 <CMU_ClockDivGet+0x4c>
        EFM_ASSERT(false);
    5c80:	f240 51d9 	movw	r1, #1497	; 0x5d9
    5c84:	4809      	ldr	r0, [pc, #36]	; (5cac <CMU_ClockDivGet+0x54>)
    5c86:	f7ff fd9b 	bl	57c0 <assertEFM>
    5c8a:	e00b      	b.n	5ca4 <CMU_ClockDivGet+0x4c>
      ret = (CMU->EXPORTCLKCTRL & _CMU_EXPORTCLKCTRL_PRESC_MASK)
    5c8c:	4b06      	ldr	r3, [pc, #24]	; (5ca8 <CMU_ClockDivGet+0x50>)
    5c8e:	f8d3 4090 	ldr.w	r4, [r3, #144]	; 0x90
    5c92:	f3c4 6404 	ubfx	r4, r4, #24, #5
      break;
    5c96:	e005      	b.n	5ca4 <CMU_ClockDivGet+0x4c>
      ret = (CMU->SYSCLKCTRL & _CMU_SYSCLKCTRL_PCLKPRESC_MASK)
    5c98:	4b03      	ldr	r3, [pc, #12]	; (5ca8 <CMU_ClockDivGet+0x50>)
    5c9a:	6f1c      	ldr	r4, [r3, #112]	; 0x70
    5c9c:	f3c4 2480 	ubfx	r4, r4, #10, #1
      break;
    5ca0:	e000      	b.n	5ca4 <CMU_ClockDivGet+0x4c>
  switch (clock) {
    5ca2:	2400      	movs	r4, #0
}
    5ca4:	1c60      	adds	r0, r4, #1
    5ca6:	bd10      	pop	{r4, pc}
    5ca8:	40008000 	.word	0x40008000
    5cac:	0000bc84 	.word	0x0000bc84

00005cb0 <CMU_ClockFreqGet>:
{
    5cb0:	b510      	push	{r4, lr}
    5cb2:	b082      	sub	sp, #8
  uint32_t ret = 0U;
    5cb4:	2300      	movs	r3, #0
    5cb6:	9301      	str	r3, [sp, #4]
  switch (clock) {
    5cb8:	2825      	cmp	r0, #37	; 0x25
    5cba:	d86a      	bhi.n	5d92 <CMU_ClockFreqGet+0xe2>
    5cbc:	e8df f000 	tbb	[pc, r0]
    5cc0:	271d1913 	.word	0x271d1913
    5cc4:	46413c31 	.word	0x46413c31
    5cc8:	5a55504b 	.word	0x5a55504b
    5ccc:	1969645f 	.word	0x1969645f
    5cd0:	4b696946 	.word	0x4b696946
    5cd4:	27312719 	.word	0x27312719
    5cd8:	2746193c 	.word	0x2746193c
    5cdc:	41414164 	.word	0x41414164
    5ce0:	27272741 	.word	0x27272741
    5ce4:	5550      	.short	0x5550
      ret = SystemSYSCLKGet();
    5ce6:	f000 fc9d 	bl	6624 <SystemSYSCLKGet>
    5cea:	9001      	str	r0, [sp, #4]
}
    5cec:	9801      	ldr	r0, [sp, #4]
    5cee:	b002      	add	sp, #8
    5cf0:	bd10      	pop	{r4, pc}
      ret = SystemHCLKGet();
    5cf2:	f000 fcb1 	bl	6658 <SystemHCLKGet>
    5cf6:	9001      	str	r0, [sp, #4]
      break;
    5cf8:	e7f8      	b.n	5cec <CMU_ClockFreqGet+0x3c>
      ret = SystemSYSCLKGet() / CMU_ClockDivGet(cmuClock_EXPCLK);
    5cfa:	f000 fc93 	bl	6624 <SystemSYSCLKGet>
    5cfe:	4604      	mov	r4, r0
    5d00:	2002      	movs	r0, #2
    5d02:	f7ff ffa9 	bl	5c58 <CMU_ClockDivGet>
    5d06:	fbb4 f4f0 	udiv	r4, r4, r0
    5d0a:	9401      	str	r4, [sp, #4]
      break;
    5d0c:	e7ee      	b.n	5cec <CMU_ClockFreqGet+0x3c>
      ret = SystemHCLKGet() / CMU_ClockDivGet(cmuClock_PCLK);
    5d0e:	f000 fca3 	bl	6658 <SystemHCLKGet>
    5d12:	4604      	mov	r4, r0
    5d14:	2003      	movs	r0, #3
    5d16:	f7ff ff9f 	bl	5c58 <CMU_ClockDivGet>
    5d1a:	fbb4 f4f0 	udiv	r4, r4, r0
    5d1e:	9401      	str	r4, [sp, #4]
      break;
    5d20:	e7e4      	b.n	5cec <CMU_ClockFreqGet+0x3c>
      ret = SystemHCLKGet() / CMU_ClockDivGet(cmuClock_PCLK) / 2U;
    5d22:	f000 fc99 	bl	6658 <SystemHCLKGet>
    5d26:	4604      	mov	r4, r0
    5d28:	2003      	movs	r0, #3
    5d2a:	f7ff ff95 	bl	5c58 <CMU_ClockDivGet>
    5d2e:	fbb4 f4f0 	udiv	r4, r4, r0
    5d32:	0864      	lsrs	r4, r4, #1
    5d34:	9401      	str	r4, [sp, #4]
      break;
    5d36:	e7d9      	b.n	5cec <CMU_ClockFreqGet+0x3c>
      iadcClkGet(&ret, NULL);
    5d38:	2100      	movs	r1, #0
    5d3a:	a801      	add	r0, sp, #4
    5d3c:	f7ff fe48 	bl	59d0 <iadcClkGet>
      break;
    5d40:	e7d4      	b.n	5cec <CMU_ClockFreqGet+0x3c>
      em01GrpaClkGet(&ret, NULL);
    5d42:	2100      	movs	r1, #0
    5d44:	a801      	add	r0, sp, #4
    5d46:	f7ff fe13 	bl	5970 <em01GrpaClkGet>
      break;
    5d4a:	e7cf      	b.n	5cec <CMU_ClockFreqGet+0x3c>
      em23GrpaClkGet(&ret, NULL);
    5d4c:	2100      	movs	r1, #0
    5d4e:	a801      	add	r0, sp, #4
    5d50:	f7ff fe70 	bl	5a34 <em23GrpaClkGet>
      break;
    5d54:	e7ca      	b.n	5cec <CMU_ClockFreqGet+0x3c>
      em4GrpaClkGet(&ret, NULL);
    5d56:	2100      	movs	r1, #0
    5d58:	a801      	add	r0, sp, #4
    5d5a:	f7ff fe95 	bl	5a88 <em4GrpaClkGet>
      break;
    5d5e:	e7c5      	b.n	5cec <CMU_ClockFreqGet+0x3c>
      wdog0ClkGet(&ret, NULL);
    5d60:	2100      	movs	r1, #0
    5d62:	a801      	add	r0, sp, #4
    5d64:	f7ff feba 	bl	5adc <wdog0ClkGet>
      break;
    5d68:	e7c0      	b.n	5cec <CMU_ClockFreqGet+0x3c>
      wdog1ClkGet(&ret, NULL);
    5d6a:	2100      	movs	r1, #0
    5d6c:	a801      	add	r0, sp, #4
    5d6e:	f7ff fee5 	bl	5b3c <wdog1ClkGet>
      break;
    5d72:	e7bb      	b.n	5cec <CMU_ClockFreqGet+0x3c>
      dpllRefClkGet(&ret, NULL);
    5d74:	2100      	movs	r1, #0
    5d76:	a801      	add	r0, sp, #4
    5d78:	f7ff ff3a 	bl	5bf0 <dpllRefClkGet>
      break;
    5d7c:	e7b6      	b.n	5cec <CMU_ClockFreqGet+0x3c>
      traceClkGet(&ret, NULL);
    5d7e:	2100      	movs	r1, #0
    5d80:	a801      	add	r0, sp, #4
    5d82:	f7ff fdd1 	bl	5928 <traceClkGet>
      break;
    5d86:	e7b1      	b.n	5cec <CMU_ClockFreqGet+0x3c>
      rtccClkGet(&ret, NULL);
    5d88:	2100      	movs	r1, #0
    5d8a:	a801      	add	r0, sp, #4
    5d8c:	f7ff ff06 	bl	5b9c <rtccClkGet>
      break;
    5d90:	e7ac      	b.n	5cec <CMU_ClockFreqGet+0x3c>
      EFM_ASSERT(false);
    5d92:	f240 31ad 	movw	r1, #941	; 0x3ad
    5d96:	4802      	ldr	r0, [pc, #8]	; (5da0 <CMU_ClockFreqGet+0xf0>)
    5d98:	f7ff fd12 	bl	57c0 <assertEFM>
      break;
    5d9c:	e7a6      	b.n	5cec <CMU_ClockFreqGet+0x3c>
    5d9e:	bf00      	nop
    5da0:	0000bc84 	.word	0x0000bc84

00005da4 <CMU_ClockSelectGet>:
{
    5da4:	b500      	push	{lr}
    5da6:	b083      	sub	sp, #12
  CMU_Select_TypeDef ret = cmuSelect_Error;
    5da8:	2300      	movs	r3, #0
    5daa:	f88d 3007 	strb.w	r3, [sp, #7]
  switch (clock) {
    5dae:	2825      	cmp	r0, #37	; 0x25
    5db0:	d86f      	bhi.n	5e92 <CMU_ClockSelectGet+0xee>
    5db2:	e8df f000 	tbb	[pc, r0]
    5db6:	6e13      	.short	0x6e13
    5db8:	346e6e6e 	.word	0x346e6e6e
    5dbc:	504a443e 	.word	0x504a443e
    5dc0:	68625c56 	.word	0x68625c56
    5dc4:	6e446e6e 	.word	0x6e446e6e
    5dc8:	6e6e4a6e 	.word	0x6e6e4a6e
    5dcc:	6e346e6e 	.word	0x6e346e6e
    5dd0:	3e686e44 	.word	0x3e686e44
    5dd4:	6e3e3e3e 	.word	0x6e3e3e3e
    5dd8:	56506e6e 	.word	0x56506e6e
      switch (CMU->SYSCLKCTRL & _CMU_SYSCLKCTRL_CLKSEL_MASK) {
    5ddc:	4b30      	ldr	r3, [pc, #192]	; (5ea0 <CMU_ClockSelectGet+0xfc>)
    5dde:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    5de0:	f003 0307 	and.w	r3, r3, #7
    5de4:	3b01      	subs	r3, #1
    5de6:	2b03      	cmp	r3, #3
    5de8:	d813      	bhi.n	5e12 <CMU_ClockSelectGet+0x6e>
    5dea:	e8df f003 	tbb	[pc, r3]
    5dee:	020e      	.short	0x020e
    5df0:	0a06      	.short	0x0a06
          ret = cmuSelect_HFRCODPLL;
    5df2:	2304      	movs	r3, #4
    5df4:	f88d 3007 	strb.w	r3, [sp, #7]
          break;
    5df8:	e016      	b.n	5e28 <CMU_ClockSelectGet+0x84>
          ret = cmuSelect_HFXO;
    5dfa:	2303      	movs	r3, #3
    5dfc:	f88d 3007 	strb.w	r3, [sp, #7]
          break;
    5e00:	e012      	b.n	5e28 <CMU_ClockSelectGet+0x84>
          ret = cmuSelect_CLKIN0;
    5e02:	2306      	movs	r3, #6
    5e04:	f88d 3007 	strb.w	r3, [sp, #7]
          break;
    5e08:	e00e      	b.n	5e28 <CMU_ClockSelectGet+0x84>
          ret = cmuSelect_FSRCO;
    5e0a:	2302      	movs	r3, #2
    5e0c:	f88d 3007 	strb.w	r3, [sp, #7]
          break;
    5e10:	e00a      	b.n	5e28 <CMU_ClockSelectGet+0x84>
          EFM_ASSERT(false);
    5e12:	f240 6172 	movw	r1, #1650	; 0x672
    5e16:	4823      	ldr	r0, [pc, #140]	; (5ea4 <CMU_ClockSelectGet+0x100>)
    5e18:	f7ff fcd2 	bl	57c0 <assertEFM>
          break;
    5e1c:	e004      	b.n	5e28 <CMU_ClockSelectGet+0x84>
      iadcClkGet(NULL, &ret);
    5e1e:	f10d 0107 	add.w	r1, sp, #7
    5e22:	2000      	movs	r0, #0
    5e24:	f7ff fdd4 	bl	59d0 <iadcClkGet>
}
    5e28:	f89d 0007 	ldrb.w	r0, [sp, #7]
    5e2c:	b003      	add	sp, #12
    5e2e:	f85d fb04 	ldr.w	pc, [sp], #4
      em01GrpaClkGet(NULL, &ret);
    5e32:	f10d 0107 	add.w	r1, sp, #7
    5e36:	2000      	movs	r0, #0
    5e38:	f7ff fd9a 	bl	5970 <em01GrpaClkGet>
      break;
    5e3c:	e7f4      	b.n	5e28 <CMU_ClockSelectGet+0x84>
      em23GrpaClkGet(NULL, &ret);
    5e3e:	f10d 0107 	add.w	r1, sp, #7
    5e42:	2000      	movs	r0, #0
    5e44:	f7ff fdf6 	bl	5a34 <em23GrpaClkGet>
      break;
    5e48:	e7ee      	b.n	5e28 <CMU_ClockSelectGet+0x84>
      em4GrpaClkGet(NULL, &ret);
    5e4a:	f10d 0107 	add.w	r1, sp, #7
    5e4e:	2000      	movs	r0, #0
    5e50:	f7ff fe1a 	bl	5a88 <em4GrpaClkGet>
      break;
    5e54:	e7e8      	b.n	5e28 <CMU_ClockSelectGet+0x84>
      wdog0ClkGet(NULL, &ret);
    5e56:	f10d 0107 	add.w	r1, sp, #7
    5e5a:	2000      	movs	r0, #0
    5e5c:	f7ff fe3e 	bl	5adc <wdog0ClkGet>
      break;
    5e60:	e7e2      	b.n	5e28 <CMU_ClockSelectGet+0x84>
      wdog1ClkGet(NULL, &ret);
    5e62:	f10d 0107 	add.w	r1, sp, #7
    5e66:	2000      	movs	r0, #0
    5e68:	f7ff fe68 	bl	5b3c <wdog1ClkGet>
      break;
    5e6c:	e7dc      	b.n	5e28 <CMU_ClockSelectGet+0x84>
      dpllRefClkGet(NULL, &ret);
    5e6e:	f10d 0107 	add.w	r1, sp, #7
    5e72:	2000      	movs	r0, #0
    5e74:	f7ff febc 	bl	5bf0 <dpllRefClkGet>
      break;
    5e78:	e7d6      	b.n	5e28 <CMU_ClockSelectGet+0x84>
      traceClkGet(NULL, &ret);
    5e7a:	f10d 0107 	add.w	r1, sp, #7
    5e7e:	2000      	movs	r0, #0
    5e80:	f7ff fd52 	bl	5928 <traceClkGet>
      break;
    5e84:	e7d0      	b.n	5e28 <CMU_ClockSelectGet+0x84>
      rtccClkGet(NULL, &ret);
    5e86:	f10d 0107 	add.w	r1, sp, #7
    5e8a:	2000      	movs	r0, #0
    5e8c:	f7ff fe86 	bl	5b9c <rtccClkGet>
      break;
    5e90:	e7ca      	b.n	5e28 <CMU_ClockSelectGet+0x84>
      EFM_ASSERT(false);
    5e92:	f240 7101 	movw	r1, #1793	; 0x701
    5e96:	4803      	ldr	r0, [pc, #12]	; (5ea4 <CMU_ClockSelectGet+0x100>)
    5e98:	f7ff fc92 	bl	57c0 <assertEFM>
      break;
    5e9c:	e7c4      	b.n	5e28 <CMU_ClockSelectGet+0x84>
    5e9e:	bf00      	nop
    5ea0:	40008000 	.word	0x40008000
    5ea4:	0000bc84 	.word	0x0000bc84

00005ea8 <CMU_UpdateWaitStates>:
{
    5ea8:	b508      	push	{r3, lr}
  if (vscale > 0) {
    5eaa:	2900      	cmp	r1, #0
    5eac:	dd03      	ble.n	5eb6 <CMU_UpdateWaitStates+0xe>
    flashWaitStateControl(freq, VSCALE_EM01_LOW_POWER);
    5eae:	2101      	movs	r1, #1
    5eb0:	f7ff fc88 	bl	57c4 <flashWaitStateControl>
}
    5eb4:	bd08      	pop	{r3, pc}
    flashWaitStateControl(freq, VSCALE_EM01_HIGH_PERFORMANCE);
    5eb6:	2100      	movs	r1, #0
    5eb8:	f7ff fc84 	bl	57c4 <flashWaitStateControl>
}
    5ebc:	e7fa      	b.n	5eb4 <CMU_UpdateWaitStates+0xc>
	...

00005ec0 <CMU_ClockDivSet>:
{
    5ec0:	b510      	push	{r4, lr}
  switch (clock) {
    5ec2:	3801      	subs	r0, #1
    5ec4:	280e      	cmp	r0, #14
    5ec6:	d84b      	bhi.n	5f60 <CMU_ClockDivSet+0xa0>
    5ec8:	e8df f000 	tbb	[pc, r0]
    5ecc:	4a392608 	.word	0x4a392608
    5ed0:	4a4a4a4a 	.word	0x4a4a4a4a
    5ed4:	4a4a4a4a 	.word	0x4a4a4a4a
    5ed8:	4a4a      	.short	0x4a4a
    5eda:	08          	.byte	0x08
    5edb:	00          	.byte	0x00
      EFM_ASSERT((div == 1U) || (div == 2U) || (div == 4U));
    5edc:	1e4c      	subs	r4, r1, #1
    5ede:	2c01      	cmp	r4, #1
    5ee0:	d901      	bls.n	5ee6 <CMU_ClockDivSet+0x26>
    5ee2:	2904      	cmp	r1, #4
    5ee4:	d112      	bne.n	5f0c <CMU_ClockDivSet+0x4c>
      waitStateMax();
    5ee6:	f7ff feaf 	bl	5c48 <waitStateMax>
      pclkDivMax();
    5eea:	f000 f843 	bl	5f74 <pclkDivMax>
      CMU->SYSCLKCTRL = (CMU->SYSCLKCTRL & ~_CMU_SYSCLKCTRL_HCLKPRESC_MASK)
    5eee:	4a1f      	ldr	r2, [pc, #124]	; (5f6c <CMU_ClockDivSet+0xac>)
    5ef0:	6f13      	ldr	r3, [r2, #112]	; 0x70
    5ef2:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
                        | ((div - 1U) << _CMU_SYSCLKCTRL_HCLKPRESC_SHIFT);
    5ef6:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
      CMU->SYSCLKCTRL = (CMU->SYSCLKCTRL & ~_CMU_SYSCLKCTRL_HCLKPRESC_MASK)
    5efa:	6713      	str	r3, [r2, #112]	; 0x70
 *   provided for CMSIS compliance and if a user modifies the the core clock
 *   outside the EMLIB CMU API.
 *****************************************************************************/
static __INLINE uint32_t SystemCoreClockGet(void)
{
  return SystemHCLKGet();
    5efc:	f000 fbac 	bl	6658 <SystemHCLKGet>
      CMU_UpdateWaitStates(SystemCoreClockGet(), VSCALE_DEFAULT);
    5f00:	2100      	movs	r1, #0
    5f02:	f7ff ffd1 	bl	5ea8 <CMU_UpdateWaitStates>
      pclkDivOptimize();
    5f06:	f000 f83b 	bl	5f80 <pclkDivOptimize>
}
    5f0a:	bd10      	pop	{r4, pc}
      EFM_ASSERT((div == 1U) || (div == 2U) || (div == 4U));
    5f0c:	f240 6116 	movw	r1, #1558	; 0x616
    5f10:	4817      	ldr	r0, [pc, #92]	; (5f70 <CMU_ClockDivSet+0xb0>)
    5f12:	f7ff fc55 	bl	57c0 <assertEFM>
    5f16:	e7e6      	b.n	5ee6 <CMU_ClockDivSet+0x26>
      EFM_ASSERT((div >= 1U) && (div <= 32U));
    5f18:	1e4c      	subs	r4, r1, #1
    5f1a:	2c1f      	cmp	r4, #31
    5f1c:	d809      	bhi.n	5f32 <CMU_ClockDivSet+0x72>
      CMU->EXPORTCLKCTRL = (CMU->EXPORTCLKCTRL & ~_CMU_EXPORTCLKCTRL_PRESC_MASK)
    5f1e:	4b13      	ldr	r3, [pc, #76]	; (5f6c <CMU_ClockDivSet+0xac>)
    5f20:	f8d3 1090 	ldr.w	r1, [r3, #144]	; 0x90
    5f24:	f021 51f8 	bic.w	r1, r1, #520093696	; 0x1f000000
                           | ((div - 1U) << _CMU_EXPORTCLKCTRL_PRESC_SHIFT);
    5f28:	ea41 6104 	orr.w	r1, r1, r4, lsl #24
      CMU->EXPORTCLKCTRL = (CMU->EXPORTCLKCTRL & ~_CMU_EXPORTCLKCTRL_PRESC_MASK)
    5f2c:	f8c3 1090 	str.w	r1, [r3, #144]	; 0x90
      break;
    5f30:	e7eb      	b.n	5f0a <CMU_ClockDivSet+0x4a>
      EFM_ASSERT((div >= 1U) && (div <= 32U));
    5f32:	f240 613c 	movw	r1, #1596	; 0x63c
    5f36:	480e      	ldr	r0, [pc, #56]	; (5f70 <CMU_ClockDivSet+0xb0>)
    5f38:	f7ff fc42 	bl	57c0 <assertEFM>
    5f3c:	e7ef      	b.n	5f1e <CMU_ClockDivSet+0x5e>
      EFM_ASSERT((div == 1U) || (div == 2U));
    5f3e:	1e4c      	subs	r4, r1, #1
    5f40:	2c01      	cmp	r4, #1
    5f42:	d807      	bhi.n	5f54 <CMU_ClockDivSet+0x94>
      CMU->SYSCLKCTRL = (CMU->SYSCLKCTRL & ~_CMU_SYSCLKCTRL_PCLKPRESC_MASK)
    5f44:	4b09      	ldr	r3, [pc, #36]	; (5f6c <CMU_ClockDivSet+0xac>)
    5f46:	6f19      	ldr	r1, [r3, #112]	; 0x70
    5f48:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
                        | ((div - 1U) << _CMU_SYSCLKCTRL_PCLKPRESC_SHIFT);
    5f4c:	ea41 2184 	orr.w	r1, r1, r4, lsl #10
      CMU->SYSCLKCTRL = (CMU->SYSCLKCTRL & ~_CMU_SYSCLKCTRL_PCLKPRESC_MASK)
    5f50:	6719      	str	r1, [r3, #112]	; 0x70
      break;
    5f52:	e7da      	b.n	5f0a <CMU_ClockDivSet+0x4a>
      EFM_ASSERT((div == 1U) || (div == 2U));
    5f54:	f240 6142 	movw	r1, #1602	; 0x642
    5f58:	4805      	ldr	r0, [pc, #20]	; (5f70 <CMU_ClockDivSet+0xb0>)
    5f5a:	f7ff fc31 	bl	57c0 <assertEFM>
    5f5e:	e7f1      	b.n	5f44 <CMU_ClockDivSet+0x84>
      EFM_ASSERT(false);
    5f60:	f44f 61c9 	mov.w	r1, #1608	; 0x648
    5f64:	4802      	ldr	r0, [pc, #8]	; (5f70 <CMU_ClockDivSet+0xb0>)
    5f66:	f7ff fc2b 	bl	57c0 <assertEFM>
}
    5f6a:	e7ce      	b.n	5f0a <CMU_ClockDivSet+0x4a>
    5f6c:	40008000 	.word	0x40008000
    5f70:	0000bc84 	.word	0x0000bc84

00005f74 <pclkDivMax>:
{
    5f74:	b508      	push	{r3, lr}
  CMU_ClockDivSet(cmuClock_PCLK, 2U);
    5f76:	2102      	movs	r1, #2
    5f78:	2003      	movs	r0, #3
    5f7a:	f7ff ffa1 	bl	5ec0 <CMU_ClockDivSet>
}
    5f7e:	bd08      	pop	{r3, pc}

00005f80 <pclkDivOptimize>:
{
    5f80:	b508      	push	{r3, lr}
  if (CMU_ClockFreqGet(cmuClock_HCLK) <= CMU_MAX_PCLK_FREQ) {
    5f82:	2001      	movs	r0, #1
    5f84:	f7ff fe94 	bl	5cb0 <CMU_ClockFreqGet>
    5f88:	4b04      	ldr	r3, [pc, #16]	; (5f9c <pclkDivOptimize+0x1c>)
    5f8a:	4298      	cmp	r0, r3
    5f8c:	d904      	bls.n	5f98 <pclkDivOptimize+0x18>
  CMU_ClkDiv_TypeDef div = 2U;
    5f8e:	2102      	movs	r1, #2
  CMU_ClockDivSet(cmuClock_PCLK, div);
    5f90:	2003      	movs	r0, #3
    5f92:	f7ff ff95 	bl	5ec0 <CMU_ClockDivSet>
}
    5f96:	bd08      	pop	{r3, pc}
    div = 1U;
    5f98:	2101      	movs	r1, #1
    5f9a:	e7f9      	b.n	5f90 <pclkDivOptimize+0x10>
    5f9c:	02faf080 	.word	0x02faf080

00005fa0 <CMU_HFRCODPLLBandSet>:
{
    5fa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5fa2:	4605      	mov	r5, r0
  freqCal = HFRCODPLLDevinfoGet(freq);
    5fa4:	f7ff fc3a 	bl	581c <HFRCODPLLDevinfoGet>
    5fa8:	4604      	mov	r4, r0
  EFM_ASSERT((freqCal != 0UL) && (freqCal != UINT_MAX));
    5faa:	1e43      	subs	r3, r0, #1
    5fac:	f113 0f03 	cmn.w	r3, #3
    5fb0:	d829      	bhi.n	6006 <CMU_HFRCODPLLBandSet+0x66>
  if (DPLL0->EN == DPLL_EN_EN) {
    5fb2:	4b30      	ldr	r3, [pc, #192]	; (6074 <CMU_HFRCODPLLBandSet+0xd4>)
    5fb4:	685b      	ldr	r3, [r3, #4]
    5fb6:	2b01      	cmp	r3, #1
    5fb8:	d02b      	beq.n	6012 <CMU_HFRCODPLLBandSet+0x72>
  if (CMU_ClockSelectGet(cmuClock_SYSCLK) == cmuSelect_HFRCODPLL) {
    5fba:	2000      	movs	r0, #0
    5fbc:	f7ff fef2 	bl	5da4 <CMU_ClockSelectGet>
    5fc0:	2804      	cmp	r0, #4
    5fc2:	d02f      	beq.n	6024 <CMU_HFRCODPLLBandSet+0x84>
  freqCal &= ~_HFRCO_CAL_CLKDIV_MASK;
    5fc4:	f024 7440 	bic.w	r4, r4, #50331648	; 0x3000000
  switch (freq) {
    5fc8:	4b2b      	ldr	r3, [pc, #172]	; (6078 <CMU_HFRCODPLLBandSet+0xd8>)
    5fca:	429d      	cmp	r5, r3
    5fcc:	d02f      	beq.n	602e <CMU_HFRCODPLLBandSet+0x8e>
    5fce:	4b2b      	ldr	r3, [pc, #172]	; (607c <CMU_HFRCODPLLBandSet+0xdc>)
    5fd0:	429d      	cmp	r5, r3
    5fd2:	d02f      	beq.n	6034 <CMU_HFRCODPLLBandSet+0x94>
  while (HFRCO0->STATUS & (HFRCO_STATUS_SYNCBUSY | HFRCO_STATUS_FREQBSY)) {
    5fd4:	4b2a      	ldr	r3, [pc, #168]	; (6080 <CMU_HFRCODPLLBandSet+0xe0>)
    5fd6:	68db      	ldr	r3, [r3, #12]
    5fd8:	f013 0f06 	tst.w	r3, #6
    5fdc:	d1fa      	bne.n	5fd4 <CMU_HFRCODPLLBandSet+0x34>
  hfrcoCalCurrent = HFRCO0->CAL;
    5fde:	4b28      	ldr	r3, [pc, #160]	; (6080 <CMU_HFRCODPLLBandSet+0xe0>)
    5fe0:	689f      	ldr	r7, [r3, #8]
  HFRCO0->CAL = freqCal;
    5fe2:	609c      	str	r4, [r3, #8]
  hfrcoFreqRangeExpected = (freqCal     & _HFRCO_CAL_FREQRANGE_MASK);
    5fe4:	f404 14f8 	and.w	r4, r4, #2031616	; 0x1f0000
  hfrcoFreqRangeActual   = (HFRCO0->CAL & _HFRCO_CAL_FREQRANGE_MASK);
    5fe8:	689e      	ldr	r6, [r3, #8]
    5fea:	f406 16f8 	and.w	r6, r6, #2031616	; 0x1f0000
  EFM_ASSERT(hfrcoFreqRangeExpected == hfrcoFreqRangeActual);
    5fee:	42b4      	cmp	r4, r6
    5ff0:	d123      	bne.n	603a <CMU_HFRCODPLLBandSet+0x9a>
  if (hfrcoFreqRangeExpected == hfrcoFreqRangeActual) {
    5ff2:	42b4      	cmp	r4, r6
    5ff4:	d027      	beq.n	6046 <CMU_HFRCODPLLBandSet+0xa6>
    HFRCO0->CAL = hfrcoCalCurrent;
    5ff6:	4b22      	ldr	r3, [pc, #136]	; (6080 <CMU_HFRCODPLLBandSet+0xe0>)
    5ff8:	609f      	str	r7, [r3, #8]
  if (CMU_ClockSelectGet(cmuClock_SYSCLK) == cmuSelect_HFRCODPLL) {
    5ffa:	2000      	movs	r0, #0
    5ffc:	f7ff fed2 	bl	5da4 <CMU_ClockSelectGet>
    6000:	2804      	cmp	r0, #4
    6002:	d024      	beq.n	604e <CMU_HFRCODPLLBandSet+0xae>
}
    6004:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  EFM_ASSERT((freqCal != 0UL) && (freqCal != UINT_MAX));
    6006:	f640 2171 	movw	r1, #2673	; 0xa71
    600a:	481e      	ldr	r0, [pc, #120]	; (6084 <CMU_HFRCODPLLBandSet+0xe4>)
    600c:	f7ff fbd8 	bl	57c0 <assertEFM>
    6010:	e7cf      	b.n	5fb2 <CMU_HFRCODPLLBandSet+0x12>
    DPLL0->EN_CLR = DPLL_EN_EN;
    6012:	4b1d      	ldr	r3, [pc, #116]	; (6088 <CMU_HFRCODPLLBandSet+0xe8>)
    6014:	2201      	movs	r2, #1
    6016:	605a      	str	r2, [r3, #4]
    while ((DPLL0->STATUS & (DPLL_STATUS_ENS | DPLL_STATUS_RDY)) != 0UL) {
    6018:	4b16      	ldr	r3, [pc, #88]	; (6074 <CMU_HFRCODPLLBandSet+0xd4>)
    601a:	699b      	ldr	r3, [r3, #24]
    601c:	f013 0f03 	tst.w	r3, #3
    6020:	d1fa      	bne.n	6018 <CMU_HFRCODPLLBandSet+0x78>
    6022:	e7ca      	b.n	5fba <CMU_HFRCODPLLBandSet+0x1a>
    waitStateMax();
    6024:	f7ff fe10 	bl	5c48 <waitStateMax>
    pclkDivMax();
    6028:	f7ff ffa4 	bl	5f74 <pclkDivMax>
    602c:	e7ca      	b.n	5fc4 <CMU_HFRCODPLLBandSet+0x24>
      freqCal |= HFRCO_CAL_CLKDIV_DIV4;
    602e:	f044 7400 	orr.w	r4, r4, #33554432	; 0x2000000
      break;
    6032:	e7cf      	b.n	5fd4 <CMU_HFRCODPLLBandSet+0x34>
      freqCal |= HFRCO_CAL_CLKDIV_DIV2;
    6034:	f044 7480 	orr.w	r4, r4, #16777216	; 0x1000000
      break;
    6038:	e7cc      	b.n	5fd4 <CMU_HFRCODPLLBandSet+0x34>
  EFM_ASSERT(hfrcoFreqRangeExpected == hfrcoFreqRangeActual);
    603a:	f640 21b8 	movw	r1, #2744	; 0xab8
    603e:	4811      	ldr	r0, [pc, #68]	; (6084 <CMU_HFRCODPLLBandSet+0xe4>)
    6040:	f7ff fbbe 	bl	57c0 <assertEFM>
    6044:	e7d5      	b.n	5ff2 <CMU_HFRCODPLLBandSet+0x52>
    SystemHFRCODPLLClockSet(freq);
    6046:	4628      	mov	r0, r5
    6048:	f000 fae6 	bl	6618 <SystemHFRCODPLLClockSet>
    604c:	e7d5      	b.n	5ffa <CMU_HFRCODPLLBandSet+0x5a>
    604e:	f000 fb03 	bl	6658 <SystemHCLKGet>
    6052:	4604      	mov	r4, r0
    EFM_ASSERT(sysFreq <= (uint32_t)freq);
    6054:	4285      	cmp	r5, r0
    6056:	d306      	bcc.n	6066 <CMU_HFRCODPLLBandSet+0xc6>
    CMU_UpdateWaitStates(sysFreq, VSCALE_DEFAULT);
    6058:	2100      	movs	r1, #0
    605a:	4620      	mov	r0, r4
    605c:	f7ff ff24 	bl	5ea8 <CMU_UpdateWaitStates>
    pclkDivOptimize();
    6060:	f7ff ff8e 	bl	5f80 <pclkDivOptimize>
}
    6064:	e7ce      	b.n	6004 <CMU_HFRCODPLLBandSet+0x64>
    EFM_ASSERT(sysFreq <= (uint32_t)freq);
    6066:	f640 21c9 	movw	r1, #2761	; 0xac9
    606a:	4806      	ldr	r0, [pc, #24]	; (6084 <CMU_HFRCODPLLBandSet+0xe4>)
    606c:	f7ff fba8 	bl	57c0 <assertEFM>
    6070:	e7f2      	b.n	6058 <CMU_HFRCODPLLBandSet+0xb8>
    6072:	bf00      	nop
    6074:	4001c000 	.word	0x4001c000
    6078:	000f4240 	.word	0x000f4240
    607c:	001e8480 	.word	0x001e8480
    6080:	40010000 	.word	0x40010000
    6084:	0000bc84 	.word	0x0000bc84
    6088:	4001e000 	.word	0x4001e000

0000608c <CORE_EnterCritical>:
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
    608c:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
    6090:	b672      	cpsid	i
SL_WEAK CORE_irqState_t CORE_EnterCritical(void)
{
  CORE_irqState_t irqState = __get_PRIMASK();
  __disable_irq();
  return irqState;
}
    6092:	4770      	bx	lr

00006094 <CORE_ExitCritical>:
 *   the CRITICAL section. This value is usually the one returned by a prior
 *   call to @ref CORE_EnterCritical().
 ******************************************************************************/
SL_WEAK void CORE_ExitCritical(CORE_irqState_t irqState)
{
  if (irqState == 0U) {
    6094:	b900      	cbnz	r0, 6098 <CORE_ExitCritical+0x4>
  __ASM volatile ("cpsie i" : : : "memory");
    6096:	b662      	cpsie	i
    __enable_irq();
  }
}
    6098:	4770      	bx	lr

0000609a <CORE_EnterAtomic>:
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
    609a:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
    609e:	b672      	cpsid	i
#else
  CORE_irqState_t irqState = __get_PRIMASK();
  __disable_irq();
  return irqState;
#endif // (CORE_ATOMIC_METHOD == CORE_ATOMIC_METHOD_BASEPRI)
}
    60a0:	4770      	bx	lr

000060a2 <CORE_ExitAtomic>:
SL_WEAK void CORE_ExitAtomic(CORE_irqState_t irqState)
{
#if (CORE_ATOMIC_METHOD == CORE_ATOMIC_METHOD_BASEPRI)
  __set_BASEPRI(irqState);
#else
  if (irqState == 0U) {
    60a2:	b900      	cbnz	r0, 60a6 <CORE_ExitAtomic+0x4>
  __ASM volatile ("cpsie i" : : : "memory");
    60a4:	b662      	cpsie	i
    __enable_irq();
  }
#endif // (CORE_ATOMIC_METHOD == CORE_ATOMIC_METHOD_BASEPRI)
}
    60a6:	4770      	bx	lr

000060a8 <GPIO_PinModeSet>:
 ******************************************************************************/
void GPIO_PinModeSet(GPIO_Port_TypeDef port,
                     unsigned int pin,
                     GPIO_Mode_TypeDef mode,
                     unsigned int out)
{
    60a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    60aa:	460d      	mov	r5, r1
    60ac:	4616      	mov	r6, r2
    60ae:	461f      	mov	r7, r3
  EFM_ASSERT(GPIO_PORT_PIN_VALID(port, pin));
    60b0:	4604      	mov	r4, r0
    60b2:	b148      	cbz	r0, 60c8 <GPIO_PinModeSet+0x20>
    60b4:	2801      	cmp	r0, #1
    60b6:	d018      	beq.n	60ea <GPIO_PinModeSet+0x42>
    60b8:	2802      	cmp	r0, #2
    60ba:	d018      	beq.n	60ee <GPIO_PinModeSet+0x46>
    60bc:	2803      	cmp	r0, #3
    60be:	d001      	beq.n	60c4 <GPIO_PinModeSet+0x1c>
    60c0:	2300      	movs	r3, #0
    60c2:	e002      	b.n	60ca <GPIO_PinModeSet+0x22>
    60c4:	231f      	movs	r3, #31
    60c6:	e000      	b.n	60ca <GPIO_PinModeSet+0x22>
    60c8:	237f      	movs	r3, #127	; 0x7f
    60ca:	40eb      	lsrs	r3, r5
    60cc:	f013 0f01 	tst.w	r3, #1
    60d0:	d00f      	beq.n	60f2 <GPIO_PinModeSet+0x4a>

  /* If disabling a pin, do not modify DOUT to reduce the chance of */
  /* a glitch/spike (may not be sufficient precaution in all use cases). */
  if (mode != gpioModeDisabled) {
    60d2:	b33e      	cbz	r6, 6124 <GPIO_PinModeSet+0x7c>
    if (out) {
    60d4:	2f00      	cmp	r7, #0
    60d6:	d052      	beq.n	617e <GPIO_PinModeSet+0xd6>
 * @param[in] pin
 *   The pin to set.
 ******************************************************************************/
__STATIC_INLINE void GPIO_PinOutSet(GPIO_Port_TypeDef port, unsigned int pin)
{
  EFM_ASSERT(GPIO_PORT_PIN_VALID(port, pin));
    60d8:	b19c      	cbz	r4, 6102 <GPIO_PinModeSet+0x5a>
    60da:	2c01      	cmp	r4, #1
    60dc:	d045      	beq.n	616a <GPIO_PinModeSet+0xc2>
    60de:	2c02      	cmp	r4, #2
    60e0:	d045      	beq.n	616e <GPIO_PinModeSet+0xc6>
    60e2:	2c03      	cmp	r4, #3
    60e4:	d00b      	beq.n	60fe <GPIO_PinModeSet+0x56>
    60e6:	2300      	movs	r3, #0
    60e8:	e00c      	b.n	6104 <GPIO_PinModeSet+0x5c>
  EFM_ASSERT(GPIO_PORT_PIN_VALID(port, pin));
    60ea:	2303      	movs	r3, #3
    60ec:	e7ed      	b.n	60ca <GPIO_PinModeSet+0x22>
    60ee:	233f      	movs	r3, #63	; 0x3f
    60f0:	e7eb      	b.n	60ca <GPIO_PinModeSet+0x22>
    60f2:	f240 111d 	movw	r1, #285	; 0x11d
    60f6:	4863      	ldr	r0, [pc, #396]	; (6284 <GPIO_PinModeSet+0x1dc>)
    60f8:	f7ff fb62 	bl	57c0 <assertEFM>
    60fc:	e7e9      	b.n	60d2 <GPIO_PinModeSet+0x2a>
    60fe:	231f      	movs	r3, #31
    6100:	e000      	b.n	6104 <GPIO_PinModeSet+0x5c>
    6102:	237f      	movs	r3, #127	; 0x7f
    6104:	40eb      	lsrs	r3, r5
    6106:	f013 0f01 	tst.w	r3, #1
    610a:	d032      	beq.n	6172 <GPIO_PinModeSet+0xca>
#if defined(_GPIO_P_DOUTSET_MASK)
  GPIO->P[port].DOUTSET = 1 << pin;
#elif defined(GPIO_HAS_SET_CLEAR)
  GPIO->P_SET[port].DOUT = 1 << pin;
    610c:	2201      	movs	r2, #1
    610e:	40aa      	lsls	r2, r5
    6110:	eb04 0344 	add.w	r3, r4, r4, lsl #1
    6114:	011b      	lsls	r3, r3, #4
    6116:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
    611a:	f503 3370 	add.w	r3, r3, #245760	; 0x3c000
    611e:	f241 0110 	movw	r1, #4112	; 0x1010
    6122:	505a      	str	r2, [r3, r1]
    }
  }

  /* There are two registers controlling the pins for each port. The MODEL
   * register controls pins 0-7 and MODEH controls pins 8-15. */
  if (pin < 8) {
    6124:	2d07      	cmp	r5, #7
    6126:	d851      	bhi.n	61cc <GPIO_PinModeSet+0x124>
    GPIO->P[port].MODEL = (GPIO->P[port].MODEL & ~(0xFu << (pin * 4)))
    6128:	4a57      	ldr	r2, [pc, #348]	; (6288 <GPIO_PinModeSet+0x1e0>)
    612a:	eb04 0344 	add.w	r3, r4, r4, lsl #1
    612e:	eb02 1303 	add.w	r3, r2, r3, lsl #4
    6132:	685b      	ldr	r3, [r3, #4]
    6134:	00a9      	lsls	r1, r5, #2
    6136:	200f      	movs	r0, #15
    6138:	4088      	lsls	r0, r1
    613a:	ea23 0300 	bic.w	r3, r3, r0
                          | (mode << (pin * 4));
    613e:	fa06 f101 	lsl.w	r1, r6, r1
    6142:	430b      	orrs	r3, r1
    GPIO->P[port].MODEL = (GPIO->P[port].MODEL & ~(0xFu << (pin * 4)))
    6144:	eb04 0144 	add.w	r1, r4, r4, lsl #1
    6148:	eb02 1201 	add.w	r2, r2, r1, lsl #4
    614c:	6053      	str	r3, [r2, #4]
  } else {
    GPIO->P[port].MODEH = (GPIO->P[port].MODEH & ~(0xFu << ((pin - 8) * 4)))
                          | (mode << ((pin - 8) * 4));
  }

  if (mode == gpioModeDisabled) {
    614e:	2e00      	cmp	r6, #0
    6150:	d166      	bne.n	6220 <GPIO_PinModeSet+0x178>
    if (out) {
    6152:	2f00      	cmp	r7, #0
    6154:	d06f      	beq.n	6236 <GPIO_PinModeSet+0x18e>
  EFM_ASSERT(GPIO_PORT_PIN_VALID(port, pin));
    6156:	2c00      	cmp	r4, #0
    6158:	d050      	beq.n	61fc <GPIO_PinModeSet+0x154>
    615a:	2c01      	cmp	r4, #1
    615c:	d061      	beq.n	6222 <GPIO_PinModeSet+0x17a>
    615e:	2c02      	cmp	r4, #2
    6160:	d061      	beq.n	6226 <GPIO_PinModeSet+0x17e>
    6162:	2c03      	cmp	r4, #3
    6164:	d048      	beq.n	61f8 <GPIO_PinModeSet+0x150>
    6166:	2300      	movs	r3, #0
    6168:	e049      	b.n	61fe <GPIO_PinModeSet+0x156>
    616a:	2303      	movs	r3, #3
    616c:	e7ca      	b.n	6104 <GPIO_PinModeSet+0x5c>
    616e:	233f      	movs	r3, #63	; 0x3f
    6170:	e7c8      	b.n	6104 <GPIO_PinModeSet+0x5c>
    6172:	f44f 6182 	mov.w	r1, #1040	; 0x410
    6176:	4845      	ldr	r0, [pc, #276]	; (628c <GPIO_PinModeSet+0x1e4>)
    6178:	f7ff fb22 	bl	57c0 <assertEFM>
    617c:	e7c6      	b.n	610c <GPIO_PinModeSet+0x64>
  EFM_ASSERT(GPIO_PORT_PIN_VALID(port, pin));
    617e:	b14c      	cbz	r4, 6194 <GPIO_PinModeSet+0xec>
    6180:	2c01      	cmp	r4, #1
    6182:	d019      	beq.n	61b8 <GPIO_PinModeSet+0x110>
    6184:	2c02      	cmp	r4, #2
    6186:	d019      	beq.n	61bc <GPIO_PinModeSet+0x114>
    6188:	2c03      	cmp	r4, #3
    618a:	d001      	beq.n	6190 <GPIO_PinModeSet+0xe8>
    618c:	463b      	mov	r3, r7
    618e:	e002      	b.n	6196 <GPIO_PinModeSet+0xee>
    6190:	231f      	movs	r3, #31
    6192:	e000      	b.n	6196 <GPIO_PinModeSet+0xee>
    6194:	237f      	movs	r3, #127	; 0x7f
    6196:	40eb      	lsrs	r3, r5
    6198:	f013 0f01 	tst.w	r3, #1
    619c:	d010      	beq.n	61c0 <GPIO_PinModeSet+0x118>
  GPIO->P_CLR[port].DOUT = 1 << pin;
    619e:	2201      	movs	r2, #1
    61a0:	40aa      	lsls	r2, r5
    61a2:	eb04 0344 	add.w	r3, r4, r4, lsl #1
    61a6:	011b      	lsls	r3, r3, #4
    61a8:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
    61ac:	f503 3370 	add.w	r3, r3, #245760	; 0x3c000
    61b0:	f242 0110 	movw	r1, #8208	; 0x2010
    61b4:	505a      	str	r2, [r3, r1]
}
    61b6:	e7b5      	b.n	6124 <GPIO_PinModeSet+0x7c>
  EFM_ASSERT(GPIO_PORT_PIN_VALID(port, pin));
    61b8:	2303      	movs	r3, #3
    61ba:	e7ec      	b.n	6196 <GPIO_PinModeSet+0xee>
    61bc:	233f      	movs	r3, #63	; 0x3f
    61be:	e7ea      	b.n	6196 <GPIO_PinModeSet+0xee>
    61c0:	f240 31e1 	movw	r1, #993	; 0x3e1
    61c4:	4831      	ldr	r0, [pc, #196]	; (628c <GPIO_PinModeSet+0x1e4>)
    61c6:	f7ff fafb 	bl	57c0 <assertEFM>
    61ca:	e7e8      	b.n	619e <GPIO_PinModeSet+0xf6>
    GPIO->P[port].MODEH = (GPIO->P[port].MODEH & ~(0xFu << ((pin - 8) * 4)))
    61cc:	492e      	ldr	r1, [pc, #184]	; (6288 <GPIO_PinModeSet+0x1e0>)
    61ce:	eb04 0344 	add.w	r3, r4, r4, lsl #1
    61d2:	eb01 1303 	add.w	r3, r1, r3, lsl #4
    61d6:	68da      	ldr	r2, [r3, #12]
    61d8:	f1a5 0308 	sub.w	r3, r5, #8
    61dc:	009b      	lsls	r3, r3, #2
    61de:	200f      	movs	r0, #15
    61e0:	4098      	lsls	r0, r3
    61e2:	ea22 0200 	bic.w	r2, r2, r0
                          | (mode << ((pin - 8) * 4));
    61e6:	fa06 f303 	lsl.w	r3, r6, r3
    61ea:	4313      	orrs	r3, r2
    GPIO->P[port].MODEH = (GPIO->P[port].MODEH & ~(0xFu << ((pin - 8) * 4)))
    61ec:	eb04 0244 	add.w	r2, r4, r4, lsl #1
    61f0:	eb01 1102 	add.w	r1, r1, r2, lsl #4
    61f4:	60cb      	str	r3, [r1, #12]
    61f6:	e7aa      	b.n	614e <GPIO_PinModeSet+0xa6>
  EFM_ASSERT(GPIO_PORT_PIN_VALID(port, pin));
    61f8:	231f      	movs	r3, #31
    61fa:	e000      	b.n	61fe <GPIO_PinModeSet+0x156>
    61fc:	237f      	movs	r3, #127	; 0x7f
    61fe:	40eb      	lsrs	r3, r5
    6200:	f013 0f01 	tst.w	r3, #1
    6204:	d011      	beq.n	622a <GPIO_PinModeSet+0x182>
  GPIO->P_SET[port].DOUT = 1 << pin;
    6206:	2101      	movs	r1, #1
    6208:	fa01 f505 	lsl.w	r5, r1, r5
    620c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
    6210:	0124      	lsls	r4, r4, #4
    6212:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
    6216:	f504 3470 	add.w	r4, r4, #245760	; 0x3c000
    621a:	f241 0310 	movw	r3, #4112	; 0x1010
    621e:	50e5      	str	r5, [r4, r3]
      GPIO_PinOutSet(port, pin);
    } else {
      GPIO_PinOutClear(port, pin);
    }
  }
}
    6220:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  EFM_ASSERT(GPIO_PORT_PIN_VALID(port, pin));
    6222:	2303      	movs	r3, #3
    6224:	e7eb      	b.n	61fe <GPIO_PinModeSet+0x156>
    6226:	233f      	movs	r3, #63	; 0x3f
    6228:	e7e9      	b.n	61fe <GPIO_PinModeSet+0x156>
    622a:	f44f 6182 	mov.w	r1, #1040	; 0x410
    622e:	4817      	ldr	r0, [pc, #92]	; (628c <GPIO_PinModeSet+0x1e4>)
    6230:	f7ff fac6 	bl	57c0 <assertEFM>
    6234:	e7e7      	b.n	6206 <GPIO_PinModeSet+0x15e>
  EFM_ASSERT(GPIO_PORT_PIN_VALID(port, pin));
    6236:	b13c      	cbz	r4, 6248 <GPIO_PinModeSet+0x1a0>
    6238:	2c01      	cmp	r4, #1
    623a:	d018      	beq.n	626e <GPIO_PinModeSet+0x1c6>
    623c:	2c02      	cmp	r4, #2
    623e:	d018      	beq.n	6272 <GPIO_PinModeSet+0x1ca>
    6240:	2c03      	cmp	r4, #3
    6242:	d102      	bne.n	624a <GPIO_PinModeSet+0x1a2>
    6244:	271f      	movs	r7, #31
    6246:	e000      	b.n	624a <GPIO_PinModeSet+0x1a2>
    6248:	277f      	movs	r7, #127	; 0x7f
    624a:	40ef      	lsrs	r7, r5
    624c:	f017 0f01 	tst.w	r7, #1
    6250:	d011      	beq.n	6276 <GPIO_PinModeSet+0x1ce>
  GPIO->P_CLR[port].DOUT = 1 << pin;
    6252:	2101      	movs	r1, #1
    6254:	fa01 f505 	lsl.w	r5, r1, r5
    6258:	eb04 0444 	add.w	r4, r4, r4, lsl #1
    625c:	0124      	lsls	r4, r4, #4
    625e:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
    6262:	f504 3470 	add.w	r4, r4, #245760	; 0x3c000
    6266:	f242 0310 	movw	r3, #8208	; 0x2010
    626a:	50e5      	str	r5, [r4, r3]
    626c:	e7d8      	b.n	6220 <GPIO_PinModeSet+0x178>
  EFM_ASSERT(GPIO_PORT_PIN_VALID(port, pin));
    626e:	2703      	movs	r7, #3
    6270:	e7eb      	b.n	624a <GPIO_PinModeSet+0x1a2>
    6272:	273f      	movs	r7, #63	; 0x3f
    6274:	e7e9      	b.n	624a <GPIO_PinModeSet+0x1a2>
    6276:	f240 31e1 	movw	r1, #993	; 0x3e1
    627a:	4804      	ldr	r0, [pc, #16]	; (628c <GPIO_PinModeSet+0x1e4>)
    627c:	f7ff faa0 	bl	57c0 <assertEFM>
    6280:	e7e7      	b.n	6252 <GPIO_PinModeSet+0x1aa>
    6282:	bf00      	nop
    6284:	0000bccc 	.word	0x0000bccc
    6288:	4003c000 	.word	0x4003c000
    628c:	0000bd18 	.word	0x0000bd18

00006290 <SYSTEM_ChipRevisionGet>:
#if defined(_SYSCFG_CHIPREV_FAMILY_MASK)
  /* On series-2 (and higher) the revision info is in the SYSCFG->CHIPREV register. */
#if defined(CMU_CLKEN0_SYSCFG)
  CMU->CLKEN0_SET = CMU_CLKEN0_SYSCFG;
#endif
  uint32_t chiprev = SYSCFG->CHIPREV;
    6290:	4b05      	ldr	r3, [pc, #20]	; (62a8 <SYSTEM_ChipRevisionGet+0x18>)
    6292:	695b      	ldr	r3, [r3, #20]
  rev->family = (chiprev & _SYSCFG_CHIPREV_FAMILY_MASK) >> _SYSCFG_CHIPREV_FAMILY_SHIFT;
    6294:	f3c3 1285 	ubfx	r2, r3, #6, #6
    6298:	7082      	strb	r2, [r0, #2]
  rev->major  = (chiprev & _SYSCFG_CHIPREV_MAJOR_MASK)  >> _SYSCFG_CHIPREV_MAJOR_SHIFT;
    629a:	f003 023f 	and.w	r2, r3, #63	; 0x3f
    629e:	7042      	strb	r2, [r0, #1]
  rev->minor  = (chiprev & _SYSCFG_CHIPREV_MINOR_MASK)  >> _SYSCFG_CHIPREV_MINOR_SHIFT;
    62a0:	0b1b      	lsrs	r3, r3, #12
    62a2:	7003      	strb	r3, [r0, #0]
  /* CHIP MINOR bit [3:0] */
  tmp |= (uint8_t)((ROMTABLE->PID3 & _ROMTABLE_PID3_REVMINORLSB_MASK)
                   >> _ROMTABLE_PID3_REVMINORLSB_SHIFT);
  rev->minor = tmp;
#endif
}
    62a4:	4770      	bx	lr
    62a6:	bf00      	nop
    62a8:	4007c000 	.word	0x4007c000

000062ac <prsRxInput>:
{
#if defined(_USART_INPUT_MASK)
  usart->INPUT = ((uint32_t)ch << _USART_INPUT_RXPRSSEL_SHIFT)
                 | USART_INPUT_RXPRS;
#elif defined(USART_CTRLX_RXPRSEN)
  if (usart == USART0) {
    62ac:	4b0e      	ldr	r3, [pc, #56]	; (62e8 <prsRxInput+0x3c>)
    62ae:	4298      	cmp	r0, r3
    62b0:	d00a      	beq.n	62c8 <prsRxInput+0x1c>
    PRS->CONSUMER_USART0_RX = ch;
  }
#if defined(USART1)
  else if (usart == USART1) {
    62b2:	4b0e      	ldr	r3, [pc, #56]	; (62ec <prsRxInput+0x40>)
    62b4:	4298      	cmp	r0, r3
    62b6:	d00c      	beq.n	62d2 <prsRxInput+0x26>
    PRS->CONSUMER_USART1_RX = ch;
  }
#endif
#if defined(USART2)
  else if (usart == USART2) {
    62b8:	4b0d      	ldr	r3, [pc, #52]	; (62f0 <prsRxInput+0x44>)
    62ba:	4298      	cmp	r0, r3
    62bc:	d00e      	beq.n	62dc <prsRxInput+0x30>
    PRS->CONSUMER_USART2_RX = ch;
  }
#endif
  usart->CTRLX |= USART_CTRLX_RXPRSEN;
    62be:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
    62c0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    62c4:	65c3      	str	r3, [r0, #92]	; 0x5c
#endif
}
    62c6:	4770      	bx	lr
    PRS->CONSUMER_USART0_RX = ch;
    62c8:	f5a3 3300 	sub.w	r3, r3, #131072	; 0x20000
    62cc:	f8c3 1184 	str.w	r1, [r3, #388]	; 0x184
    62d0:	e7f5      	b.n	62be <prsRxInput+0x12>
    PRS->CONSUMER_USART1_RX = ch;
    62d2:	f5a3 3310 	sub.w	r3, r3, #147456	; 0x24000
    62d6:	f8c3 1194 	str.w	r1, [r3, #404]	; 0x194
    62da:	e7f0      	b.n	62be <prsRxInput+0x12>
    PRS->CONSUMER_USART2_RX = ch;
    62dc:	f5a3 3320 	sub.w	r3, r3, #163840	; 0x28000
    62e0:	f8c3 11a4 	str.w	r1, [r3, #420]	; 0x1a4
    62e4:	e7eb      	b.n	62be <prsRxInput+0x12>
    62e6:	bf00      	nop
    62e8:	40058000 	.word	0x40058000
    62ec:	4005c000 	.word	0x4005c000
    62f0:	40060000 	.word	0x40060000

000062f4 <USART_BaudrateAsyncSet>:
 ******************************************************************************/
void USART_BaudrateAsyncSet(USART_TypeDef *usart,
                            uint32_t refFreq,
                            uint32_t baudrate,
                            USART_OVS_TypeDef ovs)
{
    62f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    62f6:	4605      	mov	r5, r0
    62f8:	460e      	mov	r6, r1
    62fa:	461c      	mov	r4, r3
  uint32_t clkdiv;
  uint32_t oversample;

  /* Inhibit divide by 0 */
  EFM_ASSERT(baudrate);
    62fc:	4617      	mov	r7, r2
    62fe:	b15a      	cbz	r2, 6318 <USART_BaudrateAsyncSet+0x24>
   * and calculate 1/64 of CLKDIV first. This allows for fHFPERCLK
   * up to 1 GHz without overflowing a 32 bit value.
   */

  /* HFPERCLK/HFPERBCLK used to clock all USART/UART peripheral modules. */
  if (!refFreq) {
    6300:	b186      	cbz	r6, 6324 <USART_BaudrateAsyncSet+0x30>
#endif
#endif
  }

  /* Map oversampling. */
  switch (ovs) {
    6302:	2c40      	cmp	r4, #64	; 0x40
    6304:	d044      	beq.n	6390 <USART_BaudrateAsyncSet+0x9c>
    6306:	d812      	bhi.n	632e <USART_BaudrateAsyncSet+0x3a>
    6308:	b1c4      	cbz	r4, 633c <USART_BaudrateAsyncSet+0x48>
    630a:	2c20      	cmp	r4, #32
    630c:	d156      	bne.n	63bc <USART_BaudrateAsyncSet+0xc8>
      EFM_ASSERT(baudrate <= (refFreq / 16));
      oversample = 16;
      break;

    case usartOVS8:
      EFM_ASSERT(baudrate <= (refFreq / 8));
    630e:	ebb7 0fd6 	cmp.w	r7, r6, lsr #3
    6312:	d836      	bhi.n	6382 <USART_BaudrateAsyncSet+0x8e>
      oversample = 8;
    6314:	2308      	movs	r3, #8
    6316:	e015      	b.n	6344 <USART_BaudrateAsyncSet+0x50>
  EFM_ASSERT(baudrate);
    6318:	f44f 71a1 	mov.w	r1, #322	; 0x142
    631c:	482d      	ldr	r0, [pc, #180]	; (63d4 <USART_BaudrateAsyncSet+0xe0>)
    631e:	f7ff fa4f 	bl	57c0 <assertEFM>
    6322:	e7ed      	b.n	6300 <USART_BaudrateAsyncSet+0xc>
    refFreq = CMU_ClockFreqGet(cmuClock_PCLK);
    6324:	2003      	movs	r0, #3
    6326:	f7ff fcc3 	bl	5cb0 <CMU_ClockFreqGet>
    632a:	4606      	mov	r6, r0
    632c:	e7e9      	b.n	6302 <USART_BaudrateAsyncSet+0xe>
  switch (ovs) {
    632e:	2c60      	cmp	r4, #96	; 0x60
    6330:	d144      	bne.n	63bc <USART_BaudrateAsyncSet+0xc8>
      EFM_ASSERT(baudrate <= (refFreq / 6));
      oversample = 6;
      break;

    case usartOVS4:
      EFM_ASSERT(baudrate <= (refFreq / 4));
    6332:	ebb7 0f96 	cmp.w	r7, r6, lsr #2
    6336:	d83a      	bhi.n	63ae <USART_BaudrateAsyncSet+0xba>
      oversample = 4;
    6338:	2304      	movs	r3, #4
    633a:	e003      	b.n	6344 <USART_BaudrateAsyncSet+0x50>
      EFM_ASSERT(baudrate <= (refFreq / 16));
    633c:	ebb7 1f16 	cmp.w	r7, r6, lsr #4
    6340:	d818      	bhi.n	6374 <USART_BaudrateAsyncSet+0x80>
      oversample = 16;
    6342:	2310      	movs	r3, #16
  clkdiv /= oversample * baudrate;
  clkdiv -= 4;
  clkdiv *= 64;
#else
  /* Devices with 5 fractional bits. CLKDIV[7:3] */
  clkdiv  = 32 * refFreq + (oversample * baudrate) / 2;
    6344:	fb07 f103 	mul.w	r1, r7, r3
    6348:	084b      	lsrs	r3, r1, #1
    634a:	eb03 1346 	add.w	r3, r3, r6, lsl #5
  clkdiv /= oversample * baudrate;
    634e:	fbb3 f3f1 	udiv	r3, r3, r1
  clkdiv -= 32;
    6352:	3b20      	subs	r3, #32
  clkdiv *= 8;
    6354:	00de      	lsls	r6, r3, #3
#endif

  /* Verify that the resulting clock divider is within limits. */
  EFM_ASSERT(clkdiv <= CLKDIV_MASK);
    6356:	4a20      	ldr	r2, [pc, #128]	; (63d8 <USART_BaudrateAsyncSet+0xe4>)
    6358:	ebb2 0fc3 	cmp.w	r2, r3, lsl #3
    635c:	d334      	bcc.n	63c8 <USART_BaudrateAsyncSet+0xd4>

  /* Make sure that reserved bits are not written to. */
  clkdiv &= CLKDIV_MASK;
    635e:	4a1e      	ldr	r2, [pc, #120]	; (63d8 <USART_BaudrateAsyncSet+0xe4>)
    6360:	4032      	ands	r2, r6

  usart->CTRL  &= ~_USART_CTRL_OVS_MASK;
    6362:	68ab      	ldr	r3, [r5, #8]
    6364:	f023 0360 	bic.w	r3, r3, #96	; 0x60
    6368:	60ab      	str	r3, [r5, #8]
  usart->CTRL  |= ovs;
    636a:	68ab      	ldr	r3, [r5, #8]
    636c:	431c      	orrs	r4, r3
    636e:	60ac      	str	r4, [r5, #8]
  usart->CLKDIV = clkdiv;
    6370:	61ea      	str	r2, [r5, #28]
}
    6372:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      EFM_ASSERT(baudrate <= (refFreq / 16));
    6374:	f44f 71ba 	mov.w	r1, #372	; 0x174
    6378:	4816      	ldr	r0, [pc, #88]	; (63d4 <USART_BaudrateAsyncSet+0xe0>)
    637a:	f7ff fa21 	bl	57c0 <assertEFM>
      oversample = 16;
    637e:	2310      	movs	r3, #16
    6380:	e7e0      	b.n	6344 <USART_BaudrateAsyncSet+0x50>
      EFM_ASSERT(baudrate <= (refFreq / 8));
    6382:	f240 1179 	movw	r1, #377	; 0x179
    6386:	4813      	ldr	r0, [pc, #76]	; (63d4 <USART_BaudrateAsyncSet+0xe0>)
    6388:	f7ff fa1a 	bl	57c0 <assertEFM>
      oversample = 8;
    638c:	2308      	movs	r3, #8
    638e:	e7d9      	b.n	6344 <USART_BaudrateAsyncSet+0x50>
      EFM_ASSERT(baudrate <= (refFreq / 6));
    6390:	4b12      	ldr	r3, [pc, #72]	; (63dc <USART_BaudrateAsyncSet+0xe8>)
    6392:	fba3 2306 	umull	r2, r3, r3, r6
    6396:	ebb7 0f93 	cmp.w	r7, r3, lsr #2
    639a:	d801      	bhi.n	63a0 <USART_BaudrateAsyncSet+0xac>
      oversample = 6;
    639c:	2306      	movs	r3, #6
    639e:	e7d1      	b.n	6344 <USART_BaudrateAsyncSet+0x50>
      EFM_ASSERT(baudrate <= (refFreq / 6));
    63a0:	f44f 71bf 	mov.w	r1, #382	; 0x17e
    63a4:	480b      	ldr	r0, [pc, #44]	; (63d4 <USART_BaudrateAsyncSet+0xe0>)
    63a6:	f7ff fa0b 	bl	57c0 <assertEFM>
      oversample = 6;
    63aa:	2306      	movs	r3, #6
    63ac:	e7ca      	b.n	6344 <USART_BaudrateAsyncSet+0x50>
      EFM_ASSERT(baudrate <= (refFreq / 4));
    63ae:	f240 1183 	movw	r1, #387	; 0x183
    63b2:	4808      	ldr	r0, [pc, #32]	; (63d4 <USART_BaudrateAsyncSet+0xe0>)
    63b4:	f7ff fa04 	bl	57c0 <assertEFM>
      oversample = 4;
    63b8:	2304      	movs	r3, #4
    63ba:	e7c3      	b.n	6344 <USART_BaudrateAsyncSet+0x50>
      EFM_ASSERT(0);
    63bc:	f240 1189 	movw	r1, #393	; 0x189
    63c0:	4804      	ldr	r0, [pc, #16]	; (63d4 <USART_BaudrateAsyncSet+0xe0>)
    63c2:	f7ff f9fd 	bl	57c0 <assertEFM>
      return;
    63c6:	e7d4      	b.n	6372 <USART_BaudrateAsyncSet+0x7e>
  EFM_ASSERT(clkdiv <= CLKDIV_MASK);
    63c8:	f240 119f 	movw	r1, #415	; 0x19f
    63cc:	4801      	ldr	r0, [pc, #4]	; (63d4 <USART_BaudrateAsyncSet+0xe0>)
    63ce:	f7ff f9f7 	bl	57c0 <assertEFM>
    63d2:	e7c4      	b.n	635e <USART_BaudrateAsyncSet+0x6a>
    63d4:	0000bd64 	.word	0x0000bd64
    63d8:	007ffff8 	.word	0x007ffff8
    63dc:	aaaaaaab 	.word	0xaaaaaaab

000063e0 <USART_Reset>:
 *
 * @param[in] usart
 *   A pointer to USART/UART peripheral register block.
 ******************************************************************************/
void USART_Reset(USART_TypeDef *usart)
{
    63e0:	b510      	push	{r4, lr}
    63e2:	4604      	mov	r4, r0
  /* Make sure the module exists on the selected chip. */
  EFM_ASSERT(USART_REF_VALID(usart)
    63e4:	4b21      	ldr	r3, [pc, #132]	; (646c <USART_Reset+0x8c>)
    63e6:	4298      	cmp	r0, r3
    63e8:	d00c      	beq.n	6404 <USART_Reset+0x24>
    63ea:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
    63ee:	4298      	cmp	r0, r3
    63f0:	d008      	beq.n	6404 <USART_Reset+0x24>
    63f2:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
    63f6:	4298      	cmp	r0, r3
    63f8:	d004      	beq.n	6404 <USART_Reset+0x24>
    63fa:	f240 4129 	movw	r1, #1065	; 0x429
    63fe:	481c      	ldr	r0, [pc, #112]	; (6470 <USART_Reset+0x90>)
    6400:	f7ff f9de 	bl	57c0 <assertEFM>
             || USARTRF_REF_VALID(usart)
             || UART_REF_VALID(usart) );

#if defined(USART_EN_EN)
  usart->EN_SET = USART_EN_EN;
    6404:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
    6408:	2201      	movs	r2, #1
    640a:	605a      	str	r2, [r3, #4]
  /* Make sure disabled first, before resetting other registers. */
  usart->CMD = USART_CMD_RXDIS | USART_CMD_TXDIS | USART_CMD_MASTERDIS
    640c:	f640 63aa 	movw	r3, #3754	; 0xeaa
    6410:	6163      	str	r3, [r4, #20]
               | USART_CMD_RXBLOCKDIS | USART_CMD_TXTRIDIS | USART_CMD_CLEARTX
               | USART_CMD_CLEARRX;

  usart->CTRL      = _USART_CTRL_RESETVALUE;
    6412:	2300      	movs	r3, #0
    6414:	60a3      	str	r3, [r4, #8]
  usart->CTRLX     = _USART_CTRLX_RESETVALUE;
    6416:	65e3      	str	r3, [r4, #92]	; 0x5c
  usart->FRAME     = _USART_FRAME_RESETVALUE;
    6418:	f241 0205 	movw	r2, #4101	; 0x1005
    641c:	60e2      	str	r2, [r4, #12]
  usart->TRIGCTRL  = _USART_TRIGCTRL_RESETVALUE;
    641e:	6123      	str	r3, [r4, #16]
  usart->CLKDIV    = _USART_CLKDIV_RESETVALUE;
    6420:	61e3      	str	r3, [r4, #28]
  usart->IEN       = _USART_IEN_RESETVALUE;
    6422:	64e3      	str	r3, [r4, #76]	; 0x4c
  usart->IF_CLR    = _USART_IF_MASK;
    6424:	f504 5200 	add.w	r2, r4, #8192	; 0x2000
    6428:	4912      	ldr	r1, [pc, #72]	; (6474 <USART_Reset+0x94>)
    642a:	6491      	str	r1, [r2, #72]	; 0x48
  usart->TIMING    = _USART_TIMING_RESETVALUE;
    642c:	65a3      	str	r3, [r4, #88]	; 0x58

  if (USART_IRDA_VALID(usart)) {
    642e:	4b0f      	ldr	r3, [pc, #60]	; (646c <USART_Reset+0x8c>)
    6430:	429c      	cmp	r4, r3
    6432:	d007      	beq.n	6444 <USART_Reset+0x64>
    6434:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
    6438:	429c      	cmp	r4, r3
    643a:	d003      	beq.n	6444 <USART_Reset+0x64>
    643c:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
    6440:	429c      	cmp	r4, r3
    6442:	d101      	bne.n	6448 <USART_Reset+0x68>
    usart->IRCTRL = _USART_IRCTRL_RESETVALUE;
    6444:	2300      	movs	r3, #0
    6446:	6523      	str	r3, [r4, #80]	; 0x50
  }

  if (USART_I2S_VALID(usart)) {
    6448:	4b08      	ldr	r3, [pc, #32]	; (646c <USART_Reset+0x8c>)
    644a:	429c      	cmp	r4, r3
    644c:	d007      	beq.n	645e <USART_Reset+0x7e>
    644e:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
    6452:	429c      	cmp	r4, r3
    6454:	d003      	beq.n	645e <USART_Reset+0x7e>
    6456:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
    645a:	429c      	cmp	r4, r3
    645c:	d101      	bne.n	6462 <USART_Reset+0x82>
    usart->I2SCTRL = _USART_I2SCTRL_RESETVALUE;
    645e:	2300      	movs	r3, #0
    6460:	6563      	str	r3, [r4, #84]	; 0x54
  }
  usart->EN_CLR = USART_EN_EN;
    6462:	f504 5400 	add.w	r4, r4, #8192	; 0x2000
    6466:	2301      	movs	r3, #1
    6468:	6063      	str	r3, [r4, #4]
  if (USART_I2S_VALID(usart)) {
    usart->I2SCTRL = _USART_I2SCTRL_RESETVALUE;
  }
#endif
#endif
}
    646a:	bd10      	pop	{r4, pc}
    646c:	40058000 	.word	0x40058000
    6470:	0000bd64 	.word	0x0000bd64
    6474:	0001ffff 	.word	0x0001ffff

00006478 <USART_InitAsync>:
{
    6478:	b538      	push	{r3, r4, r5, lr}
    647a:	4605      	mov	r5, r0
    647c:	460c      	mov	r4, r1
  EFM_ASSERT(USART_REF_VALID(usart)
    647e:	4b48      	ldr	r3, [pc, #288]	; (65a0 <USART_InitAsync+0x128>)
    6480:	4298      	cmp	r0, r3
    6482:	d00c      	beq.n	649e <USART_InitAsync+0x26>
    6484:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
    6488:	4298      	cmp	r0, r3
    648a:	d008      	beq.n	649e <USART_InitAsync+0x26>
    648c:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
    6490:	4298      	cmp	r0, r3
    6492:	d004      	beq.n	649e <USART_InitAsync+0x26>
    6494:	f240 21ed 	movw	r1, #749	; 0x2ed
    6498:	4842      	ldr	r0, [pc, #264]	; (65a4 <USART_InitAsync+0x12c>)
    649a:	f7ff f991 	bl	57c0 <assertEFM>
  USART_Reset(usart);
    649e:	4628      	mov	r0, r5
    64a0:	f7ff ff9e 	bl	63e0 <USART_Reset>
  usart->EN_SET = USART_EN_EN;
    64a4:	f505 5380 	add.w	r3, r5, #4096	; 0x1000
    64a8:	2201      	movs	r2, #1
    64aa:	605a      	str	r2, [r3, #4]
  if (init->mvdis) {
    64ac:	7ca3      	ldrb	r3, [r4, #18]
    64ae:	b11b      	cbz	r3, 64b8 <USART_InitAsync+0x40>
    usart->CTRL |= USART_CTRL_MVDIS;
    64b0:	68ab      	ldr	r3, [r5, #8]
    64b2:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
    64b6:	60ab      	str	r3, [r5, #8]
  if (init->prsRxEnable) {
    64b8:	7ce3      	ldrb	r3, [r4, #19]
    64ba:	2b00      	cmp	r3, #0
    64bc:	d140      	bne.n	6540 <USART_InitAsync+0xc8>
  usart->FRAME = (uint32_t)init->databits
    64be:	7b63      	ldrb	r3, [r4, #13]
                 | (uint32_t)init->stopbits
    64c0:	8a22      	ldrh	r2, [r4, #16]
    64c2:	4313      	orrs	r3, r2
                 | (uint32_t)init->parity;
    64c4:	89e2      	ldrh	r2, [r4, #14]
    64c6:	4313      	orrs	r3, r2
  usart->FRAME = (uint32_t)init->databits
    64c8:	60eb      	str	r3, [r5, #12]
  USART_BaudrateAsyncSet(usart, init->refFreq, init->baudrate, init->oversampling);
    64ca:	7b23      	ldrb	r3, [r4, #12]
    64cc:	68a2      	ldr	r2, [r4, #8]
    64ce:	6861      	ldr	r1, [r4, #4]
    64d0:	4628      	mov	r0, r5
    64d2:	f7ff ff0f 	bl	62f4 <USART_BaudrateAsyncSet>
  if (init->autoCsEnable) {
    64d6:	7d63      	ldrb	r3, [r4, #21]
    64d8:	b11b      	cbz	r3, 64e2 <USART_InitAsync+0x6a>
    usart->CTRL |= USART_CTRL_AUTOCS;
    64da:	68ab      	ldr	r3, [r5, #8]
    64dc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
    64e0:	60ab      	str	r3, [r5, #8]
  usart->TIMING = ((init->autoCsHold << _USART_TIMING_CSHOLD_SHIFT)
    64e2:	7da3      	ldrb	r3, [r4, #22]
    64e4:	071b      	lsls	r3, r3, #28
                   & _USART_TIMING_CSHOLD_MASK)
    64e6:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
                  | ((init->autoCsSetup << _USART_TIMING_CSSETUP_SHIFT)
    64ea:	7de2      	ldrb	r2, [r4, #23]
    64ec:	0512      	lsls	r2, r2, #20
                     & _USART_TIMING_CSSETUP_MASK);
    64ee:	f402 02e0 	and.w	r2, r2, #7340032	; 0x700000
                  | ((init->autoCsSetup << _USART_TIMING_CSSETUP_SHIFT)
    64f2:	4313      	orrs	r3, r2
  usart->TIMING = ((init->autoCsHold << _USART_TIMING_CSHOLD_SHIFT)
    64f4:	65ab      	str	r3, [r5, #88]	; 0x58
  if ((init->hwFlowControl == usartHwFlowControlRts)
    64f6:	7e23      	ldrb	r3, [r4, #24]
      || (init->hwFlowControl == usartHwFlowControlCtsAndRts)) {
    64f8:	3b02      	subs	r3, #2
    64fa:	b2db      	uxtb	r3, r3
  if ((init->hwFlowControl == usartHwFlowControlRts)
    64fc:	2b01      	cmp	r3, #1
    64fe:	d924      	bls.n	654a <USART_InitAsync+0xd2>
    GPIO->USARTROUTE_CLR[USART_NUM(usart)].ROUTEEN = GPIO_USART_ROUTEEN_RTSPEN;
    6500:	4b27      	ldr	r3, [pc, #156]	; (65a0 <USART_InitAsync+0x128>)
    6502:	429d      	cmp	r5, r3
    6504:	d040      	beq.n	6588 <USART_InitAsync+0x110>
    6506:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
    650a:	429d      	cmp	r5, r3
    650c:	d03e      	beq.n	658c <USART_InitAsync+0x114>
    650e:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
    6512:	429d      	cmp	r5, r3
    6514:	d036      	beq.n	6584 <USART_InitAsync+0x10c>
    6516:	f04f 33ff 	mov.w	r3, #4294967295
    651a:	015b      	lsls	r3, r3, #5
    651c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
    6520:	f503 3370 	add.w	r3, r3, #245760	; 0x3c000
    6524:	f242 52ac 	movw	r2, #9644	; 0x25ac
    6528:	2102      	movs	r1, #2
    652a:	5099      	str	r1, [r3, r2]
  if ((init->hwFlowControl == usartHwFlowControlCts)
    652c:	7e23      	ldrb	r3, [r4, #24]
    652e:	2b01      	cmp	r3, #1
    6530:	d02e      	beq.n	6590 <USART_InitAsync+0x118>
      || (init->hwFlowControl == usartHwFlowControlCtsAndRts)) {
    6532:	2b03      	cmp	r3, #3
    6534:	d02c      	beq.n	6590 <USART_InitAsync+0x118>
    usart->CTRLX_CLR = USART_CTRLX_CTSEN;
    6536:	f505 5300 	add.w	r3, r5, #8192	; 0x2000
    653a:	2204      	movs	r2, #4
    653c:	65da      	str	r2, [r3, #92]	; 0x5c
    653e:	e02b      	b.n	6598 <USART_InitAsync+0x120>
    prsRxInput(usart, init->prsRxCh);
    6540:	7d21      	ldrb	r1, [r4, #20]
    6542:	4628      	mov	r0, r5
    6544:	f7ff feb2 	bl	62ac <prsRxInput>
    6548:	e7b9      	b.n	64be <USART_InitAsync+0x46>
    GPIO->USARTROUTE_SET[USART_NUM(usart)].ROUTEEN = GPIO_USART_ROUTEEN_RTSPEN;
    654a:	4b15      	ldr	r3, [pc, #84]	; (65a0 <USART_InitAsync+0x128>)
    654c:	429d      	cmp	r5, r3
    654e:	d015      	beq.n	657c <USART_InitAsync+0x104>
    6550:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
    6554:	429d      	cmp	r5, r3
    6556:	d013      	beq.n	6580 <USART_InitAsync+0x108>
    6558:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
    655c:	429d      	cmp	r5, r3
    655e:	d00b      	beq.n	6578 <USART_InitAsync+0x100>
    6560:	f04f 33ff 	mov.w	r3, #4294967295
    6564:	015b      	lsls	r3, r3, #5
    6566:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
    656a:	f503 3370 	add.w	r3, r3, #245760	; 0x3c000
    656e:	f241 52ac 	movw	r2, #5548	; 0x15ac
    6572:	2102      	movs	r1, #2
    6574:	5099      	str	r1, [r3, r2]
    6576:	e7d9      	b.n	652c <USART_InitAsync+0xb4>
    6578:	2302      	movs	r3, #2
    657a:	e7f3      	b.n	6564 <USART_InitAsync+0xec>
    657c:	2300      	movs	r3, #0
    657e:	e7f1      	b.n	6564 <USART_InitAsync+0xec>
    6580:	2301      	movs	r3, #1
    6582:	e7ef      	b.n	6564 <USART_InitAsync+0xec>
    GPIO->USARTROUTE_CLR[USART_NUM(usart)].ROUTEEN = GPIO_USART_ROUTEEN_RTSPEN;
    6584:	2302      	movs	r3, #2
    6586:	e7c8      	b.n	651a <USART_InitAsync+0xa2>
    6588:	2300      	movs	r3, #0
    658a:	e7c6      	b.n	651a <USART_InitAsync+0xa2>
    658c:	2301      	movs	r3, #1
    658e:	e7c4      	b.n	651a <USART_InitAsync+0xa2>
    usart->CTRLX_SET = USART_CTRLX_CTSEN;
    6590:	f505 5380 	add.w	r3, r5, #4096	; 0x1000
    6594:	2204      	movs	r2, #4
    6596:	65da      	str	r2, [r3, #92]	; 0x5c
  usart->CMD = (uint32_t)init->enable;
    6598:	7823      	ldrb	r3, [r4, #0]
    659a:	616b      	str	r3, [r5, #20]
}
    659c:	bd38      	pop	{r3, r4, r5, pc}
    659e:	bf00      	nop
    65a0:	40058000 	.word	0x40058000
    65a4:	0000bd64 	.word	0x0000bd64

000065a8 <Default_Handler>:
/*----------------------------------------------------------------------------
 * Default Handler for Exceptions / Interrupts
 *----------------------------------------------------------------------------*/
void Default_Handler(void)
{
  while (true) {
    65a8:	e7fe      	b.n	65a8 <Default_Handler>
	...

000065ac <Reset_Handler>:
{
    65ac:	b508      	push	{r3, lr}
  SystemInit();
    65ae:	f000 f81f 	bl	65f0 <SystemInit>
  pDest = &__data_start__;
    65b2:	4b0a      	ldr	r3, [pc, #40]	; (65dc <Reset_Handler+0x30>)
  pSrc  = &__etext;
    65b4:	4a0a      	ldr	r2, [pc, #40]	; (65e0 <Reset_Handler+0x34>)
  for (; pDest < &__data_end__; ) {
    65b6:	e003      	b.n	65c0 <Reset_Handler+0x14>
    *pDest++ = *pSrc++;
    65b8:	f852 1b04 	ldr.w	r1, [r2], #4
    65bc:	f843 1b04 	str.w	r1, [r3], #4
  for (; pDest < &__data_end__; ) {
    65c0:	4908      	ldr	r1, [pc, #32]	; (65e4 <Reset_Handler+0x38>)
    65c2:	428b      	cmp	r3, r1
    65c4:	d3f8      	bcc.n	65b8 <Reset_Handler+0xc>
  pDest = &__bss_start__;
    65c6:	4b08      	ldr	r3, [pc, #32]	; (65e8 <Reset_Handler+0x3c>)
    65c8:	e002      	b.n	65d0 <Reset_Handler+0x24>
    *pDest++ = 0UL;
    65ca:	2200      	movs	r2, #0
    65cc:	f843 2b04 	str.w	r2, [r3], #4
  for (; pDest < &__bss_end__; ) {
    65d0:	4a06      	ldr	r2, [pc, #24]	; (65ec <Reset_Handler+0x40>)
    65d2:	4293      	cmp	r3, r2
    65d4:	d3f9      	bcc.n	65ca <Reset_Handler+0x1e>
  __START();
    65d6:	f7fd fdad 	bl	4134 <main>
    65da:	bf00      	nop
    65dc:	20000000 	.word	0x20000000
    65e0:	0000dd64 	.word	0x0000dd64
    65e4:	20000274 	.word	0x20000274
    65e8:	20000278 	.word	0x20000278
    65ec:	20000e5c 	.word	0x20000e5c

000065f0 <SystemInit>:
 *   initialization of variables etc.
 *****************************************************************************/
void SystemInit(void)
{
#if defined(__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
  SCB->VTOR = (uint32_t) &__Vectors;
    65f0:	4b04      	ldr	r3, [pc, #16]	; (6604 <SystemInit+0x14>)
    65f2:	4a05      	ldr	r2, [pc, #20]	; (6608 <SystemInit+0x18>)
    65f4:	609a      	str	r2, [r3, #8]
#if defined(UNALIGNED_SUPPORT_DISABLE)
  SCB->CCR |= SCB_CCR_UNALIGN_TRP_Msk;
#endif

#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3U << 10U * 2U)           /* set CP10 Full Access */
    65f6:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
    65fa:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
    65fe:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
                 | (3U << 11U * 2U));       /* set CP11 Full Access */
#endif
}
    6602:	4770      	bx	lr
    6604:	e000ed00 	.word	0xe000ed00
    6608:	00004000 	.word	0x00004000

0000660c <SystemHFRCODPLLClockGet>:
    default:
      break;
  }
  return ret;
#endif
}
    660c:	4b01      	ldr	r3, [pc, #4]	; (6614 <SystemHFRCODPLLClockGet+0x8>)
    660e:	6818      	ldr	r0, [r3, #0]
    6610:	4770      	bx	lr
    6612:	bf00      	nop
    6614:	20000004 	.word	0x20000004

00006618 <SystemHFRCODPLLClockSet>:
 *   HFRCODPLL frequency in Hz.
 *****************************************************************************/
void SystemHFRCODPLLClockSet(uint32_t freq)
{
#if !defined(SYSTEM_NO_STATIC_MEMORY)
  SystemHFRCODPLLClock = freq;
    6618:	4b01      	ldr	r3, [pc, #4]	; (6620 <SystemHFRCODPLLClockSet+0x8>)
    661a:	6018      	str	r0, [r3, #0]
#else
  (void) freq; /* Unused parameter */
#endif
}
    661c:	4770      	bx	lr
    661e:	bf00      	nop
    6620:	20000004 	.word	0x20000004

00006624 <SystemSYSCLKGet>:
 *
 * @return
 *   Current system clock (SYSCLK) frequency in Hz.
 ******************************************************************************/
uint32_t SystemSYSCLKGet(void)
{
    6624:	b508      	push	{r3, lr}
  uint32_t ret = 0U;

  /* Find clock source */
  switch (CMU->SYSCLKCTRL & _CMU_SYSCLKCTRL_CLKSEL_MASK) {
    6626:	4b09      	ldr	r3, [pc, #36]	; (664c <SystemSYSCLKGet+0x28>)
    6628:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    662a:	f003 0307 	and.w	r3, r3, #7
    662e:	2b02      	cmp	r3, #2
    6630:	d004      	beq.n	663c <SystemSYSCLKGet+0x18>
    6632:	2b03      	cmp	r3, #3
    6634:	d005      	beq.n	6642 <SystemSYSCLKGet+0x1e>
    6636:	2b01      	cmp	r3, #1
    6638:	d006      	beq.n	6648 <SystemSYSCLKGet+0x24>
      ret = FSRCO_FREQ;
      break;

    default:
      /* Unknown clock source. */
      while (1) {
    663a:	e7fe      	b.n	663a <SystemSYSCLKGet+0x16>
      ret = SystemHFRCODPLLClockGet();
    663c:	f7ff ffe6 	bl	660c <SystemHFRCODPLLClockGet>
      break;
    6640:	e003      	b.n	664a <SystemSYSCLKGet+0x26>
      ret = SystemHFXOClock;
    6642:	4b03      	ldr	r3, [pc, #12]	; (6650 <SystemSYSCLKGet+0x2c>)
    6644:	6818      	ldr	r0, [r3, #0]
      break;
    6646:	e000      	b.n	664a <SystemSYSCLKGet+0x26>
  switch (CMU->SYSCLKCTRL & _CMU_SYSCLKCTRL_CLKSEL_MASK) {
    6648:	4802      	ldr	r0, [pc, #8]	; (6654 <SystemSYSCLKGet+0x30>)
      }
  }
  return ret;
}
    664a:	bd08      	pop	{r3, pc}
    664c:	40008000 	.word	0x40008000
    6650:	20000008 	.word	0x20000008
    6654:	01312d00 	.word	0x01312d00

00006658 <SystemHCLKGet>:
 *
 * @return
 *   The current core clock (HCLK) frequency in Hz.
 ******************************************************************************/
uint32_t SystemHCLKGet(void)
{
    6658:	b508      	push	{r3, lr}
  uint32_t presc, ret;

  ret = SystemSYSCLKGet();
    665a:	f7ff ffe3 	bl	6624 <SystemSYSCLKGet>

  presc = (CMU->SYSCLKCTRL & _CMU_SYSCLKCTRL_HCLKPRESC_MASK)
    665e:	4b05      	ldr	r3, [pc, #20]	; (6674 <SystemHCLKGet+0x1c>)
    6660:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    6662:	f3c3 3301 	ubfx	r3, r3, #12, #2
          >> _CMU_SYSCLKCTRL_HCLKPRESC_SHIFT;

  ret /= presc + 1U;
    6666:	3301      	adds	r3, #1
    6668:	fbb0 f0f3 	udiv	r0, r0, r3

#if !defined(SYSTEM_NO_STATIC_MEMORY)
  /* Keep CMSIS system clock variable up-to-date */
  SystemCoreClock = ret;
    666c:	4b02      	ldr	r3, [pc, #8]	; (6678 <SystemHCLKGet+0x20>)
    666e:	6018      	str	r0, [r3, #0]
#endif

  return ret;
}
    6670:	bd08      	pop	{r3, pc}
    6672:	bf00      	nop
    6674:	40008000 	.word	0x40008000
    6678:	20000000 	.word	0x20000000

0000667c <SystemMaxCoreClockGet>:
 ******************************************************************************/
uint32_t SystemMaxCoreClockGet(void)
{
  return(HFRCODPLL_MAX_FREQ > HFXO_FREQ \
         ? HFRCODPLL_MAX_FREQ : HFXO_FREQ);
}
    667c:	4800      	ldr	r0, [pc, #0]	; (6680 <SystemMaxCoreClockGet+0x4>)
    667e:	4770      	bx	lr
    6680:	04c4b400 	.word	0x04c4b400

00006684 <SystemHFXOClockGet>:
  return SystemHFXOClock;
#endif
#else
  return 0U;
#endif
}
    6684:	4b01      	ldr	r3, [pc, #4]	; (668c <SystemHFXOClockGet+0x8>)
    6686:	6818      	ldr	r0, [r3, #0]
    6688:	4770      	bx	lr
    668a:	bf00      	nop
    668c:	20000008 	.word	0x20000008

00006690 <SystemCLKIN0Get>:
 *   CLKIN0 frequency in Hz.
 *****************************************************************************/
uint32_t SystemCLKIN0Get(void)
{
  return CLKIN0_FREQ;
}
    6690:	2000      	movs	r0, #0
    6692:	4770      	bx	lr

00006694 <SystemFSRCOClockGet>:
 *   FSRCO frequency in Hz.
 *****************************************************************************/
uint32_t SystemFSRCOClockGet(void)
{
  return FSRCO_FREQ;
}
    6694:	4800      	ldr	r0, [pc, #0]	; (6698 <SystemFSRCOClockGet+0x4>)
    6696:	4770      	bx	lr
    6698:	01312d00 	.word	0x01312d00

0000669c <SystemHFRCOEM23ClockGet>:
uint32_t SystemHFRCOEM23ClockGet(void)
{
  uint32_t ret = 0UL;

  /* Get oscillator frequency band */
  switch ((HFRCOEM23->CAL & _HFRCO_CAL_FREQRANGE_MASK)
    669c:	4b17      	ldr	r3, [pc, #92]	; (66fc <SystemHFRCOEM23ClockGet+0x60>)
    669e:	6898      	ldr	r0, [r3, #8]
          >> _HFRCO_CAL_FREQRANGE_SHIFT) {
    66a0:	f3c0 4004 	ubfx	r0, r0, #16, #5
  switch ((HFRCOEM23->CAL & _HFRCO_CAL_FREQRANGE_MASK)
    66a4:	280c      	cmp	r0, #12
    66a6:	d808      	bhi.n	66ba <SystemHFRCOEM23ClockGet+0x1e>
    66a8:	e8df f000 	tbb	[pc, r0]
    66ac:	07070709 	.word	0x07070709
    66b0:	17210707 	.word	0x17210707
    66b4:	1d1b0719 	.word	0x1d1b0719
    66b8:	1f          	.byte	0x1f
    66b9:	00          	.byte	0x00
    66ba:	2000      	movs	r0, #0
    66bc:	4770      	bx	lr
    case 0:
      switch (HFRCOEM23->CAL & _HFRCO_CAL_CLKDIV_MASK) {
    66be:	4b0f      	ldr	r3, [pc, #60]	; (66fc <SystemHFRCOEM23ClockGet+0x60>)
    66c0:	689b      	ldr	r3, [r3, #8]
    66c2:	f003 7340 	and.w	r3, r3, #50331648	; 0x3000000
    66c6:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
    66ca:	d012      	beq.n	66f2 <SystemHFRCOEM23ClockGet+0x56>
    66cc:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
    66d0:	d011      	beq.n	66f6 <SystemHFRCOEM23ClockGet+0x5a>
    66d2:	b103      	cbz	r3, 66d6 <SystemHFRCOEM23ClockGet+0x3a>

    default:
      break;
  }
  return ret;
}
    66d4:	4770      	bx	lr
    66d6:	480a      	ldr	r0, [pc, #40]	; (6700 <SystemHFRCOEM23ClockGet+0x64>)
    66d8:	4770      	bx	lr
      ret = 16000000UL;
    66da:	480a      	ldr	r0, [pc, #40]	; (6704 <SystemHFRCOEM23ClockGet+0x68>)
      break;
    66dc:	4770      	bx	lr
      ret = 19000000UL;
    66de:	480a      	ldr	r0, [pc, #40]	; (6708 <SystemHFRCOEM23ClockGet+0x6c>)
      break;
    66e0:	4770      	bx	lr
      ret = 26000000UL;
    66e2:	480a      	ldr	r0, [pc, #40]	; (670c <SystemHFRCOEM23ClockGet+0x70>)
      break;
    66e4:	4770      	bx	lr
      ret = 32000000UL;
    66e6:	480a      	ldr	r0, [pc, #40]	; (6710 <SystemHFRCOEM23ClockGet+0x74>)
      break;
    66e8:	4770      	bx	lr
      ret = 40000000UL;
    66ea:	480a      	ldr	r0, [pc, #40]	; (6714 <SystemHFRCOEM23ClockGet+0x78>)
      break;
    66ec:	4770      	bx	lr
      ret = 13000000UL;
    66ee:	480a      	ldr	r0, [pc, #40]	; (6718 <SystemHFRCOEM23ClockGet+0x7c>)
    66f0:	4770      	bx	lr
          ret = 2000000UL;
    66f2:	480a      	ldr	r0, [pc, #40]	; (671c <SystemHFRCOEM23ClockGet+0x80>)
    66f4:	4770      	bx	lr
          ret = 1000000UL;
    66f6:	480a      	ldr	r0, [pc, #40]	; (6720 <SystemHFRCOEM23ClockGet+0x84>)
  return ret;
    66f8:	e7ec      	b.n	66d4 <SystemHFRCOEM23ClockGet+0x38>
    66fa:	bf00      	nop
    66fc:	4a014000 	.word	0x4a014000
    6700:	003d0900 	.word	0x003d0900
    6704:	00f42400 	.word	0x00f42400
    6708:	0121eac0 	.word	0x0121eac0
    670c:	018cba80 	.word	0x018cba80
    6710:	01e84800 	.word	0x01e84800
    6714:	02625a00 	.word	0x02625a00
    6718:	00c65d40 	.word	0x00c65d40
    671c:	001e8480 	.word	0x001e8480
    6720:	000f4240 	.word	0x000f4240

00006724 <SystemLFRCOClockGet>:
 *   LFRCO frequency in Hz.
 *****************************************************************************/
uint32_t SystemLFRCOClockGet(void)
{
  return LFRCO_FREQ;
}
    6724:	f44f 4000 	mov.w	r0, #32768	; 0x8000
    6728:	4770      	bx	lr

0000672a <SystemULFRCOClockGet>:
 *****************************************************************************/
uint32_t SystemULFRCOClockGet(void)
{
  /* The ULFRCO frequency is not tuned, and can be very inaccurate */
  return ULFRCO_FREQ;
}
    672a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    672e:	4770      	bx	lr

00006730 <SystemLFXOClockGet>:
  return SystemLFXOClock;
#endif
#else
  return 0U;
#endif
}
    6730:	4b01      	ldr	r3, [pc, #4]	; (6738 <SystemLFXOClockGet+0x8>)
    6732:	6818      	ldr	r0, [r3, #0]
    6734:	4770      	bx	lr
    6736:	bf00      	nop
    6738:	2000000c 	.word	0x2000000c

0000673c <HAL_Clocks_Init>:

/***************************************************************************//**
 * Initialize clocks
 ******************************************************************************/
void HAL_Clocks_Init( void )
{
    673c:	b508      	push	{r3, lr}
#if defined(_SILICON_LABS_32B_SERIES_2)
  CMU_HFRCODPLLBandSet(cmuHFRCODPLLFreq_80M0Hz);
    673e:	4802      	ldr	r0, [pc, #8]	; (6748 <HAL_Clocks_Init+0xc>)
    6740:	f7ff fc2e 	bl	5fa0 <CMU_HFRCODPLLBandSet>
#else
  CMU_HFRCOBandSet(SL_DEVICE_INIT_HFRCO_BAND);
#endif

  CMU_ClockEnable(cmuClock_GPIO, true);
    6744:	bd08      	pop	{r3, pc}
    6746:	bf00      	nop
    6748:	04c4b400 	.word	0x04c4b400

0000674c <radioEventHandler>:
/***************************************************************************//**
 * Private functions
 ******************************************************************************/
static void radioEventHandler(RAIL_Handle_t railHandle,
                              RAIL_Events_t events)
{
    674c:	b510      	push	{r4, lr}
    674e:	4614      	mov	r4, r2
    RAIL_RxPacketHandle_t handle;

    if( (events & RAIL_EVENT_RX_PACKET_RECEIVED) == RAIL_EVENT_RX_PACKET_RECEIVED )
    6750:	f012 0f08 	tst.w	r2, #8
    6754:	d106      	bne.n	6764 <radioEventHandler+0x18>
            // sl_led_turn_off (&sl_led_led0);
            mainPacketHandle = handle;
        }
    }

    if( (events & ( RAIL_EVENT_RX_SYNC1_DETECT | RAIL_EVENT_RX_SYNC2_DETECT)) != 0 )
    6756:	f014 0fc0 	tst.w	r4, #192	; 0xc0
    675a:	d10c      	bne.n	6776 <radioEventHandler+0x2a>
    {
        // Hal_Radio_Rx_Started();
        BSP_SetLed();
    }

    if ((events & RAIL_EVENTS_RX_COMPLETION) != 0)
    675c:	4b09      	ldr	r3, [pc, #36]	; (6784 <radioEventHandler+0x38>)
    675e:	421c      	tst	r4, r3
    6760:	d10c      	bne.n	677c <radioEventHandler+0x30>
    {
        BSP_ClrLed();
    }
}
    6762:	bd10      	pop	{r4, pc}
        handle = RAIL_HoldRxPacket(railHandle);
    6764:	f000 fca6 	bl	70b4 <RAIL_HoldRxPacket>
        if ( mainPacketHandle == RAIL_RX_PACKET_HANDLE_INVALID )
    6768:	4b07      	ldr	r3, [pc, #28]	; (6788 <radioEventHandler+0x3c>)
    676a:	681b      	ldr	r3, [r3, #0]
    676c:	2b00      	cmp	r3, #0
    676e:	d1f2      	bne.n	6756 <radioEventHandler+0xa>
            mainPacketHandle = handle;
    6770:	4b05      	ldr	r3, [pc, #20]	; (6788 <radioEventHandler+0x3c>)
    6772:	6018      	str	r0, [r3, #0]
    6774:	e7ef      	b.n	6756 <radioEventHandler+0xa>
        BSP_SetLed();
    6776:	f000 f987 	bl	6a88 <BSP_SetLed>
    677a:	e7ef      	b.n	675c <radioEventHandler+0x10>
        BSP_ClrLed();
    677c:	f000 f98a 	bl	6a94 <BSP_ClrLed>
}
    6780:	e7ef      	b.n	6762 <radioEventHandler+0x16>
    6782:	bf00      	nop
    6784:	00018d08 	.word	0x00018d08
    6788:	20000aa4 	.word	0x20000aa4

0000678c <HAL_Radio_Init>:
 ******************************************************************************/
/***************************************************************************//**
 * Init radio ready for command
 ******************************************************************************/
void HAL_Radio_Init( void )
{
    678c:	b510      	push	{r4, lr}
    gRailHandle = RAIL_Init(&railCfg, NULL);
    678e:	2100      	movs	r1, #0
    6790:	4805      	ldr	r0, [pc, #20]	; (67a8 <HAL_Radio_Init+0x1c>)
    6792:	f000 f985 	bl	6aa0 <RAIL_Init>
    6796:	4c05      	ldr	r4, [pc, #20]	; (67ac <HAL_Radio_Init+0x20>)
    6798:	6020      	str	r0, [r4, #0]

    // Configure the radio and channels for 2.4 GHz IEEE 802.15.4.
    RAIL_IEEE802154_Config2p4GHzRadio(gRailHandle);
    679a:	f000 fd33 	bl	7204 <RAIL_IEEE802154_Config2p4GHzRadio>
    // Initialize the IEEE 802.15.4 configuration using the static configuration above.
    RAIL_IEEE802154_Init(gRailHandle, &rail154Config);
    679e:	4904      	ldr	r1, [pc, #16]	; (67b0 <HAL_Radio_Init+0x24>)
    67a0:	6820      	ldr	r0, [r4, #0]
    67a2:	f000 fcf1 	bl	7188 <RAIL_IEEE802154_Init>
}
    67a6:	bd10      	pop	{r4, pc}
    67a8:	20000014 	.word	0x20000014
    67ac:	20000aa0 	.word	0x20000aa0
    67b0:	0000bdb0 	.word	0x0000bdb0
    67b4:	00000000 	.word	0x00000000

000067b8 <HAL_Radio_InitPromiscuousMode>:

/***************************************************************************//**
 * Set radio in promiscuous mode (see 802.15.4 for details)
 ******************************************************************************/
void HAL_Radio_InitPromiscuousMode( void )
{
    67b8:	b530      	push	{r4, r5, lr}
    67ba:	b085      	sub	sp, #20
//       { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } }
//   };
//   status = RAIL_IEEE802154_SetAddresses(gRailHandle, &nodeAddress);

    //set RAIL_RX_OPTION_STORE_CRC to obtain CRC
    RAIL_ConfigRxOptions( gRailHandle, RAIL_RX_OPTION_STORE_CRC /*+ RAIL_RX_OPTION_IGNORE_CRC_ERRORS*/, RAIL_RX_OPTION_STORE_CRC /*+ RAIL_RX_OPTION_IGNORE_CRC_ERRORS*/ );
    67bc:	4c1c      	ldr	r4, [pc, #112]	; (6830 <HAL_Radio_InitPromiscuousMode+0x78>)
    67be:	2201      	movs	r2, #1
    67c0:	4611      	mov	r1, r2
    67c2:	6820      	ldr	r0, [r4, #0]
    67c4:	f000 fc25 	bl	7012 <RAIL_ConfigRxOptions>

    RAIL_IEEE802154_SetPromiscuousMode(gRailHandle, true );
    67c8:	2101      	movs	r1, #1
    67ca:	6820      	ldr	r0, [r4, #0]
    67cc:	f000 fd20 	bl	7210 <RAIL_IEEE802154_SetPromiscuousMode>

    RAIL_IEEE802154_AcceptFrames( gRailHandle, (RAIL_IEEE802154_ACCEPT_STANDARD_FRAMES | RAIL_IEEE802154_ACCEPT_ACK_FRAMES));
    67d0:	210f      	movs	r1, #15
    67d2:	6820      	ldr	r0, [r4, #0]
    67d4:	f000 fd2f 	bl	7236 <RAIL_IEEE802154_AcceptFrames>

    // Configures the most useful callbacks and catches a few errors.
    RAIL_ConfigEvents(gRailHandle,
    67d8:	a313      	add	r3, pc, #76	; (adr r3, 6828 <HAL_Radio_InitPromiscuousMode+0x70>)
    67da:	e9d3 2300 	ldrd	r2, r3, [r3]
    67de:	e9cd 2300 	strd	r2, r3, [sp]
    67e2:	f04f 32ff 	mov.w	r2, #4294967295
    67e6:	f04f 33ff 	mov.w	r3, #4294967295
    67ea:	6820      	ldr	r0, [r4, #0]
    67ec:	f000 fc04 	bl	6ff8 <RAIL_ConfigEvents>
                    RAIL_EVENT_TX_PACKET_SENT
                    | RAIL_EVENTS_RX_COMPLETION
                    | RAIL_EVENT_RX_SYNC1_DETECT
                    | RAIL_EVENT_RX_SYNC2_DETECT);      //Detect begin of a messages

    RAIL_AntennaConfig_t antennaConfig = { 0 };
    67f0:	2500      	movs	r5, #0
    67f2:	9502      	str	r5, [sp, #8]
    67f4:	9503      	str	r5, [sp, #12]
    antennaConfig.defaultPath = RAIL_ANTENNA_1;
    67f6:	2301      	movs	r3, #1
    67f8:	f88d 300a 	strb.w	r3, [sp, #10]
    antennaConfig.ant1PinEn = true;
    67fc:	f88d 3009 	strb.w	r3, [sp, #9]
    // antennaConfig.ant1Loc =
    // antennaConfig.ant1Port =
    // antennaConfig.ant1Pin =

    status = RAIL_ConfigAntenna( gRailHandle, &antennaConfig );
    6800:	a902      	add	r1, sp, #8
    6802:	6820      	ldr	r0, [r4, #0]
    6804:	f000 fc02 	bl	700c <RAIL_ConfigAntenna>

    //configuration for transmission
    RAIL_SetTxFifo( gRailHandle, RadioTxFifo, 0, RADIO_TX_FIFO_SIZE );
    6808:	f44f 6380 	mov.w	r3, #1024	; 0x400
    680c:	462a      	mov	r2, r5
    680e:	4909      	ldr	r1, [pc, #36]	; (6834 <HAL_Radio_InitPromiscuousMode+0x7c>)
    6810:	6820      	ldr	r0, [r4, #0]
    6812:	f000 fc24 	bl	705e <RAIL_SetTxFifo>

    status = RAIL_StartRx( gRailHandle, MainChannel, NULL );
    6816:	462a      	mov	r2, r5
    6818:	4b07      	ldr	r3, [pc, #28]	; (6838 <HAL_Radio_InitPromiscuousMode+0x80>)
    681a:	7819      	ldrb	r1, [r3, #0]
    681c:	6820      	ldr	r0, [r4, #0]
    681e:	f000 f95d 	bl	6adc <RAIL_StartRx>

    (void) status;

}
    6822:	b005      	add	sp, #20
    6824:	bd30      	pop	{r4, r5, pc}
    6826:	bf00      	nop
    6828:	01018dc8 	.word	0x01018dc8
    682c:	00000000 	.word	0x00000000
    6830:	20000aa0 	.word	0x20000aa0
    6834:	200006a0 	.word	0x200006a0
    6838:	20000010 	.word	0x20000010

0000683c <HAL_Radio_GetRxPacket>:
{
    RAIL_RxPacketInfo_t packetInfo;
    RAIL_RxPacketDetails_t packetDetails;
    bool packet_received = false;

    if( phy_rx == NULL )
    683c:	2800      	cmp	r0, #0
    683e:	d045      	beq.n	68cc <HAL_Radio_GetRxPacket+0x90>
{
    6840:	b570      	push	{r4, r5, r6, lr}
    6842:	b08c      	sub	sp, #48	; 0x30
    6844:	4604      	mov	r4, r0
    {
        return HAL_RADIO_GET_RX_PACKET_INVALID_PARAMETER;
    }
    phy_rx->len = 0;
    6846:	2300      	movs	r3, #0
    6848:	7003      	strb	r3, [r0, #0]

    if( mainPacketHandle != RAIL_RX_PACKET_HANDLE_INVALID )
    684a:	4b22      	ldr	r3, [pc, #136]	; (68d4 <HAL_Radio_GetRxPacket+0x98>)
    684c:	6819      	ldr	r1, [r3, #0]
    684e:	b1f1      	cbz	r1, 688e <HAL_Radio_GetRxPacket+0x52>
    {
        RAIL_GetRxPacketInfo(gRailHandle, mainPacketHandle, &packetInfo);
    6850:	4d21      	ldr	r5, [pc, #132]	; (68d8 <HAL_Radio_GetRxPacket+0x9c>)
    6852:	aa07      	add	r2, sp, #28
    6854:	6828      	ldr	r0, [r5, #0]
    6856:	f000 fc25 	bl	70a4 <RAIL_GetRxPacketInfo>
        RAIL_GetRxPacketDetails(gRailHandle, mainPacketHandle, &packetDetails);
    685a:	aa03      	add	r2, sp, #12
    685c:	4b1d      	ldr	r3, [pc, #116]	; (68d4 <HAL_Radio_GetRxPacket+0x98>)
    685e:	6819      	ldr	r1, [r3, #0]
    6860:	6828      	ldr	r0, [r5, #0]
    6862:	f000 fc23 	bl	70ac <RAIL_GetRxPacketDetails>

        if( (packetInfo.packetBytes < PHY_PAYLOAD_MAX + 1) && (packetInfo.packetBytes != 0) )
    6866:	f8bd 201e 	ldrh.w	r2, [sp, #30]
    686a:	1e53      	subs	r3, r2, #1
    686c:	b29b      	uxth	r3, r3
    686e:	2b7f      	cmp	r3, #127	; 0x7f
    6870:	d910      	bls.n	6894 <HAL_Radio_GetRxPacket+0x58>
    bool packet_received = false;
    6872:	2600      	movs	r6, #0
            phy_rx->channel = MainChannel;
            packet_received = true;
            // //RAIL_GetChannel() //to retreive channel
            // MAC_ProcessPhyRx( &phy_rx );
        }
        RAIL_ReleaseRxPacket(gRailHandle, mainPacketHandle);
    6874:	4c17      	ldr	r4, [pc, #92]	; (68d4 <HAL_Radio_GetRxPacket+0x98>)
    6876:	4d18      	ldr	r5, [pc, #96]	; (68d8 <HAL_Radio_GetRxPacket+0x9c>)
    6878:	6821      	ldr	r1, [r4, #0]
    687a:	6828      	ldr	r0, [r5, #0]
    687c:	f000 fc1c 	bl	70b8 <RAIL_ReleaseRxPacket>
        mainPacketHandle = RAIL_GetRxPacketInfo(gRailHandle, RAIL_RX_PACKET_HANDLE_OLDEST_COMPLETE, &packetInfo);
    6880:	aa07      	add	r2, sp, #28
    6882:	2102      	movs	r1, #2
    6884:	6828      	ldr	r0, [r5, #0]
    6886:	f000 fc0d 	bl	70a4 <RAIL_GetRxPacketInfo>
    688a:	6020      	str	r0, [r4, #0]
    }

    if( packet_received )
    688c:	bb06      	cbnz	r6, 68d0 <HAL_Radio_GetRxPacket+0x94>
    {
        return HAL_RADIO_GET_RX_PACKET_SUCCESS;
    }else{
        return HAL_RADIO_GET_RX_PACKET_NONE;
    688e:	2001      	movs	r0, #1
    }
}
    6890:	b00c      	add	sp, #48	; 0x30
    6892:	bd70      	pop	{r4, r5, r6, pc}
            phy_rx->len = packetInfo.packetBytes - 1;
    6894:	1e53      	subs	r3, r2, #1
    6896:	4622      	mov	r2, r4
    6898:	f802 3b01 	strb.w	r3, [r2], #1
                                packetInfo.packetBytes - 1,         //uint16_t  	len,
    689c:	f8bd 301e 	ldrh.w	r3, [sp, #30]
            RAIL_PeekRxPacket ( gRailHandle,                        //RAIL_Handle_t  	railHandle,
    68a0:	3b01      	subs	r3, #1
    68a2:	2601      	movs	r6, #1
    68a4:	9600      	str	r6, [sp, #0]
    68a6:	b29b      	uxth	r3, r3
    68a8:	490a      	ldr	r1, [pc, #40]	; (68d4 <HAL_Radio_GetRxPacket+0x98>)
    68aa:	6809      	ldr	r1, [r1, #0]
    68ac:	6828      	ldr	r0, [r5, #0]
    68ae:	f000 fc06 	bl	70be <RAIL_PeekRxPacket>
            phy_rx->rssi = packetDetails.rssi;
    68b2:	f99d 3016 	ldrsb.w	r3, [sp, #22]
    68b6:	f884 3082 	strb.w	r3, [r4, #130]	; 0x82
            phy_rx->lqi = packetDetails.lqi;
    68ba:	f89d 3017 	ldrb.w	r3, [sp, #23]
    68be:	f884 3081 	strb.w	r3, [r4, #129]	; 0x81
            phy_rx->channel = MainChannel;
    68c2:	4b06      	ldr	r3, [pc, #24]	; (68dc <HAL_Radio_GetRxPacket+0xa0>)
    68c4:	781b      	ldrb	r3, [r3, #0]
    68c6:	f884 3083 	strb.w	r3, [r4, #131]	; 0x83
            packet_received = true;
    68ca:	e7d3      	b.n	6874 <HAL_Radio_GetRxPacket+0x38>
        return HAL_RADIO_GET_RX_PACKET_INVALID_PARAMETER;
    68cc:	2002      	movs	r0, #2
}
    68ce:	4770      	bx	lr
        return HAL_RADIO_GET_RX_PACKET_SUCCESS;
    68d0:	2000      	movs	r0, #0
    68d2:	e7dd      	b.n	6890 <HAL_Radio_GetRxPacket+0x54>
    68d4:	20000aa4 	.word	0x20000aa4
    68d8:	20000aa0 	.word	0x20000aa0
    68dc:	20000010 	.word	0x20000010

000068e0 <HAL_SetRadioChannel>:
 * Select channel to use
 *
 * \param[in]   channel   11 - 26
 ******************************************************************************/
void HAL_SetRadioChannel( uint8_t channel )
{
    68e0:	b510      	push	{r4, lr}
    68e2:	4604      	mov	r4, r0
    //Assuming radio is configured for RX operation
    RAIL_Status_t status = RAIL_StartRx( gRailHandle, channel, NULL );
    68e4:	2200      	movs	r2, #0
    68e6:	4601      	mov	r1, r0
    68e8:	4b03      	ldr	r3, [pc, #12]	; (68f8 <HAL_SetRadioChannel+0x18>)
    68ea:	6818      	ldr	r0, [r3, #0]
    68ec:	f000 f8f6 	bl	6adc <RAIL_StartRx>
    if( status == RAIL_STATUS_NO_ERROR )
    68f0:	b908      	cbnz	r0, 68f6 <HAL_SetRadioChannel+0x16>
    {
        MainChannel = channel;
    68f2:	4b02      	ldr	r3, [pc, #8]	; (68fc <HAL_SetRadioChannel+0x1c>)
    68f4:	701c      	strb	r4, [r3, #0]
    }
}
    68f6:	bd10      	pop	{r4, pc}
    68f8:	20000aa0 	.word	0x20000aa0
    68fc:	20000010 	.word	0x20000010

00006900 <HAL_Console_Init>:

/***************************************************************************//**
 * Initialize uart
 ******************************************************************************/
void HAL_Console_Init( void )
{
    6900:	b510      	push	{r4, lr}
    6902:	b088      	sub	sp, #32
    USART_TypeDef * console_usart = HAL_CONSOLE_USART;
    IRQn_Type irq = USART0_RX_IRQn;

    const USART_InitAsync_TypeDef init = {
    6904:	f10d 0c04 	add.w	ip, sp, #4
    6908:	4c29      	ldr	r4, [pc, #164]	; (69b0 <HAL_Console_Init+0xb0>)
    690a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
    690c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
    6910:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
    6914:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
        #endif
    };

    CMU_ClockEnable(HAL_CONSOLE_USART_CLOCK, true);

    USART_InitAsync(console_usart, &init);
    6918:	4c26      	ldr	r4, [pc, #152]	; (69b4 <HAL_Console_Init+0xb4>)
    691a:	a901      	add	r1, sp, #4
    691c:	4620      	mov	r0, r4
    691e:	f7ff fdab 	bl	6478 <USART_InitAsync>

    //Config pins
     GPIO_PinModeSet(HAL_CONSOLE_USART_TX_PORT, HAL_CONSOLE_USART_TX_PIN, gpioModePushPull, 1);
    6922:	2301      	movs	r3, #1
    6924:	2204      	movs	r2, #4
    6926:	4619      	mov	r1, r3
    6928:	4618      	mov	r0, r3
    692a:	f7ff fbbd 	bl	60a8 <GPIO_PinModeSet>
     GPIO_PinModeSet(HAL_CONSOLE_USART_RX_PORT, HAL_CONSOLE_USART_RX_PIN, gpioModeInputPull, 1);
    692e:	2301      	movs	r3, #1
    6930:	2202      	movs	r2, #2
    6932:	2100      	movs	r1, #0
    6934:	4618      	mov	r0, r3
    6936:	f7ff fbb7 	bl	60a8 <GPIO_PinModeSet>

    // RX //
    // Enable Rx
    console_usart->CMD = USART_CMD_RXEN;
    693a:	2301      	movs	r3, #1
    693c:	6163      	str	r3, [r4, #20]
    // Wait for Rx to be enabled
    while (!(console_usart->STATUS & USART_STATUS_RXENS)) {
    693e:	4b1d      	ldr	r3, [pc, #116]	; (69b4 <HAL_Console_Init+0xb4>)
    6940:	699b      	ldr	r3, [r3, #24]
    6942:	f013 0f01 	tst.w	r3, #1
    6946:	d0fa      	beq.n	693e <HAL_Console_Init+0x3e>
    }
    // Enable Rx route
    GPIO->USARTROUTE[HAL_CONSOLE_USART_ID].RXROUTE =
    6948:	4b1b      	ldr	r3, [pc, #108]	; (69b8 <HAL_Console_Init+0xb8>)
    694a:	2201      	movs	r2, #1
    694c:	f8c3 25bc 	str.w	r2, [r3, #1468]	; 0x5bc
           (HAL_CONSOLE_USART_RX_PORT << _GPIO_USART_RXROUTE_PORT_SHIFT)
         | (HAL_CONSOLE_USART_RX_PIN << _GPIO_USART_RXROUTE_PIN_SHIFT);

    GPIO->USARTROUTE_SET[HAL_CONSOLE_USART_ID].ROUTEEN = GPIO_USART_ROUTEEN_RXPEN;
    6950:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
    6954:	2204      	movs	r2, #4
    6956:	f8c3 25ac 	str.w	r2, [r3, #1452]	; 0x5ac

    // TX //
    console_usart->CMD = USART_CMD_TXEN;
    695a:	f503 33d8 	add.w	r3, r3, #110592	; 0x1b000
    695e:	615a      	str	r2, [r3, #20]
    // Wait for Tx to be enabled
    while (!(console_usart->STATUS & USART_STATUS_TXENS)) {
    6960:	4b14      	ldr	r3, [pc, #80]	; (69b4 <HAL_Console_Init+0xb4>)
    6962:	699b      	ldr	r3, [r3, #24]
    6964:	f013 0f02 	tst.w	r3, #2
    6968:	d0fa      	beq.n	6960 <HAL_Console_Init+0x60>
    }
    // Enable Tx route
     GPIO->USARTROUTE[HAL_CONSOLE_USART_ID].TXROUTE =
    696a:	4b13      	ldr	r3, [pc, #76]	; (69b8 <HAL_Console_Init+0xb8>)
    696c:	f04f 1201 	mov.w	r2, #65537	; 0x10001
    6970:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
           (HAL_CONSOLE_USART_TX_PORT << _GPIO_USART_TXROUTE_PORT_SHIFT)
         | (HAL_CONSOLE_USART_TX_PIN << _GPIO_USART_TXROUTE_PIN_SHIFT);

    GPIO->USARTROUTE_SET[HAL_CONSOLE_USART_ID].ROUTEEN = GPIO_USART_ROUTEEN_TXPEN;
    6974:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
    6978:	2210      	movs	r2, #16
    697a:	f8c3 25ac 	str.w	r2, [r3, #1452]	; 0x5ac
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    697e:	4b0f      	ldr	r3, [pc, #60]	; (69bc <HAL_Console_Init+0xbc>)
    6980:	f44f 6200 	mov.w	r2, #2048	; 0x800
    6984:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
    6988:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
    698c:	f3bf 8f6f 	isb	sy
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    6990:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
    6994:	2180      	movs	r1, #128	; 0x80
    6996:	f883 130b 	strb.w	r1, [r3, #779]	; 0x30b
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    699a:	601a      	str	r2, [r3, #0]
    NVIC_ClearPendingIRQ(irq);
    NVIC_SetPriority(irq, 8);    //set uart interrupt priority
    NVIC_EnableIRQ(irq);

    //clear any pending interrupt assuming writing 1 clear state
    console_usart->IF_CLR = USART_IF_RXDATAV;
    699c:	4b05      	ldr	r3, [pc, #20]	; (69b4 <HAL_Console_Init+0xb4>)
    699e:	f503 5100 	add.w	r1, r3, #8192	; 0x2000
    69a2:	2204      	movs	r2, #4
    69a4:	648a      	str	r2, [r1, #72]	; 0x48
    //try to enable interrupt
    console_usart->IEN_SET = USART_IEN_RXDATAV;
    69a6:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
    69aa:	64da      	str	r2, [r3, #76]	; 0x4c
}
    69ac:	b008      	add	sp, #32
    69ae:	bd10      	pop	{r4, pc}
    69b0:	0000bddc 	.word	0x0000bddc
    69b4:	40058000 	.word	0x40058000
    69b8:	4003c000 	.word	0x4003c000
    69bc:	e000e100 	.word	0xe000e100

000069c0 <HAL_Console_Tx_Byte>:
 * If uart tx buffer full, wait for buffer to be available
 ******************************************************************************/
void HAL_Console_Tx_Byte( uint8_t byte )
{
    USART_TypeDef * console_usart = HAL_CONSOLE_USART;
    while( (console_usart->STATUS & USART_STATUS_TXBL) != USART_STATUS_TXBL){};
    69c0:	4b03      	ldr	r3, [pc, #12]	; (69d0 <HAL_Console_Tx_Byte+0x10>)
    69c2:	699b      	ldr	r3, [r3, #24]
    69c4:	f013 0f40 	tst.w	r3, #64	; 0x40
    69c8:	d0fa      	beq.n	69c0 <HAL_Console_Tx_Byte>
    console_usart->TXDATA = byte;
    69ca:	4b01      	ldr	r3, [pc, #4]	; (69d0 <HAL_Console_Tx_Byte+0x10>)
    69cc:	63d8      	str	r0, [r3, #60]	; 0x3c
}
    69ce:	4770      	bx	lr
    69d0:	40058000 	.word	0x40058000

000069d4 <USART0_RX_IRQHandler>:

/***************************************************************************//**
 * UART interrupt handler
 ******************************************************************************/
void USART0_RX_IRQHandler( void )
{
    69d4:	b508      	push	{r3, lr}
    Console_RxByte(HAL_CONSOLE_USART->RXDATA);
    69d6:	4b03      	ldr	r3, [pc, #12]	; (69e4 <USART0_RX_IRQHandler+0x10>)
    69d8:	6a58      	ldr	r0, [r3, #36]	; 0x24
    69da:	b2c0      	uxtb	r0, r0
    69dc:	f7fe f900 	bl	4be0 <Console_RxByte>
    69e0:	bd08      	pop	{r3, pc}
    69e2:	bf00      	nop
    69e4:	40058000 	.word	0x40058000

000069e8 <BSP_InitLed>:
    BSP_InitLed();

}

void BSP_InitLed( void )
{
    69e8:	b508      	push	{r3, lr}
    GPIO_PinModeSet(LED_PORT,
    69ea:	2301      	movs	r3, #1
    69ec:	2204      	movs	r2, #4
    69ee:	2100      	movs	r1, #0
    69f0:	2002      	movs	r0, #2
    69f2:	f7ff fb59 	bl	60a8 <GPIO_PinModeSet>
                    LED_PIN,
                    gpioModePushPull,
                    1);
}
    69f6:	bd08      	pop	{r3, pc}

000069f8 <BSP_Init>:
{
    69f8:	b500      	push	{lr}
    69fa:	b083      	sub	sp, #12
#endif

#if defined(_SILICON_LABS_GECKO_INTERNAL_SDID_200)
  //ceci est inclus a la compilation
  SYSTEM_ChipRevision_TypeDef chipRev;
  SYSTEM_ChipRevisionGet(&chipRev);
    69fc:	a801      	add	r0, sp, #4
    69fe:	f7ff fc47 	bl	6290 <SYSTEM_ChipRevisionGet>

  if ((HFXO0->STATUS & HFXO_STATUS_ENS) == 0U) {
    6a02:	4b1f      	ldr	r3, [pc, #124]	; (6a80 <BSP_Init+0x88>)
    6a04:	6d9b      	ldr	r3, [r3, #88]	; 0x58
    6a06:	f413 3f80 	tst.w	r3, #65536	; 0x10000
    6a0a:	d114      	bne.n	6a36 <BSP_Init+0x3e>
    /* Change HFXO default peak detector settings. */
    *(volatile uint32_t*)(HFXO0_BASE + 0x34U) =
      (*(volatile uint32_t*)(HFXO0_BASE + 0x34U) & 0xFF8000FFU)
    6a0c:	4a1c      	ldr	r2, [pc, #112]	; (6a80 <BSP_Init+0x88>)
    6a0e:	6b53      	ldr	r3, [r2, #52]	; 0x34
    6a10:	f423 03ff 	bic.w	r3, r3, #8355840	; 0x7f8000
    6a14:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
      | 0x00178500U;
    6a18:	f443 13bc 	orr.w	r3, r3, #1540096	; 0x178000
    6a1c:	f443 63a0 	orr.w	r3, r3, #1280	; 0x500
    *(volatile uint32_t*)(HFXO0_BASE + 0x34U) =
    6a20:	6353      	str	r3, [r2, #52]	; 0x34
    /* Change HFXO low power control settings. */
    *(volatile uint32_t*)(HFXO0_BASE + 0x30U) =
      (*(volatile uint32_t*)(HFXO0_BASE + 0x30U) & 0xFFFF0FFFU)
    6a22:	6b13      	ldr	r3, [r2, #48]	; 0x30
    6a24:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
      | 0x0000C000U;
    6a28:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
    *(volatile uint32_t*)(HFXO0_BASE + 0x30U) =
    6a2c:	6313      	str	r3, [r2, #48]	; 0x30
    /* Change default SQBUF bias current. */
    *(volatile uint32_t*)(HFXO0_BASE + 0x30U) |= 0x700;
    6a2e:	6b13      	ldr	r3, [r2, #48]	; 0x30
    6a30:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
    6a34:	6313      	str	r3, [r2, #48]	; 0x30
  }

  if (chipRev.major == 0x01 && chipRev.minor == 0x0) {
    6a36:	f89d 3005 	ldrb.w	r3, [sp, #5]
    6a3a:	2b01      	cmp	r3, #1
    6a3c:	d011      	beq.n	6a62 <BSP_Init+0x6a>
      dmem += (DMEM_BANK0_SIZE / 4U);
    }
  }

  /* Set TRACE clock to intended reset value. */
  CMU->TRACECLKCTRL = (CMU->TRACECLKCTRL & ~_CMU_TRACECLKCTRL_CLKSEL_MASK)
    6a3e:	4a11      	ldr	r2, [pc, #68]	; (6a84 <BSP_Init+0x8c>)
    6a40:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
                      | CMU_TRACECLKCTRL_CLKSEL_HFRCOEM23;
    6a44:	f043 0303 	orr.w	r3, r3, #3
  CMU->TRACECLKCTRL = (CMU->TRACECLKCTRL & ~_CMU_TRACECLKCTRL_CLKSEL_MASK)
    6a48:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
    HAL_Clocks_Init();
    6a4c:	f7ff fe76 	bl	673c <HAL_Clocks_Init>
    HAL_Console_Init();
    6a50:	f7ff ff56 	bl	6900 <HAL_Console_Init>
    HAL_Radio_Init();
    6a54:	f7ff fe9a 	bl	678c <HAL_Radio_Init>
    BSP_InitLed();
    6a58:	f7ff ffc6 	bl	69e8 <BSP_InitLed>
}
    6a5c:	b003      	add	sp, #12
    6a5e:	f85d fb04 	ldr.w	pc, [sp], #4
  if (chipRev.major == 0x01 && chipRev.minor == 0x0) {
    6a62:	f89d 3004 	ldrb.w	r3, [sp, #4]
    6a66:	2b00      	cmp	r3, #0
    6a68:	d1e9      	bne.n	6a3e <BSP_Init+0x46>
    for (uint32_t i = 0U; i < DMEM_NUM_BANK; i++) {
    6a6a:	2300      	movs	r3, #0
    volatile uint32_t *dmem = (volatile uint32_t *) DMEM_RAM0_RAM_MEM_BASE;
    6a6c:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
    6a70:	e003      	b.n	6a7a <BSP_Init+0x82>
      *dmem;
    6a72:	6811      	ldr	r1, [r2, #0]
      dmem += (DMEM_BANK0_SIZE / 4U);
    6a74:	f502 4280 	add.w	r2, r2, #16384	; 0x4000
    for (uint32_t i = 0U; i < DMEM_NUM_BANK; i++) {
    6a78:	3301      	adds	r3, #1
    6a7a:	2b05      	cmp	r3, #5
    6a7c:	d9f9      	bls.n	6a72 <BSP_Init+0x7a>
    6a7e:	e7de      	b.n	6a3e <BSP_Init+0x46>
    6a80:	4000c000 	.word	0x4000c000
    6a84:	40008000 	.word	0x40008000

00006a88 <BSP_SetLed>:
  GPIO->P_CLR[port].DOUT = 1 << pin;
    6a88:	4b01      	ldr	r3, [pc, #4]	; (6a90 <BSP_SetLed+0x8>)
    6a8a:	2201      	movs	r2, #1
    6a8c:	671a      	str	r2, [r3, #112]	; 0x70

void BSP_SetLed( void )
{
    GPIO_PinOutClear(LED_PORT, LED_PIN);
}
    6a8e:	4770      	bx	lr
    6a90:	4003e000 	.word	0x4003e000

00006a94 <BSP_ClrLed>:
  GPIO->P_SET[port].DOUT = 1 << pin;
    6a94:	4b01      	ldr	r3, [pc, #4]	; (6a9c <BSP_ClrLed+0x8>)
    6a96:	2201      	movs	r2, #1
    6a98:	671a      	str	r2, [r3, #112]	; 0x70

void BSP_ClrLed( void )
{
    GPIO_PinOutSet(LED_PORT, LED_PIN);
}
    6a9a:	4770      	bx	lr
    6a9c:	4003d000 	.word	0x4003d000

00006aa0 <RAIL_Init>:
    6aa0:	b537      	push	{r0, r1, r2, r4, r5, lr}
    6aa2:	4604      	mov	r4, r0
    6aa4:	9101      	str	r1, [sp, #4]
    6aa6:	b178      	cbz	r0, 6ac8 <RAIL_Init+0x28>
    6aa8:	4d0a      	ldr	r5, [pc, #40]	; (6ad4 <RAIL_Init+0x34>)
    6aaa:	782b      	ldrb	r3, [r5, #0]
    6aac:	b97b      	cbnz	r3, 6ace <RAIL_Init+0x2e>
    6aae:	4b0a      	ldr	r3, [pc, #40]	; (6ad8 <RAIL_Init+0x38>)
    6ab0:	6018      	str	r0, [r3, #0]
    6ab2:	f000 f84b 	bl	6b4c <RAILINT_c64aa2902ddc8ebf4f72e7399c171680>
    6ab6:	4620      	mov	r0, r4
    6ab8:	9901      	ldr	r1, [sp, #4]
    6aba:	f000 f838 	bl	6b2e <RAILINT_7e61d0565567ab0020244c3cf3f002a7>
    6abe:	1e03      	subs	r3, r0, #0
    6ac0:	bf18      	it	ne
    6ac2:	2301      	movne	r3, #1
    6ac4:	4604      	mov	r4, r0
    6ac6:	702b      	strb	r3, [r5, #0]
    6ac8:	4620      	mov	r0, r4
    6aca:	b003      	add	sp, #12
    6acc:	bd30      	pop	{r4, r5, pc}
    6ace:	2400      	movs	r4, #0
    6ad0:	e7fa      	b.n	6ac8 <RAIL_Init+0x28>
    6ad2:	bf00      	nop
    6ad4:	20000aac 	.word	0x20000aac
    6ad8:	20000aa8 	.word	0x20000aa8

00006adc <RAIL_StartRx>:
    6adc:	b510      	push	{r4, lr}
    6ade:	b100      	cbz	r0, 6ae2 <RAIL_StartRx+0x6>
    6ae0:	300c      	adds	r0, #12
    6ae2:	f000 fa9a 	bl	701a <RAILINT_7a1b83c18f57d5dc8774009ae81ab08e>
    6ae6:	4604      	mov	r4, r0
    6ae8:	b920      	cbnz	r0, 6af4 <RAIL_StartRx+0x18>
    6aea:	2101      	movs	r1, #1
    6aec:	4b02      	ldr	r3, [pc, #8]	; (6af8 <RAIL_StartRx+0x1c>)
    6aee:	4608      	mov	r0, r1
    6af0:	685b      	ldr	r3, [r3, #4]
    6af2:	4798      	blx	r3
    6af4:	4620      	mov	r0, r4
    6af6:	bd10      	pop	{r4, pc}
    6af8:	200001d0 	.word	0x200001d0

00006afc <RAILINT_db926409e556c7e73d15fec818f5b1d6>:
    6afc:	4770      	bx	lr
	...

00006b00 <RAILINT_ba62dd308ed15b1ffe7bd5b874af6d40>:
    6b00:	1e43      	subs	r3, r0, #1
    6b02:	3303      	adds	r3, #3
    6b04:	d806      	bhi.n	6b14 <RAILINT_ba62dd308ed15b1ffe7bd5b874af6d40+0x14>
    6b06:	4b04      	ldr	r3, [pc, #16]	; (6b18 <RAILINT_ba62dd308ed15b1ffe7bd5b874af6d40+0x18>)
    6b08:	4298      	cmp	r0, r3
    6b0a:	bf28      	it	cs
    6b0c:	4618      	movcs	r0, r3
    6b0e:	2864      	cmp	r0, #100	; 0x64
    6b10:	bf38      	it	cc
    6b12:	2064      	movcc	r0, #100	; 0x64
    6b14:	4770      	bx	lr
    6b16:	bf00      	nop
    6b18:	000f4240 	.word	0x000f4240

00006b1c <RAILINT_a690160bdcee277d32012935fb6dead8>:
    6b1c:	1e43      	subs	r3, r0, #1
    6b1e:	2b01      	cmp	r3, #1
    6b20:	d903      	bls.n	6b2a <RAILINT_a690160bdcee277d32012935fb6dead8+0xe>
    6b22:	1f03      	subs	r3, r0, #4
    6b24:	4258      	negs	r0, r3
    6b26:	4158      	adcs	r0, r3
    6b28:	4770      	bx	lr
    6b2a:	2001      	movs	r0, #1
    6b2c:	4770      	bx	lr

00006b2e <RAILINT_7e61d0565567ab0020244c3cf3f002a7>:
    6b2e:	b538      	push	{r3, r4, r5, lr}
    6b30:	4604      	mov	r4, r0
    6b32:	460d      	mov	r5, r1
    6b34:	2100      	movs	r1, #0
    6b36:	f000 fa7d 	bl	7034 <RAILCb_ConfigFrameTypeLength>
    6b3a:	4629      	mov	r1, r5
    6b3c:	4620      	mov	r0, r4
    6b3e:	f001 fb73 	bl	8228 <RAILINT_f70cad743ef3526a2ef7ac090e6c385a>
    6b42:	2800      	cmp	r0, #0
    6b44:	bf0c      	ite	eq
    6b46:	4620      	moveq	r0, r4
    6b48:	2000      	movne	r0, #0
    6b4a:	bd38      	pop	{r3, r4, r5, pc}

00006b4c <RAILINT_c64aa2902ddc8ebf4f72e7399c171680>:
    6b4c:	b510      	push	{r4, lr}
    6b4e:	4604      	mov	r4, r0
    6b50:	f000 fdc6 	bl	76e0 <RAILINT_ee8e30d6c3ef95b8e8dca03da7401c07>
    6b54:	b144      	cbz	r4, 6b68 <RAILINT_c64aa2902ddc8ebf4f72e7399c171680+0x1c>
    6b56:	4a05      	ldr	r2, [pc, #20]	; (6b6c <RAILINT_c64aa2902ddc8ebf4f72e7399c171680+0x20>)
    6b58:	f8d4 3088 	ldr.w	r3, [r4, #136]	; 0x88
    6b5c:	2b00      	cmp	r3, #0
    6b5e:	bf08      	it	eq
    6b60:	4613      	moveq	r3, r2
    6b62:	4a03      	ldr	r2, [pc, #12]	; (6b70 <RAILINT_c64aa2902ddc8ebf4f72e7399c171680+0x24>)
    6b64:	6013      	str	r3, [r2, #0]
    6b66:	bd10      	pop	{r4, pc}
    6b68:	6fe3      	ldr	r3, [r4, #124]	; 0x7c
    6b6a:	deff      	udf	#255	; 0xff
    6b6c:	00006afd 	.word	0x00006afd
    6b70:	200001c8 	.word	0x200001c8

00006b74 <RAILINT_499a6fa84e713dbcc15223a1179c1579>:
    6b74:	b510      	push	{r4, lr}
    6b76:	460c      	mov	r4, r1
    6b78:	f000 fe1e 	bl	77b8 <RAILINT_99f0e717b1ae5f07aeace88464176fa9>
    6b7c:	b11c      	cbz	r4, 6b86 <RAILINT_499a6fa84e713dbcc15223a1179c1579+0x12>
    6b7e:	f000 fe71 	bl	7864 <RAILINT_a4b57b9485a34098ab089f4c182a3c25>
    6b82:	2801      	cmp	r0, #1
    6b84:	d1fb      	bne.n	6b7e <RAILINT_499a6fa84e713dbcc15223a1179c1579+0xa>
    6b86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    6b8a:	4b02      	ldr	r3, [pc, #8]	; (6b94 <RAILINT_499a6fa84e713dbcc15223a1179c1579+0x20>)
    6b8c:	2100      	movs	r1, #0
    6b8e:	2003      	movs	r0, #3
    6b90:	685b      	ldr	r3, [r3, #4]
    6b92:	4718      	bx	r3
    6b94:	200001d0 	.word	0x200001d0

00006b98 <RAILCb_CalcSymbolRate>:
    6b98:	b100      	cbz	r0, 6b9c <RAILCb_CalcSymbolRate+0x4>
    6b9a:	300c      	adds	r0, #12
    6b9c:	f000 bf1c 	b.w	79d8 <RAILINT_7513d8eab2e711e2387c527c09895f59>

00006ba0 <RAILCb_CalcBitRate>:
    6ba0:	b100      	cbz	r0, 6ba4 <RAILCb_CalcBitRate+0x4>
    6ba2:	300c      	adds	r0, #12
    6ba4:	f000 bf2e 	b.w	7a04 <RAILINT_fd62944279593a99af34baf33f1f64a3>

00006ba8 <RAIL_SetStateTiming>:
    6ba8:	b508      	push	{r3, lr}
    6baa:	4602      	mov	r2, r0
    6bac:	6808      	ldr	r0, [r1, #0]
    6bae:	f7ff ffa7 	bl	6b00 <RAILINT_ba62dd308ed15b1ffe7bd5b874af6d40>
    6bb2:	6008      	str	r0, [r1, #0]
    6bb4:	6848      	ldr	r0, [r1, #4]
    6bb6:	f7ff ffa3 	bl	6b00 <RAILINT_ba62dd308ed15b1ffe7bd5b874af6d40>
    6bba:	6048      	str	r0, [r1, #4]
    6bbc:	6888      	ldr	r0, [r1, #8]
    6bbe:	f7ff ff9f 	bl	6b00 <RAILINT_ba62dd308ed15b1ffe7bd5b874af6d40>
    6bc2:	6088      	str	r0, [r1, #8]
    6bc4:	68c8      	ldr	r0, [r1, #12]
    6bc6:	f7ff ff9b 	bl	6b00 <RAILINT_ba62dd308ed15b1ffe7bd5b874af6d40>
    6bca:	690b      	ldr	r3, [r1, #16]
    6bcc:	60c8      	str	r0, [r1, #12]
    6bce:	1c58      	adds	r0, r3, #1
    6bd0:	d003      	beq.n	6bda <RAIL_SetStateTiming+0x32>
    6bd2:	480c      	ldr	r0, [pc, #48]	; (6c04 <RAIL_SetStateTiming+0x5c>)
    6bd4:	4283      	cmp	r3, r0
    6bd6:	bf28      	it	cs
    6bd8:	4603      	movcs	r3, r0
    6bda:	610b      	str	r3, [r1, #16]
    6bdc:	694b      	ldr	r3, [r1, #20]
    6bde:	1c58      	adds	r0, r3, #1
    6be0:	d003      	beq.n	6bea <RAIL_SetStateTiming+0x42>
    6be2:	4808      	ldr	r0, [pc, #32]	; (6c04 <RAIL_SetStateTiming+0x5c>)
    6be4:	4283      	cmp	r3, r0
    6be6:	bf28      	it	cs
    6be8:	4603      	movcs	r3, r0
    6bea:	6988      	ldr	r0, [r1, #24]
    6bec:	614b      	str	r3, [r1, #20]
    6bee:	f7ff ff87 	bl	6b00 <RAILINT_ba62dd308ed15b1ffe7bd5b874af6d40>
    6bf2:	6188      	str	r0, [r1, #24]
    6bf4:	b102      	cbz	r2, 6bf8 <RAIL_SetStateTiming+0x50>
    6bf6:	320c      	adds	r2, #12
    6bf8:	4610      	mov	r0, r2
    6bfa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    6bfe:	f001 bbaf 	b.w	8360 <RAILINT_232a85da35fb8aa0cd28c39542df9730>
    6c02:	bf00      	nop
    6c04:	000f4240 	.word	0x000f4240

00006c08 <RAILINT_a414401b72e85e008bc59287e035ef41>:
    6c08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6c0c:	6f43      	ldr	r3, [r0, #116]	; 0x74
    6c0e:	4680      	mov	r8, r0
    6c10:	460d      	mov	r5, r1
    6c12:	b083      	sub	sp, #12
    6c14:	b113      	cbz	r3, 6c1c <RAILINT_a414401b72e85e008bc59287e035ef41+0x14>
    6c16:	8903      	ldrh	r3, [r0, #8]
    6c18:	428b      	cmp	r3, r1
    6c1a:	d076      	beq.n	6d0a <RAILINT_a414401b72e85e008bc59287e035ef41+0x102>
    6c1c:	f8d8 7070 	ldr.w	r7, [r8, #112]	; 0x70
    6c20:	2f00      	cmp	r7, #0
    6c22:	d044      	beq.n	6cae <RAILINT_a414401b72e85e008bc59287e035ef41+0xa6>
    6c24:	68bb      	ldr	r3, [r7, #8]
    6c26:	2b00      	cmp	r3, #0
    6c28:	d041      	beq.n	6cae <RAILINT_a414401b72e85e008bc59287e035ef41+0xa6>
    6c2a:	68f9      	ldr	r1, [r7, #12]
    6c2c:	2900      	cmp	r1, #0
    6c2e:	d03e      	beq.n	6cae <RAILINT_a414401b72e85e008bc59287e035ef41+0xa6>
    6c30:	f8d8 2084 	ldr.w	r2, [r8, #132]	; 0x84
    6c34:	9201      	str	r2, [sp, #4]
    6c36:	2a00      	cmp	r2, #0
    6c38:	d03d      	beq.n	6cb6 <RAILINT_a414401b72e85e008bc59287e035ef41+0xae>
    6c3a:	f04f 0900 	mov.w	r9, #0
    6c3e:	f1a8 0b0c 	sub.w	fp, r8, #12
    6c42:	464c      	mov	r4, r9
    6c44:	464e      	mov	r6, r9
    6c46:	e000      	b.n	6c4a <RAILINT_a414401b72e85e008bc59287e035ef41+0x42>
    6c48:	68bb      	ldr	r3, [r7, #8]
    6c4a:	ebc4 02c4 	rsb	r2, r4, r4, lsl #3
    6c4e:	eb03 0a82 	add.w	sl, r3, r2, lsl #2
    6c52:	f8ba 200e 	ldrh.w	r2, [sl, #14]
    6c56:	3401      	adds	r4, #1
    6c58:	42aa      	cmp	r2, r5
    6c5a:	d815      	bhi.n	6c88 <RAILINT_a414401b72e85e008bc59287e035ef41+0x80>
    6c5c:	f8ba 2010 	ldrh.w	r2, [sl, #16]
    6c60:	42aa      	cmp	r2, r5
    6c62:	d311      	bcc.n	6c88 <RAILINT_a414401b72e85e008bc59287e035ef41+0x80>
    6c64:	f9ba 2012 	ldrsh.w	r2, [sl, #18]
    6c68:	f9b8 1132 	ldrsh.w	r1, [r8, #306]	; 0x132
    6c6c:	4291      	cmp	r1, r2
    6c6e:	dd54      	ble.n	6d1a <RAILINT_a414401b72e85e008bc59287e035ef41+0x112>
    6c70:	4658      	mov	r0, fp
    6c72:	f898 10c0 	ldrb.w	r1, [r8, #192]	; 0xc0
    6c76:	f004 fce5 	bl	b644 <RAIL_ConvertDbmToRaw>
    6c7a:	f898 2005 	ldrb.w	r2, [r8, #5]
    6c7e:	4681      	mov	r9, r0
    6c80:	4282      	cmp	r2, r0
    6c82:	4656      	mov	r6, sl
    6c84:	d903      	bls.n	6c8e <RAILINT_a414401b72e85e008bc59287e035ef41+0x86>
    6c86:	68f9      	ldr	r1, [r7, #12]
    6c88:	428c      	cmp	r4, r1
    6c8a:	d3dd      	bcc.n	6c48 <RAILINT_a414401b72e85e008bc59287e035ef41+0x40>
    6c8c:	b356      	cbz	r6, 6ce4 <RAILINT_a414401b72e85e008bc59287e035ef41+0xdc>
    6c8e:	2300      	movs	r3, #0
    6c90:	4632      	mov	r2, r6
    6c92:	4640      	mov	r0, r8
    6c94:	4619      	mov	r1, r3
    6c96:	9c01      	ldr	r4, [sp, #4]
    6c98:	47a0      	blx	r4
    6c9a:	2000      	movs	r0, #0
    6c9c:	f8a8 5008 	strh.w	r5, [r8, #8]
    6ca0:	f8c8 6074 	str.w	r6, [r8, #116]	; 0x74
    6ca4:	f888 90c9 	strb.w	r9, [r8, #201]	; 0xc9
    6ca8:	b003      	add	sp, #12
    6caa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6cae:	2003      	movs	r0, #3
    6cb0:	b003      	add	sp, #12
    6cb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6cb6:	4691      	mov	r9, r2
    6cb8:	f647 7aff 	movw	sl, #32767	; 0x7fff
    6cbc:	4614      	mov	r4, r2
    6cbe:	f1a8 0b0c 	sub.w	fp, r8, #12
    6cc2:	ebc4 06c4 	rsb	r6, r4, r4, lsl #3
    6cc6:	eb03 0686 	add.w	r6, r3, r6, lsl #2
    6cca:	89f3      	ldrh	r3, [r6, #14]
    6ccc:	42ab      	cmp	r3, r5
    6cce:	d817      	bhi.n	6d00 <RAILINT_a414401b72e85e008bc59287e035ef41+0xf8>
    6cd0:	8a33      	ldrh	r3, [r6, #16]
    6cd2:	42ab      	cmp	r3, r5
    6cd4:	d314      	bcc.n	6d00 <RAILINT_a414401b72e85e008bc59287e035ef41+0xf8>
    6cd6:	f9b6 2012 	ldrsh.w	r2, [r6, #18]
    6cda:	4552      	cmp	r2, sl
    6cdc:	d104      	bne.n	6ce8 <RAILINT_a414401b72e85e008bc59287e035ef41+0xe0>
    6cde:	f04f 09ff 	mov.w	r9, #255	; 0xff
    6ce2:	e7da      	b.n	6c9a <RAILINT_a414401b72e85e008bc59287e035ef41+0x92>
    6ce4:	2001      	movs	r0, #1
    6ce6:	e7df      	b.n	6ca8 <RAILINT_a414401b72e85e008bc59287e035ef41+0xa0>
    6ce8:	4658      	mov	r0, fp
    6cea:	f898 10c0 	ldrb.w	r1, [r8, #192]	; 0xc0
    6cee:	f004 fca9 	bl	b644 <RAIL_ConvertDbmToRaw>
    6cf2:	f898 3005 	ldrb.w	r3, [r8, #5]
    6cf6:	4681      	mov	r9, r0
    6cf8:	4283      	cmp	r3, r0
    6cfa:	d9ce      	bls.n	6c9a <RAILINT_a414401b72e85e008bc59287e035ef41+0x92>
    6cfc:	4632      	mov	r2, r6
    6cfe:	68f9      	ldr	r1, [r7, #12]
    6d00:	3401      	adds	r4, #1
    6d02:	42a1      	cmp	r1, r4
    6d04:	d905      	bls.n	6d12 <RAILINT_a414401b72e85e008bc59287e035ef41+0x10a>
    6d06:	68bb      	ldr	r3, [r7, #8]
    6d08:	e7db      	b.n	6cc2 <RAILINT_a414401b72e85e008bc59287e035ef41+0xba>
    6d0a:	2000      	movs	r0, #0
    6d0c:	b003      	add	sp, #12
    6d0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6d12:	2a00      	cmp	r2, #0
    6d14:	d0e6      	beq.n	6ce4 <RAILINT_a414401b72e85e008bc59287e035ef41+0xdc>
    6d16:	4616      	mov	r6, r2
    6d18:	e7bf      	b.n	6c9a <RAILINT_a414401b72e85e008bc59287e035ef41+0x92>
    6d1a:	4656      	mov	r6, sl
    6d1c:	e7b7      	b.n	6c8e <RAILINT_a414401b72e85e008bc59287e035ef41+0x86>
    6d1e:	bf00      	nop

00006d20 <RAILINT_eff06dff73e0f32be1552c4011c2dec9>:
    6d20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6d24:	f8df b1b0 	ldr.w	fp, [pc, #432]	; 6ed8 <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x1b8>
    6d28:	b085      	sub	sp, #20
    6d2a:	4604      	mov	r4, r0
    6d2c:	4616      	mov	r6, r2
    6d2e:	461f      	mov	r7, r3
    6d30:	9100      	str	r1, [sp, #0]
    6d32:	f001 fb8d 	bl	8450 <RAILINT_3e587e95c937431090ed1e304e004f0f>
    6d36:	f8bb 5000 	ldrh.w	r5, [fp]
    6d3a:	f001 fba7 	bl	848c <RAILINT_2224e76641c2cf7155997d9bff12d8b8>
    6d3e:	2800      	cmp	r0, #0
    6d40:	d17c      	bne.n	6e3c <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x11c>
    6d42:	f8df 8198 	ldr.w	r8, [pc, #408]	; 6edc <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x1bc>
    6d46:	6f63      	ldr	r3, [r4, #116]	; 0x74
    6d48:	f8d8 2000 	ldr.w	r2, [r8]
    6d4c:	4293      	cmp	r3, r2
    6d4e:	d06a      	beq.n	6e26 <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x106>
    6d50:	f000 fd88 	bl	7864 <RAILINT_a4b57b9485a34098ab089f4c182a3c25>
    6d54:	2801      	cmp	r0, #1
    6d56:	d14f      	bne.n	6df8 <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0xd8>
    6d58:	f8df a184 	ldr.w	sl, [pc, #388]	; 6ee0 <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x1c0>
    6d5c:	f8da 3000 	ldr.w	r3, [sl]
    6d60:	2b00      	cmp	r3, #0
    6d62:	d05b      	beq.n	6e1c <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0xfc>
    6d64:	6f22      	ldr	r2, [r4, #112]	; 0x70
    6d66:	4293      	cmp	r3, r2
    6d68:	d070      	beq.n	6e4c <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x12c>
    6d6a:	f8d4 c074 	ldr.w	ip, [r4, #116]	; 0x74
    6d6e:	6818      	ldr	r0, [r3, #0]
    6d70:	6811      	ldr	r1, [r2, #0]
    6d72:	b110      	cbz	r0, 6d7a <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x5a>
    6d74:	4288      	cmp	r0, r1
    6d76:	f000 8083 	beq.w	6e80 <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x160>
    6d7a:	f8dc 2000 	ldr.w	r2, [ip]
    6d7e:	4620      	mov	r0, r4
    6d80:	f001 f9cd 	bl	811e <RAILINT_ed7cbf63d67a6dc102f980914a3e8a21>
    6d84:	2300      	movs	r3, #0
    6d86:	2601      	movs	r6, #1
    6d88:	4605      	mov	r5, r0
    6d8a:	9301      	str	r3, [sp, #4]
    6d8c:	f8d4 9084 	ldr.w	r9, [r4, #132]	; 0x84
    6d90:	f88d 700f 	strb.w	r7, [sp, #15]
    6d94:	f1b9 0f00 	cmp.w	r9, #0
    6d98:	d067      	beq.n	6e6a <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x14a>
    6d9a:	2200      	movs	r2, #0
    6d9c:	4620      	mov	r0, r4
    6d9e:	4611      	mov	r1, r2
    6da0:	f10d 030f 	add.w	r3, sp, #15
    6da4:	47c8      	blx	r9
    6da6:	b985      	cbnz	r5, 6dca <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0xaa>
    6da8:	6f23      	ldr	r3, [r4, #112]	; 0x70
    6daa:	f8ca 3000 	str.w	r3, [sl]
    6dae:	6f63      	ldr	r3, [r4, #116]	; 0x74
    6db0:	f8c8 3000 	str.w	r3, [r8]
    6db4:	9b01      	ldr	r3, [sp, #4]
    6db6:	b90b      	cbnz	r3, 6dbc <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x9c>
    6db8:	2e00      	cmp	r6, #0
    6dba:	d03a      	beq.n	6e32 <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x112>
    6dbc:	9b00      	ldr	r3, [sp, #0]
    6dbe:	4620      	mov	r0, r4
    6dc0:	f8cb 3000 	str.w	r3, [fp]
    6dc4:	f000 fef8 	bl	7bb8 <RAILINT_b693f7d424389daf06cac15e5c7b8047>
    6dc8:	4605      	mov	r5, r0
    6dca:	b18e      	cbz	r6, 6df0 <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0xd0>
    6dcc:	fab5 f085 	clz	r0, r5
    6dd0:	f240 22a3 	movw	r2, #675	; 0x2a3
    6dd4:	2133      	movs	r1, #51	; 0x33
    6dd6:	0940      	lsrs	r0, r0, #5
    6dd8:	f000 f982 	bl	70e0 <RAILINT_205167ae842e22724c3f35c6430eeddb>
    6ddc:	4639      	mov	r1, r7
    6dde:	4620      	mov	r0, r4
    6de0:	f001 f9aa 	bl	8138 <RAILINT_44f844fe44efb07ef80df95a956dc879>
    6de4:	4b3a      	ldr	r3, [pc, #232]	; (6ed0 <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x1b0>)
    6de6:	6f61      	ldr	r1, [r4, #116]	; 0x74
    6de8:	681b      	ldr	r3, [r3, #0]
    6dea:	f1a4 000c 	sub.w	r0, r4, #12
    6dee:	4798      	blx	r3
    6df0:	4628      	mov	r0, r5
    6df2:	b005      	add	sp, #20
    6df4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6df8:	2001      	movs	r0, #1
    6dfa:	f000 fcdd 	bl	77b8 <RAILINT_99f0e717b1ae5f07aeace88464176fa9>
    6dfe:	f000 fd31 	bl	7864 <RAILINT_a4b57b9485a34098ab089f4c182a3c25>
    6e02:	2801      	cmp	r0, #1
    6e04:	d1fb      	bne.n	6dfe <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0xde>
    6e06:	4b33      	ldr	r3, [pc, #204]	; (6ed4 <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x1b4>)
    6e08:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 6ee0 <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x1c0>
    6e0c:	685b      	ldr	r3, [r3, #4]
    6e0e:	2100      	movs	r1, #0
    6e10:	2003      	movs	r0, #3
    6e12:	4798      	blx	r3
    6e14:	f8da 3000 	ldr.w	r3, [sl]
    6e18:	2b00      	cmp	r3, #0
    6e1a:	d1a3      	bne.n	6d64 <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x44>
    6e1c:	6f23      	ldr	r3, [r4, #112]	; 0x70
    6e1e:	f8d4 c074 	ldr.w	ip, [r4, #116]	; 0x74
    6e22:	6819      	ldr	r1, [r3, #0]
    6e24:	e7a9      	b.n	6d7a <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x5a>
    6e26:	2b00      	cmp	r3, #0
    6e28:	d092      	beq.n	6d50 <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x30>
    6e2a:	9b00      	ldr	r3, [sp, #0]
    6e2c:	429d      	cmp	r5, r3
    6e2e:	d18f      	bne.n	6d50 <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x30>
    6e30:	bb87      	cbnz	r7, 6e94 <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x174>
    6e32:	2500      	movs	r5, #0
    6e34:	4628      	mov	r0, r5
    6e36:	b005      	add	sp, #20
    6e38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6e3c:	2300      	movs	r3, #0
    6e3e:	f8df 809c 	ldr.w	r8, [pc, #156]	; 6edc <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x1bc>
    6e42:	f8c8 3000 	str.w	r3, [r8]
    6e46:	f001 fb19 	bl	847c <RAILINT_67b648a3a6e52348d55fcd9139d9f7aa>
    6e4a:	e77c      	b.n	6d46 <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x26>
    6e4c:	f8d8 1000 	ldr.w	r1, [r8]
    6e50:	f8d4 c074 	ldr.w	ip, [r4, #116]	; 0x74
    6e54:	2900      	cmp	r1, #0
    6e56:	d08a      	beq.n	6d6e <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x4e>
    6e58:	4561      	cmp	r1, ip
    6e5a:	d188      	bne.n	6d6e <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x4e>
    6e5c:	9b00      	ldr	r3, [sp, #0]
    6e5e:	1aeb      	subs	r3, r5, r3
    6e60:	bf18      	it	ne
    6e62:	2301      	movne	r3, #1
    6e64:	2500      	movs	r5, #0
    6e66:	9301      	str	r3, [sp, #4]
    6e68:	e790      	b.n	6d8c <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x6c>
    6e6a:	7961      	ldrb	r1, [r4, #5]
    6e6c:	f894 30c9 	ldrb.w	r3, [r4, #201]	; 0xc9
    6e70:	463a      	mov	r2, r7
    6e72:	4299      	cmp	r1, r3
    6e74:	bf28      	it	cs
    6e76:	4619      	movcs	r1, r3
    6e78:	4620      	mov	r0, r4
    6e7a:	f000 fe77 	bl	7b6c <RAILINT_cd62b828417e3475c6b58e9a311685cc>
    6e7e:	e792      	b.n	6da6 <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x86>
    6e80:	f8d8 1000 	ldr.w	r1, [r8]
    6e84:	f8dc 2000 	ldr.w	r2, [ip]
    6e88:	b111      	cbz	r1, 6e90 <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x170>
    6e8a:	6809      	ldr	r1, [r1, #0]
    6e8c:	4291      	cmp	r1, r2
    6e8e:	d010      	beq.n	6eb2 <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x192>
    6e90:	6859      	ldr	r1, [r3, #4]
    6e92:	e774      	b.n	6d7e <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x5e>
    6e94:	2e00      	cmp	r6, #0
    6e96:	d0cc      	beq.n	6e32 <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x112>
    6e98:	2201      	movs	r2, #1
    6e9a:	f8d4 5084 	ldr.w	r5, [r4, #132]	; 0x84
    6e9e:	f88d 200f 	strb.w	r2, [sp, #15]
    6ea2:	b15d      	cbz	r5, 6ebc <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x19c>
    6ea4:	2200      	movs	r2, #0
    6ea6:	4620      	mov	r0, r4
    6ea8:	4611      	mov	r1, r2
    6eaa:	f10d 030f 	add.w	r3, sp, #15
    6eae:	47a8      	blx	r5
    6eb0:	e7bf      	b.n	6e32 <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x112>
    6eb2:	2300      	movs	r3, #0
    6eb4:	2601      	movs	r6, #1
    6eb6:	461d      	mov	r5, r3
    6eb8:	9301      	str	r3, [sp, #4]
    6eba:	e767      	b.n	6d8c <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x6c>
    6ebc:	7961      	ldrb	r1, [r4, #5]
    6ebe:	f894 30c9 	ldrb.w	r3, [r4, #201]	; 0xc9
    6ec2:	4620      	mov	r0, r4
    6ec4:	4299      	cmp	r1, r3
    6ec6:	bf28      	it	cs
    6ec8:	4619      	movcs	r1, r3
    6eca:	f000 fe4f 	bl	7b6c <RAILINT_cd62b828417e3475c6b58e9a311685cc>
    6ece:	e7b0      	b.n	6e32 <RAILINT_eff06dff73e0f32be1552c4011c2dec9+0x112>
    6ed0:	200001c8 	.word	0x200001c8
    6ed4:	200001d0 	.word	0x200001d0
    6ed8:	20000ab0 	.word	0x20000ab0
    6edc:	20000ab8 	.word	0x20000ab8
    6ee0:	20000ab4 	.word	0x20000ab4

00006ee4 <RAILINT_f6dbb0a8d6338735e61b94958eb4964b>:
    6ee4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    6ee6:	460e      	mov	r6, r1
    6ee8:	4605      	mov	r5, r0
    6eea:	f7ff f8cf 	bl	608c <CORE_EnterCritical>
    6eee:	4631      	mov	r1, r6
    6ef0:	4607      	mov	r7, r0
    6ef2:	4628      	mov	r0, r5
    6ef4:	f7ff fe88 	bl	6c08 <RAILINT_a414401b72e85e008bc59287e035ef41>
    6ef8:	4604      	mov	r4, r0
    6efa:	b120      	cbz	r0, 6f06 <RAILINT_f6dbb0a8d6338735e61b94958eb4964b+0x22>
    6efc:	4638      	mov	r0, r7
    6efe:	f7ff f8c9 	bl	6094 <CORE_ExitCritical>
    6f02:	4620      	mov	r0, r4
    6f04:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    6f06:	4603      	mov	r3, r0
    6f08:	4602      	mov	r2, r0
    6f0a:	4631      	mov	r1, r6
    6f0c:	4628      	mov	r0, r5
    6f0e:	f7ff ff07 	bl	6d20 <RAILINT_eff06dff73e0f32be1552c4011c2dec9>
    6f12:	4604      	mov	r4, r0
    6f14:	4638      	mov	r0, r7
    6f16:	f7ff f8bd 	bl	6094 <CORE_ExitCritical>
    6f1a:	4620      	mov	r0, r4
    6f1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    6f1e:	bf00      	nop

00006f20 <RAILINT_f0f851116f368bc625e2a9fc0cccaa69>:
    6f20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    6f22:	4606      	mov	r6, r0
    6f24:	460c      	mov	r4, r1
    6f26:	b359      	cbz	r1, 6f80 <RAILINT_f0f851116f368bc625e2a9fc0cccaa69+0x60>
    6f28:	680b      	ldr	r3, [r1, #0]
    6f2a:	b143      	cbz	r3, 6f3e <RAILINT_f0f851116f368bc625e2a9fc0cccaa69+0x1e>
    6f2c:	681b      	ldr	r3, [r3, #0]
    6f2e:	3301      	adds	r3, #1
    6f30:	d026      	beq.n	6f80 <RAILINT_f0f851116f368bc625e2a9fc0cccaa69+0x60>
    6f32:	68cb      	ldr	r3, [r1, #12]
    6f34:	b11b      	cbz	r3, 6f3e <RAILINT_f0f851116f368bc625e2a9fc0cccaa69+0x1e>
    6f36:	688b      	ldr	r3, [r1, #8]
    6f38:	3b00      	subs	r3, #0
    6f3a:	bf18      	it	ne
    6f3c:	2301      	movne	r3, #1
    6f3e:	4618      	mov	r0, r3
    6f40:	2261      	movs	r2, #97	; 0x61
    6f42:	2141      	movs	r1, #65	; 0x41
    6f44:	f000 f8cc 	bl	70e0 <RAILINT_205167ae842e22724c3f35c6430eeddb>
    6f48:	4620      	mov	r0, r4
    6f4a:	f001 ff7d 	bl	8e48 <RAILINT_37dcaf6b67da0fa3f13a9cf3e2b6a0ca>
    6f4e:	2300      	movs	r3, #0
    6f50:	f64f 72ff 	movw	r2, #65535	; 0xffff
    6f54:	f04f 0c1c 	mov.w	ip, #28
    6f58:	f886 30cc 	strb.w	r3, [r6, #204]	; 0xcc
    6f5c:	e9c6 431c 	strd	r4, r3, [r6, #112]	; 0x70
    6f60:	68e7      	ldr	r7, [r4, #12]
    6f62:	b2d8      	uxtb	r0, r3
    6f64:	4287      	cmp	r7, r0
    6f66:	d80d      	bhi.n	6f84 <RAILINT_f0f851116f368bc625e2a9fc0cccaa69+0x64>
    6f68:	4615      	mov	r5, r2
    6f6a:	2300      	movs	r3, #0
    6f6c:	4a0b      	ldr	r2, [pc, #44]	; (6f9c <RAILINT_f0f851116f368bc625e2a9fc0cccaa69+0x7c>)
    6f6e:	4629      	mov	r1, r5
    6f70:	6013      	str	r3, [r2, #0]
    6f72:	4a0b      	ldr	r2, [pc, #44]	; (6fa0 <RAILINT_f0f851116f368bc625e2a9fc0cccaa69+0x80>)
    6f74:	4630      	mov	r0, r6
    6f76:	6013      	str	r3, [r2, #0]
    6f78:	f7ff ffb4 	bl	6ee4 <RAILINT_f6dbb0a8d6338735e61b94958eb4964b>
    6f7c:	4628      	mov	r0, r5
    6f7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    6f80:	2300      	movs	r3, #0
    6f82:	e7dc      	b.n	6f3e <RAILINT_f0f851116f368bc625e2a9fc0cccaa69+0x1e>
    6f84:	68a1      	ldr	r1, [r4, #8]
    6f86:	fb0c 1100 	mla	r1, ip, r0, r1
    6f8a:	89cd      	ldrh	r5, [r1, #14]
    6f8c:	4295      	cmp	r5, r2
    6f8e:	d202      	bcs.n	6f96 <RAILINT_f0f851116f368bc625e2a9fc0cccaa69+0x76>
    6f90:	2d00      	cmp	r5, #0
    6f92:	d0ea      	beq.n	6f6a <RAILINT_f0f851116f368bc625e2a9fc0cccaa69+0x4a>
    6f94:	462a      	mov	r2, r5
    6f96:	3301      	adds	r3, #1
    6f98:	e7e3      	b.n	6f62 <RAILINT_f0f851116f368bc625e2a9fc0cccaa69+0x42>
    6f9a:	bf00      	nop
    6f9c:	20000ab4 	.word	0x20000ab4
    6fa0:	20000ab8 	.word	0x20000ab8

00006fa4 <RAILINT_992a3700fea39ab020ab6087e28c16df>:
    6fa4:	780a      	ldrb	r2, [r1, #0]
    6fa6:	b538      	push	{r3, r4, r5, lr}
    6fa8:	4605      	mov	r5, r0
    6faa:	4610      	mov	r0, r2
    6fac:	f7ff fdb6 	bl	6b1c <RAILINT_a690160bdcee277d32012935fb6dead8>
    6fb0:	b160      	cbz	r0, 6fcc <RAILINT_992a3700fea39ab020ab6087e28c16df+0x28>
    6fb2:	784c      	ldrb	r4, [r1, #1]
    6fb4:	4620      	mov	r0, r4
    6fb6:	f7ff fdb1 	bl	6b1c <RAILINT_a690160bdcee277d32012935fb6dead8>
    6fba:	b138      	cbz	r0, 6fcc <RAILINT_992a3700fea39ab020ab6087e28c16df+0x28>
    6fbc:	4322      	orrs	r2, r4
    6fbe:	0753      	lsls	r3, r2, #29
    6fc0:	d404      	bmi.n	6fcc <RAILINT_992a3700fea39ab020ab6087e28c16df+0x28>
    6fc2:	4628      	mov	r0, r5
    6fc4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    6fc8:	f000 bd52 	b.w	7a70 <RAILINT_c232eb9695d8ec51969199511f1ffdbc>
    6fcc:	2001      	movs	r0, #1
    6fce:	bd38      	pop	{r3, r4, r5, pc}

00006fd0 <RAILINT_9dae83c5a5b496ad1ace0cccba141a93>:
    6fd0:	b510      	push	{r4, lr}
    6fd2:	4604      	mov	r4, r0
    6fd4:	7808      	ldrb	r0, [r1, #0]
    6fd6:	f7ff fda1 	bl	6b1c <RAILINT_a690160bdcee277d32012935fb6dead8>
    6fda:	b158      	cbz	r0, 6ff4 <RAILINT_9dae83c5a5b496ad1ace0cccba141a93+0x24>
    6fdc:	784a      	ldrb	r2, [r1, #1]
    6fde:	4610      	mov	r0, r2
    6fe0:	f7ff fd9c 	bl	6b1c <RAILINT_a690160bdcee277d32012935fb6dead8>
    6fe4:	b130      	cbz	r0, 6ff4 <RAILINT_9dae83c5a5b496ad1ace0cccba141a93+0x24>
    6fe6:	2a04      	cmp	r2, #4
    6fe8:	d004      	beq.n	6ff4 <RAILINT_9dae83c5a5b496ad1ace0cccba141a93+0x24>
    6fea:	4620      	mov	r0, r4
    6fec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    6ff0:	f000 bd74 	b.w	7adc <RAILINT_7bc23e10f52e56d9fc3392da3f1c2215>
    6ff4:	2001      	movs	r0, #1
    6ff6:	bd10      	pop	{r4, pc}

00006ff8 <RAIL_ConfigEvents>:
    6ff8:	b430      	push	{r4, r5}
    6ffa:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
    6ffe:	b100      	cbz	r0, 7002 <RAIL_ConfigEvents+0xa>
    7000:	300c      	adds	r0, #12
    7002:	e9cd 4502 	strd	r4, r5, [sp, #8]
    7006:	bc30      	pop	{r4, r5}
    7008:	f000 bb28 	b.w	765c <RAILINT_2a4da4d01b26a7f90998f094ef0d126c>

0000700c <RAIL_ConfigAntenna>:
    700c:	4608      	mov	r0, r1
    700e:	f001 bb8d 	b.w	872c <RAILINT_d035493dc985426c706a16725f81a4c1>

00007012 <RAIL_ConfigRxOptions>:
    7012:	b100      	cbz	r0, 7016 <RAIL_ConfigRxOptions+0x4>
    7014:	300c      	adds	r0, #12
    7016:	f000 bcd5 	b.w	79c4 <RAILINT_c1ee6010aaf86bbd071153c63f21d1bb>

0000701a <RAILINT_7a1b83c18f57d5dc8774009ae81ab08e>:
    701a:	b538      	push	{r3, r4, r5, lr}
    701c:	4604      	mov	r4, r0
    701e:	460d      	mov	r5, r1
    7020:	f7ff ff60 	bl	6ee4 <RAILINT_f6dbb0a8d6338735e61b94958eb4964b>
    7024:	b928      	cbnz	r0, 7032 <RAILINT_7a1b83c18f57d5dc8774009ae81ab08e+0x18>
    7026:	4629      	mov	r1, r5
    7028:	4620      	mov	r0, r4
    702a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    702e:	f000 bc2f 	b.w	7890 <RAILINT_dadf1c52f26190429dcacf7151424c68>
    7032:	bd38      	pop	{r3, r4, r5, pc}

00007034 <RAILCb_ConfigFrameTypeLength>:
    7034:	f001 ba32 	b.w	849c <RAILINT_3bff6dfc0590d5c54bb0576abaeb38dd>

00007038 <RAILINT_45e98292b11a528e9c15f82e1aa2d629>:
    7038:	b538      	push	{r3, r4, r5, lr}
    703a:	4605      	mov	r5, r0
    703c:	460c      	mov	r4, r1
    703e:	f7ff f825 	bl	608c <CORE_EnterCritical>
    7042:	69a9      	ldr	r1, [r5, #24]
    7044:	696b      	ldr	r3, [r5, #20]
    7046:	400c      	ands	r4, r1
    7048:	4323      	orrs	r3, r4
    704a:	616b      	str	r3, [r5, #20]
    704c:	f7ff f822 	bl	6094 <CORE_ExitCritical>
    7050:	2000      	movs	r0, #0
    7052:	b90c      	cbnz	r4, 7058 <RAILINT_45e98292b11a528e9c15f82e1aa2d629+0x20>
    7054:	2100      	movs	r1, #0
    7056:	bd38      	pop	{r3, r4, r5, pc}
    7058:	f44f 7100 	mov.w	r1, #512	; 0x200
    705c:	e7fb      	b.n	7056 <RAILINT_45e98292b11a528e9c15f82e1aa2d629+0x1e>

0000705e <RAIL_SetTxFifo>:
    705e:	b100      	cbz	r0, 7062 <RAIL_SetTxFifo+0x4>
    7060:	300c      	adds	r0, #12
    7062:	f001 b823 	b.w	80ac <RAILINT_bfd5d2eb09d8a4a7871a5c604290c6e9>

00007066 <RAIL_SetRxFifo>:
    7066:	b100      	cbz	r0, 706a <RAIL_SetRxFifo+0x4>
    7068:	300c      	adds	r0, #12
    706a:	f001 b83b 	b.w	80e4 <RAILINT_705827075d9b54aaab0fdf12a337d2ed>
	...

00007070 <RAILCb_SetupRxFifo>:
    7070:	f44f 7300 	mov.w	r3, #512	; 0x200
    7074:	b507      	push	{r0, r1, r2, lr}
    7076:	490a      	ldr	r1, [pc, #40]	; (70a0 <RAILCb_SetupRxFifo+0x30>)
    7078:	f10d 0206 	add.w	r2, sp, #6
    707c:	f8ad 3006 	strh.w	r3, [sp, #6]
    7080:	f7ff fff1 	bl	7066 <RAIL_SetRxFifo>
    7084:	f8bd 3006 	ldrh.w	r3, [sp, #6]
    7088:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
    708c:	d105      	bne.n	709a <RAILCb_SetupRxFifo+0x2a>
    708e:	2802      	cmp	r0, #2
    7090:	bf08      	it	eq
    7092:	2000      	moveq	r0, #0
    7094:	b003      	add	sp, #12
    7096:	f85d fb04 	ldr.w	pc, [sp], #4
    709a:	2001      	movs	r0, #1
    709c:	e7fa      	b.n	7094 <RAILCb_SetupRxFifo+0x24>
    709e:	bf00      	nop
    70a0:	20000abc 	.word	0x20000abc

000070a4 <RAIL_GetRxPacketInfo>:
    70a4:	4608      	mov	r0, r1
    70a6:	4611      	mov	r1, r2
    70a8:	f000 bf0e 	b.w	7ec8 <RAILINT_052f8b2565813079f19c931bac48db51>

000070ac <RAIL_GetRxPacketDetails>:
    70ac:	b100      	cbz	r0, 70b0 <RAIL_GetRxPacketDetails+0x4>
    70ae:	300c      	adds	r0, #12
    70b0:	f000 bfda 	b.w	8068 <RAILINT_310967c2629da02413ba4e8adfa3e137>

000070b4 <RAIL_HoldRxPacket>:
    70b4:	f000 bfec 	b.w	8090 <RAILINT_d9e915d6d22bf4edc2f73d7c60daed1e>

000070b8 <RAIL_ReleaseRxPacket>:
    70b8:	4608      	mov	r0, r1
    70ba:	f000 bfeb 	b.w	8094 <RAILINT_f921a6fdde390c986016ab0c8bf49fae>

000070be <RAIL_PeekRxPacket>:
    70be:	4608      	mov	r0, r1
    70c0:	4611      	mov	r1, r2
    70c2:	461a      	mov	r2, r3
    70c4:	f8bd 3000 	ldrh.w	r3, [sp]
    70c8:	f000 bb16 	b.w	76f8 <RAILINT_3131b2227caece62bdb8e184ed31ce2e>

000070cc <RAILCb_AssertFailed>:
    70cc:	4b02      	ldr	r3, [pc, #8]	; (70d8 <RAILCb_AssertFailed+0xc>)
    70ce:	6019      	str	r1, [r3, #0]
    70d0:	4b02      	ldr	r3, [pc, #8]	; (70dc <RAILCb_AssertFailed+0x10>)
    70d2:	6018      	str	r0, [r3, #0]
    70d4:	e7fe      	b.n	70d4 <RAILCb_AssertFailed+0x8>
    70d6:	bf00      	nop
    70d8:	200001cc 	.word	0x200001cc
    70dc:	20000cc0 	.word	0x20000cc0

000070e0 <RAILINT_205167ae842e22724c3f35c6430eeddb>:
    70e0:	b508      	push	{r3, lr}
    70e2:	b950      	cbnz	r0, 70fa <RAILINT_205167ae842e22724c3f35c6430eeddb+0x1a>
    70e4:	4805      	ldr	r0, [pc, #20]	; (70fc <RAILINT_205167ae842e22724c3f35c6430eeddb+0x1c>)
    70e6:	4b06      	ldr	r3, [pc, #24]	; (7100 <RAILINT_205167ae842e22724c3f35c6430eeddb+0x20>)
    70e8:	6001      	str	r1, [r0, #0]
    70ea:	601a      	str	r2, [r3, #0]
    70ec:	4b05      	ldr	r3, [pc, #20]	; (7104 <RAILINT_205167ae842e22724c3f35c6430eeddb+0x24>)
    70ee:	681a      	ldr	r2, [r3, #0]
    70f0:	4b05      	ldr	r3, [pc, #20]	; (7108 <RAILINT_205167ae842e22724c3f35c6430eeddb+0x28>)
    70f2:	601a      	str	r2, [r3, #0]
    70f4:	6818      	ldr	r0, [r3, #0]
    70f6:	f7ff ffe9 	bl	70cc <RAILCb_AssertFailed>
    70fa:	bd08      	pop	{r3, pc}
    70fc:	200001cc 	.word	0x200001cc
    7100:	20000cbc 	.word	0x20000cbc
    7104:	20000aa8 	.word	0x20000aa8
    7108:	20000cc0 	.word	0x20000cc0

0000710c <RAILINT_32889d97e4b61459c43022425a5ba12c>:
    710c:	b100      	cbz	r0, 7110 <RAILINT_32889d97e4b61459c43022425a5ba12c+0x4>
    710e:	300c      	adds	r0, #12
    7110:	4708      	bx	r1
	...

00007114 <RAILINT_7ccc3c14971040883cbefc15a5cc66b4>:
    7114:	b5f0      	push	{r4, r5, r6, r7, lr}
    7116:	b08d      	sub	sp, #52	; 0x34
    7118:	ac03      	add	r4, sp, #12
    711a:	4605      	mov	r5, r0
    711c:	460b      	mov	r3, r1
    711e:	4627      	mov	r7, r4
    7120:	4a18      	ldr	r2, [pc, #96]	; (7184 <RAILINT_7ccc3c14971040883cbefc15a5cc66b4+0x70>)
    7122:	f102 0c20 	add.w	ip, r2, #32
    7126:	4626      	mov	r6, r4
    7128:	6810      	ldr	r0, [r2, #0]
    712a:	6851      	ldr	r1, [r2, #4]
    712c:	3208      	adds	r2, #8
    712e:	c603      	stmia	r6!, {r0, r1}
    7130:	4562      	cmp	r2, ip
    7132:	4634      	mov	r4, r6
    7134:	d1f7      	bne.n	7126 <RAILINT_7ccc3c14971040883cbefc15a5cc66b4+0x12>
    7136:	2b00      	cmp	r3, #0
    7138:	bf08      	it	eq
    713a:	463b      	moveq	r3, r7
    713c:	2700      	movs	r7, #0
    713e:	6810      	ldr	r0, [r2, #0]
    7140:	461c      	mov	r4, r3
    7142:	6030      	str	r0, [r6, #0]
    7144:	4638      	mov	r0, r7
    7146:	f103 060c 	add.w	r6, r3, #12
    714a:	b2fa      	uxtb	r2, r7
    714c:	b980      	cbnz	r0, 7170 <RAILINT_7ccc3c14971040883cbefc15a5cc66b4+0x5c>
    714e:	4628      	mov	r0, r5
    7150:	8821      	ldrh	r1, [r4, #0]
    7152:	9201      	str	r2, [sp, #4]
    7154:	f001 f9c6 	bl	84e4 <RAILINT_7f52347882ddbba7a077ea8579225490>
    7158:	b950      	cbnz	r0, 7170 <RAILINT_7ccc3c14971040883cbefc15a5cc66b4+0x5c>
    715a:	4628      	mov	r0, r5
    715c:	9a01      	ldr	r2, [sp, #4]
    715e:	88e1      	ldrh	r1, [r4, #6]
    7160:	f001 f9d4 	bl	850c <RAILINT_0bdeace83920f49d6521258171637f3c>
    7164:	b920      	cbnz	r0, 7170 <RAILINT_7ccc3c14971040883cbefc15a5cc66b4+0x5c>
    7166:	4631      	mov	r1, r6
    7168:	4628      	mov	r0, r5
    716a:	9a01      	ldr	r2, [sp, #4]
    716c:	f001 f9e3 	bl	8536 <RAILINT_3ec854c4301ae6ed04c0338b9dec6a8d>
    7170:	3701      	adds	r7, #1
    7172:	2f03      	cmp	r7, #3
    7174:	f106 0608 	add.w	r6, r6, #8
    7178:	f104 0402 	add.w	r4, r4, #2
    717c:	d1e5      	bne.n	714a <RAILINT_7ccc3c14971040883cbefc15a5cc66b4+0x36>
    717e:	b00d      	add	sp, #52	; 0x34
    7180:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7182:	bf00      	nop
    7184:	0000be38 	.word	0x0000be38

00007188 <RAIL_IEEE802154_Init>:
    7188:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    718c:	460d      	mov	r5, r1
    718e:	4680      	mov	r8, r0
    7190:	b08a      	sub	sp, #40	; 0x28
    7192:	b390      	cbz	r0, 71fa <RAIL_IEEE802154_Init+0x72>
    7194:	f100 070c 	add.w	r7, r0, #12
    7198:	f895 3028 	ldrb.w	r3, [r5, #40]	; 0x28
    719c:	f895 2029 	ldrb.w	r2, [r5, #41]	; 0x29
    71a0:	f895 102a 	ldrb.w	r1, [r5, #42]	; 0x2a
    71a4:	9300      	str	r3, [sp, #0]
    71a6:	4638      	mov	r0, r7
    71a8:	f895 302b 	ldrb.w	r3, [r5, #43]	; 0x2b
    71ac:	ac03      	add	r4, sp, #12
    71ae:	f105 060c 	add.w	r6, r5, #12
    71b2:	f001 fa01 	bl	85b8 <RAILINT_98bbf79a9d5372aef3bfc63b8029e5b5>
    71b6:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
    71b8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    71ba:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
    71be:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    71c2:	a903      	add	r1, sp, #12
    71c4:	4640      	mov	r0, r8
    71c6:	f7ff fcef 	bl	6ba8 <RAIL_SetStateTiming>
    71ca:	4638      	mov	r0, r7
    71cc:	1d29      	adds	r1, r5, #4
    71ce:	f004 faa3 	bl	b718 <RAILINT_78eaa84173e85419c123802d17d70cee>
    71d2:	4604      	mov	r4, r0
    71d4:	b948      	cbnz	r0, 71ea <RAIL_IEEE802154_Init+0x62>
    71d6:	4638      	mov	r0, r7
    71d8:	4909      	ldr	r1, [pc, #36]	; (7200 <RAIL_IEEE802154_Init+0x78>)
    71da:	f001 f87f 	bl	82dc <RAILINT_c141602218ed06e17bb09de10ef4b9a3>
    71de:	4604      	mov	r4, r0
    71e0:	b918      	cbnz	r0, 71ea <RAIL_IEEE802154_Init+0x62>
    71e2:	4638      	mov	r0, r7
    71e4:	f001 f9b6 	bl	8554 <RAILINT_bd523e50f8dd0476bd448bb4ab0a0bba>
    71e8:	4604      	mov	r4, r0
    71ea:	4638      	mov	r0, r7
    71ec:	6829      	ldr	r1, [r5, #0]
    71ee:	f7ff ff91 	bl	7114 <RAILINT_7ccc3c14971040883cbefc15a5cc66b4>
    71f2:	4620      	mov	r0, r4
    71f4:	b00a      	add	sp, #40	; 0x28
    71f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    71fa:	4607      	mov	r7, r0
    71fc:	e7cc      	b.n	7198 <RAIL_IEEE802154_Init+0x10>
    71fe:	bf00      	nop
    7200:	0000be5c 	.word	0x0000be5c

00007204 <RAIL_IEEE802154_Config2p4GHzRadio>:
    7204:	4901      	ldr	r1, [pc, #4]	; (720c <RAIL_IEEE802154_Config2p4GHzRadio+0x8>)
    7206:	f7ff bf81 	b.w	710c <RAILINT_32889d97e4b61459c43022425a5ba12c>
    720a:	bf00      	nop
    720c:	000084d9 	.word	0x000084d9

00007210 <RAIL_IEEE802154_SetPromiscuousMode>:
    7210:	b513      	push	{r0, r1, r4, lr}
    7212:	4604      	mov	r4, r0
    7214:	b100      	cbz	r0, 7218 <RAIL_IEEE802154_SetPromiscuousMode+0x8>
    7216:	340c      	adds	r4, #12
    7218:	4620      	mov	r0, r4
    721a:	9101      	str	r1, [sp, #4]
    721c:	f001 f958 	bl	84d0 <RAILINT_5cc919fc20dd52f2d4dcd0fd622a0329>
    7220:	b130      	cbz	r0, 7230 <RAIL_IEEE802154_SetPromiscuousMode+0x20>
    7222:	4620      	mov	r0, r4
    7224:	9901      	ldr	r1, [sp, #4]
    7226:	b002      	add	sp, #8
    7228:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    722c:	f001 b9ac 	b.w	8588 <RAILINT_c37fe6dda1b65bd8e07f247eebfb0d24>
    7230:	2002      	movs	r0, #2
    7232:	b002      	add	sp, #8
    7234:	bd10      	pop	{r4, pc}

00007236 <RAIL_IEEE802154_AcceptFrames>:
    7236:	b513      	push	{r0, r1, r4, lr}
    7238:	4604      	mov	r4, r0
    723a:	b100      	cbz	r0, 723e <RAIL_IEEE802154_AcceptFrames+0x8>
    723c:	340c      	adds	r4, #12
    723e:	4620      	mov	r0, r4
    7240:	9101      	str	r1, [sp, #4]
    7242:	f001 f945 	bl	84d0 <RAILINT_5cc919fc20dd52f2d4dcd0fd622a0329>
    7246:	b130      	cbz	r0, 7256 <RAIL_IEEE802154_AcceptFrames+0x20>
    7248:	4620      	mov	r0, r4
    724a:	9901      	ldr	r1, [sp, #4]
    724c:	b002      	add	sp, #8
    724e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    7252:	f001 b9a1 	b.w	8598 <RAILINT_05746359872f2c5331853a4d5044e337>
    7256:	2002      	movs	r0, #2
    7258:	b002      	add	sp, #8
    725a:	bd10      	pop	{r4, pc}

0000725c <RAILINT_a8ad4c6e1a6fd4bd419176ffe7e198ac>:
    725c:	2000      	movs	r0, #0
    725e:	4770      	bx	lr

00007260 <RAILINT_4520652711d56d79a92b925080040a23>:
    7260:	2000      	movs	r0, #0
    7262:	4770      	bx	lr

00007264 <RAILINT_07411be539f067663dfa5aa99baea238>:
    7264:	4b02      	ldr	r3, [pc, #8]	; (7270 <RAILINT_07411be539f067663dfa5aa99baea238+0xc>)
    7266:	68d8      	ldr	r0, [r3, #12]
    7268:	f3c0 6003 	ubfx	r0, r0, #24, #4
    726c:	4770      	bx	lr
    726e:	bf00      	nop
    7270:	a8020000 	.word	0xa8020000

00007274 <RAILINT_f0f279c05d6284199cc63667a48546c8>:
    7274:	4770      	bx	lr
	...

00007278 <RAILINT_57fa2c163b50cc6661e10e0e7662afb8>:
    7278:	1c43      	adds	r3, r0, #1
    727a:	d007      	beq.n	728c <RAILINT_57fa2c163b50cc6661e10e0e7662afb8+0x14>
    727c:	f06f 02ff 	mvn.w	r2, #255	; 0xff
    7280:	4b03      	ldr	r3, [pc, #12]	; (7290 <RAILINT_57fa2c163b50cc6661e10e0e7662afb8+0x18>)
    7282:	4010      	ands	r0, r2
    7284:	621a      	str	r2, [r3, #32]
    7286:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
    728a:	6218      	str	r0, [r3, #32]
    728c:	4770      	bx	lr
    728e:	bf00      	nop
    7290:	a800e000 	.word	0xa800e000

00007294 <RAILINT_3c9710db34f633d3b8fb008ca62c25bd>:
    7294:	69c2      	ldr	r2, [r0, #28]
    7296:	4b0e      	ldr	r3, [pc, #56]	; (72d0 <RAILINT_3c9710db34f633d3b8fb008ca62c25bd+0x3c>)
    7298:	f002 0260 	and.w	r2, r2, #96	; 0x60
    729c:	2a40      	cmp	r2, #64	; 0x40
    729e:	d011      	beq.n	72c4 <RAILINT_3c9710db34f633d3b8fb008ca62c25bd+0x30>
    72a0:	2a60      	cmp	r2, #96	; 0x60
    72a2:	d003      	beq.n	72ac <RAILINT_3c9710db34f633d3b8fb008ca62c25bd+0x18>
    72a4:	2a20      	cmp	r2, #32
    72a6:	d110      	bne.n	72ca <RAILINT_3c9710db34f633d3b8fb008ca62c25bd+0x36>
    72a8:	2201      	movs	r2, #1
    72aa:	e006      	b.n	72ba <RAILINT_3c9710db34f633d3b8fb008ca62c25bd+0x26>
    72ac:	b169      	cbz	r1, 72ca <RAILINT_3c9710db34f633d3b8fb008ca62c25bd+0x36>
    72ae:	680a      	ldr	r2, [r1, #0]
    72b0:	2a01      	cmp	r2, #1
    72b2:	d90a      	bls.n	72ca <RAILINT_3c9710db34f633d3b8fb008ca62c25bd+0x36>
    72b4:	694a      	ldr	r2, [r1, #20]
    72b6:	f042 0201 	orr.w	r2, r2, #1
    72ba:	63da      	str	r2, [r3, #60]	; 0x3c
    72bc:	2280      	movs	r2, #128	; 0x80
    72be:	4b05      	ldr	r3, [pc, #20]	; (72d4 <RAILINT_3c9710db34f633d3b8fb008ca62c25bd+0x40>)
    72c0:	611a      	str	r2, [r3, #16]
    72c2:	4770      	bx	lr
    72c4:	f240 1201 	movw	r2, #257	; 0x101
    72c8:	e7f7      	b.n	72ba <RAILINT_3c9710db34f633d3b8fb008ca62c25bd+0x26>
    72ca:	2200      	movs	r2, #0
    72cc:	e7f5      	b.n	72ba <RAILINT_3c9710db34f633d3b8fb008ca62c25bd+0x26>
    72ce:	bf00      	nop
    72d0:	b0001f00 	.word	0xb0001f00
    72d4:	a8020000 	.word	0xa8020000

000072d8 <RAILINT_d3f1a953c5ad458b47a16e4df761d2c8>:
    72d8:	b508      	push	{r3, lr}
    72da:	4a09      	ldr	r2, [pc, #36]	; (7300 <RAILINT_d3f1a953c5ad458b47a16e4df761d2c8+0x28>)
    72dc:	f7ff ffc2 	bl	7264 <RAILINT_07411be539f067663dfa5aa99baea238>
    72e0:	280b      	cmp	r0, #11
    72e2:	d006      	beq.n	72f2 <RAILINT_d3f1a953c5ad458b47a16e4df761d2c8+0x1a>
    72e4:	280c      	cmp	r0, #12
    72e6:	d009      	beq.n	72fc <RAILINT_d3f1a953c5ad458b47a16e4df761d2c8+0x24>
    72e8:	2809      	cmp	r0, #9
    72ea:	bf14      	ite	ne
    72ec:	2000      	movne	r0, #0
    72ee:	2002      	moveq	r0, #2
    72f0:	bd08      	pop	{r3, pc}
    72f2:	6f10      	ldr	r0, [r2, #112]	; 0x70
    72f4:	f410 3080 	ands.w	r0, r0, #65536	; 0x10000
    72f8:	d1f0      	bne.n	72dc <RAILINT_d3f1a953c5ad458b47a16e4df761d2c8+0x4>
    72fa:	e7f9      	b.n	72f0 <RAILINT_d3f1a953c5ad458b47a16e4df761d2c8+0x18>
    72fc:	2002      	movs	r0, #2
    72fe:	e7f7      	b.n	72f0 <RAILINT_d3f1a953c5ad458b47a16e4df761d2c8+0x18>
    7300:	a8020000 	.word	0xa8020000

00007304 <RAILINT_cd2294a9b77625e0ea5276bdf2a90514>:
    7304:	2101      	movs	r1, #1
    7306:	4b09      	ldr	r3, [pc, #36]	; (732c <RAILINT_cd2294a9b77625e0ea5276bdf2a90514+0x28>)
    7308:	f8d3 20ec 	ldr.w	r2, [r3, #236]	; 0xec
    730c:	6319      	str	r1, [r3, #48]	; 0x30
    730e:	0752      	lsls	r2, r2, #29
    7310:	f44f 5100 	mov.w	r1, #8192	; 0x2000
    7314:	bf48      	it	mi
    7316:	2204      	movmi	r2, #4
    7318:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
    731c:	62d9      	str	r1, [r3, #44]	; 0x2c
    731e:	bf44      	itt	mi
    7320:	f5a3 5380 	submi.w	r3, r3, #4096	; 0x1000
    7324:	f8c3 20ec 	strmi.w	r2, [r3, #236]	; 0xec
    7328:	4770      	bx	lr
    732a:	bf00      	nop
    732c:	44004000 	.word	0x44004000

00007330 <RAILINT_a06f36e75bf41143ad151f38401105ae>:
    7330:	b510      	push	{r4, lr}
    7332:	4604      	mov	r4, r0
    7334:	f8d0 20b4 	ldr.w	r2, [r0, #180]	; 0xb4
    7338:	4b0a      	ldr	r3, [pc, #40]	; (7364 <RAILINT_a06f36e75bf41143ad151f38401105ae+0x34>)
    733a:	f44f 6100 	mov.w	r1, #2048	; 0x800
    733e:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
    7342:	7802      	ldrb	r2, [r0, #0]
    7344:	0212      	lsls	r2, r2, #8
    7346:	f402 6200 	and.w	r2, r2, #2048	; 0x800
    734a:	f004 f909 	bl	b560 <RAILINT_fc431c63280fcec9c8f1f2616df249e6>
    734e:	7823      	ldrb	r3, [r4, #0]
    7350:	f013 0f08 	tst.w	r3, #8
    7354:	f44f 7300 	mov.w	r3, #512	; 0x200
    7358:	bf14      	ite	ne
    735a:	4a03      	ldrne	r2, [pc, #12]	; (7368 <RAILINT_a06f36e75bf41143ad151f38401105ae+0x38>)
    735c:	4a03      	ldreq	r2, [pc, #12]	; (736c <RAILINT_a06f36e75bf41143ad151f38401105ae+0x3c>)
    735e:	6713      	str	r3, [r2, #112]	; 0x70
    7360:	bd10      	pop	{r4, pc}
    7362:	bf00      	nop
    7364:	b0001e00 	.word	0xb0001e00
    7368:	a8021000 	.word	0xa8021000
    736c:	a8022000 	.word	0xa8022000

00007370 <RAILINT_14d09babf27325aeb090aac0c6f24436>:
    7370:	b537      	push	{r0, r1, r2, r4, r5, lr}
    7372:	460c      	mov	r4, r1
    7374:	4d17      	ldr	r5, [pc, #92]	; (73d4 <RAILINT_14d09babf27325aeb090aac0c6f24436+0x64>)
    7376:	b941      	cbnz	r1, 738a <RAILINT_14d09babf27325aeb090aac0c6f24436+0x1a>
    7378:	460a      	mov	r2, r1
    737a:	2107      	movs	r1, #7
    737c:	f004 f8f0 	bl	b560 <RAILINT_fc431c63280fcec9c8f1f2616df249e6>
    7380:	4b15      	ldr	r3, [pc, #84]	; (73d8 <RAILINT_14d09babf27325aeb090aac0c6f24436+0x68>)
    7382:	61ac      	str	r4, [r5, #24]
    7384:	605c      	str	r4, [r3, #4]
    7386:	b003      	add	sp, #12
    7388:	bd30      	pop	{r4, r5, pc}
    738a:	2207      	movs	r2, #7
    738c:	4611      	mov	r1, r2
    738e:	f004 f8e7 	bl	b560 <RAILINT_fc431c63280fcec9c8f1f2616df249e6>
    7392:	2207      	movs	r2, #7
    7394:	4b11      	ldr	r3, [pc, #68]	; (73dc <RAILINT_14d09babf27325aeb090aac0c6f24436+0x6c>)
    7396:	2101      	movs	r1, #1
    7398:	60da      	str	r2, [r3, #12]
    739a:	7923      	ldrb	r3, [r4, #4]
    739c:	a801      	add	r0, sp, #4
    739e:	762b      	strb	r3, [r5, #24]
    73a0:	7963      	ldrb	r3, [r4, #5]
    73a2:	9301      	str	r3, [sp, #4]
    73a4:	f004 f93b 	bl	b61e <RAILINT_b04ac2e87c7e86c14dc53c58ce128069>
    73a8:	9b01      	ldr	r3, [sp, #4]
    73aa:	b2c2      	uxtb	r2, r0
    73ac:	40d3      	lsrs	r3, r2
    73ae:	f000 000f 	and.w	r0, r0, #15
    73b2:	ea40 1003 	orr.w	r0, r0, r3, lsl #4
    73b6:	7668      	strb	r0, [r5, #25]
    73b8:	79a3      	ldrb	r3, [r4, #6]
    73ba:	4a09      	ldr	r2, [pc, #36]	; (73e0 <RAILINT_14d09babf27325aeb090aac0c6f24436+0x70>)
    73bc:	76ab      	strb	r3, [r5, #26]
    73be:	79e3      	ldrb	r3, [r4, #7]
    73c0:	76eb      	strb	r3, [r5, #27]
    73c2:	6823      	ldr	r3, [r4, #0]
    73c4:	61eb      	str	r3, [r5, #28]
    73c6:	7923      	ldrb	r3, [r4, #4]
    73c8:	3301      	adds	r3, #1
    73ca:	6213      	str	r3, [r2, #32]
    73cc:	f004 f926 	bl	b61c <RAILINT_dc675e4729ddc8fc4759ebbb1d4c3bce>
    73d0:	e7d9      	b.n	7386 <RAILINT_14d09babf27325aeb090aac0c6f24436+0x16>
    73d2:	bf00      	nop
    73d4:	b0001f00 	.word	0xb0001f00
    73d8:	b0001f18 	.word	0xb0001f18
    73dc:	a8006000 	.word	0xa8006000
    73e0:	a8004000 	.word	0xa8004000

000073e4 <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a>:
    73e4:	b510      	push	{r4, lr}
    73e6:	784b      	ldrb	r3, [r1, #1]
    73e8:	460c      	mov	r4, r1
    73ea:	2b00      	cmp	r3, #0
    73ec:	d13c      	bne.n	7468 <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a+0x84>
    73ee:	4a39      	ldr	r2, [pc, #228]	; (74d4 <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a+0xf0>)
    73f0:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    73f4:	f04f 5260 	mov.w	r2, #939524096	; 0x38000000
    73f8:	4b37      	ldr	r3, [pc, #220]	; (74d8 <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a+0xf4>)
    73fa:	621a      	str	r2, [r3, #32]
    73fc:	4b37      	ldr	r3, [pc, #220]	; (74dc <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a+0xf8>)
    73fe:	781b      	ldrb	r3, [r3, #0]
    7400:	b113      	cbz	r3, 7408 <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a+0x24>
    7402:	2206      	movs	r2, #6
    7404:	4b36      	ldr	r3, [pc, #216]	; (74e0 <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a+0xfc>)
    7406:	679a      	str	r2, [r3, #120]	; 0x78
    7408:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    740c:	4b35      	ldr	r3, [pc, #212]	; (74e4 <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a+0x100>)
    740e:	67da      	str	r2, [r3, #124]	; 0x7c
    7410:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
    7414:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    7416:	025b      	lsls	r3, r3, #9
    7418:	d408      	bmi.n	742c <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a+0x48>
    741a:	69c3      	ldr	r3, [r0, #28]
    741c:	f013 0f80 	tst.w	r3, #128	; 0x80
    7420:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
    7424:	bf14      	ite	ne
    7426:	4a30      	ldrne	r2, [pc, #192]	; (74e8 <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a+0x104>)
    7428:	4a2b      	ldreq	r2, [pc, #172]	; (74d8 <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a+0xf4>)
    742a:	6213      	str	r3, [r2, #32]
    742c:	f44f 7280 	mov.w	r2, #256	; 0x100
    7430:	4b2e      	ldr	r3, [pc, #184]	; (74ec <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a+0x108>)
    7432:	f8c3 20ec 	str.w	r2, [r3, #236]	; 0xec
    7436:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
    743a:	78a3      	ldrb	r3, [r4, #2]
    743c:	2b00      	cmp	r3, #0
    743e:	d140      	bne.n	74c2 <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a+0xde>
    7440:	f640 72ff 	movw	r2, #4095	; 0xfff
    7444:	4b2a      	ldr	r3, [pc, #168]	; (74f0 <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a+0x10c>)
    7446:	62da      	str	r2, [r3, #44]	; 0x2c
    7448:	78e3      	ldrb	r3, [r4, #3]
    744a:	2b00      	cmp	r3, #0
    744c:	d13c      	bne.n	74c8 <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a+0xe4>
    744e:	f640 72ff 	movw	r2, #4095	; 0xfff
    7452:	4b27      	ldr	r3, [pc, #156]	; (74f0 <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a+0x10c>)
    7454:	65da      	str	r2, [r3, #92]	; 0x5c
    7456:	2260      	movs	r2, #96	; 0x60
    7458:	4b26      	ldr	r3, [pc, #152]	; (74f4 <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a+0x110>)
    745a:	64da      	str	r2, [r3, #76]	; 0x4c
    745c:	f503 33e8 	add.w	r3, r3, #118784	; 0x1d000
    7460:	2240      	movs	r2, #64	; 0x40
    7462:	2000      	movs	r0, #0
    7464:	671a      	str	r2, [r3, #112]	; 0x70
    7466:	bd10      	pop	{r4, pc}
    7468:	3b01      	subs	r3, #1
    746a:	b2db      	uxtb	r3, r3
    746c:	2b03      	cmp	r3, #3
    746e:	d8e4      	bhi.n	743a <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a+0x56>
    7470:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
    7474:	4a20      	ldr	r2, [pc, #128]	; (74f8 <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a+0x114>)
    7476:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
    747a:	4a17      	ldr	r2, [pc, #92]	; (74d8 <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a+0xf4>)
    747c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
    7480:	6211      	str	r1, [r2, #32]
    7482:	f5a2 5280 	sub.w	r2, r2, #4096	; 0x1000
    7486:	6213      	str	r3, [r2, #32]
    7488:	2304      	movs	r3, #4
    748a:	f5a2 3288 	sub.w	r2, r2, #69632	; 0x11000
    748e:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    7492:	6f93      	ldr	r3, [r2, #120]	; 0x78
    7494:	f023 0306 	bic.w	r3, r3, #6
    7498:	f043 0304 	orr.w	r3, r3, #4
    749c:	6793      	str	r3, [r2, #120]	; 0x78
    749e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    74a2:	4b16      	ldr	r3, [pc, #88]	; (74fc <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a+0x118>)
    74a4:	67da      	str	r2, [r3, #124]	; 0x7c
    74a6:	f003 facf 	bl	aa48 <RAILINT_5d6f9e1abd47331b2e5065ec63f9f308>
    74aa:	2800      	cmp	r0, #0
    74ac:	d0c5      	beq.n	743a <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a+0x56>
    74ae:	f44f 7380 	mov.w	r3, #256	; 0x100
    74b2:	4a0e      	ldr	r2, [pc, #56]	; (74ec <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a+0x108>)
    74b4:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
    74b8:	f5a2 5280 	sub.w	r2, r2, #4096	; 0x1000
    74bc:	f8c2 30ec 	str.w	r3, [r2, #236]	; 0xec
    74c0:	e7bb      	b.n	743a <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a+0x56>
    74c2:	f7ff ff1f 	bl	7304 <RAILINT_cd2294a9b77625e0ea5276bdf2a90514>
    74c6:	e7bf      	b.n	7448 <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a+0x64>
    74c8:	2260      	movs	r2, #96	; 0x60
    74ca:	4b05      	ldr	r3, [pc, #20]	; (74e0 <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a+0xfc>)
    74cc:	64da      	str	r2, [r3, #76]	; 0x4c
    74ce:	f503 33d8 	add.w	r3, r3, #110592	; 0x1b000
    74d2:	e7c5      	b.n	7460 <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a+0x7c>
    74d4:	a8004000 	.word	0xa8004000
    74d8:	a8016000 	.word	0xa8016000
    74dc:	20000cc8 	.word	0x20000cc8
    74e0:	a8006000 	.word	0xa8006000
    74e4:	a8022000 	.word	0xa8022000
    74e8:	a8015000 	.word	0xa8015000
    74ec:	44006000 	.word	0x44006000
    74f0:	44004000 	.word	0x44004000
    74f4:	a8005000 	.word	0xa8005000
    74f8:	0000be64 	.word	0x0000be64
    74fc:	a8021000 	.word	0xa8021000

00007500 <RAILINT_9a12d5b6e36b120af4f5fbee5b057a33>:
    7500:	4a04      	ldr	r2, [pc, #16]	; (7514 <RAILINT_9a12d5b6e36b120af4f5fbee5b057a33+0x14>)
    7502:	02c0      	lsls	r0, r0, #11
    7504:	69d3      	ldr	r3, [r2, #28]
    7506:	f400 20ff 	and.w	r0, r0, #522240	; 0x7f800
    750a:	f423 23ff 	bic.w	r3, r3, #522240	; 0x7f800
    750e:	4318      	orrs	r0, r3
    7510:	61d0      	str	r0, [r2, #28]
    7512:	4770      	bx	lr
    7514:	a800c000 	.word	0xa800c000

00007518 <RAILINT_2c0c7ba0065447faa0ab7205349f5d73>:
    7518:	4b43      	ldr	r3, [pc, #268]	; (7628 <RAILINT_2c0c7ba0065447faa0ab7205349f5d73+0x110>)
    751a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    751e:	681e      	ldr	r6, [r3, #0]
    7520:	4605      	mov	r5, r0
    7522:	460c      	mov	r4, r1
    7524:	4617      	mov	r7, r2
    7526:	b106      	cbz	r6, 752a <RAILINT_2c0c7ba0065447faa0ab7205349f5d73+0x12>
    7528:	360c      	adds	r6, #12
    752a:	f240 2302 	movw	r3, #514	; 0x202
    752e:	f005 0201 	and.w	r2, r5, #1
    7532:	4023      	ands	r3, r4
    7534:	4313      	orrs	r3, r2
    7536:	d044      	beq.n	75c2 <RAILINT_2c0c7ba0065447faa0ab7205349f5d73+0xaa>
    7538:	07a3      	lsls	r3, r4, #30
    753a:	d509      	bpl.n	7550 <RAILINT_2c0c7ba0065447faa0ab7205349f5d73+0x38>
    753c:	4b3b      	ldr	r3, [pc, #236]	; (762c <RAILINT_2c0c7ba0065447faa0ab7205349f5d73+0x114>)
    753e:	f8d3 3ecc 	ldr.w	r3, [r3, #3788]	; 0xecc
    7542:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
    7546:	2b40      	cmp	r3, #64	; 0x40
    7548:	bf02      	ittt	eq
    754a:	2102      	moveq	r1, #2
    754c:	4b38      	ldreq	r3, [pc, #224]	; (7630 <RAILINT_2c0c7ba0065447faa0ab7205349f5d73+0x118>)
    754e:	6099      	streq	r1, [r3, #8]
    7550:	f04f 0800 	mov.w	r8, #0
    7554:	b35a      	cbz	r2, 75ae <RAILINT_2c0c7ba0065447faa0ab7205349f5d73+0x96>
    7556:	2300      	movs	r3, #0
    7558:	2200      	movs	r2, #0
    755a:	2100      	movs	r1, #0
    755c:	2001      	movs	r0, #1
    755e:	e9cd 8800 	strd	r8, r8, [sp]
    7562:	f003 f88f 	bl	a684 <RAILINT_e56520736dccfc6b4febe00b533ea27a>
    7566:	2004      	movs	r0, #4
    7568:	f002 f830 	bl	95cc <RAILINT_4f93cdd7aecf168775f2a95c9141aec8>
    756c:	f04f 30ff 	mov.w	r0, #4294967295
    7570:	f002 fb5e 	bl	9c30 <RAILINT_0f8f345c59ce02114959a6bf3fac0981>
    7574:	4641      	mov	r1, r8
    7576:	8170      	strh	r0, [r6, #10]
    7578:	2001      	movs	r0, #1
    757a:	f7ff fafb 	bl	6b74 <RAILINT_499a6fa84e713dbcc15223a1179c1579>
    757e:	4b2d      	ldr	r3, [pc, #180]	; (7634 <RAILINT_2c0c7ba0065447faa0ab7205349f5d73+0x11c>)
    7580:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    7582:	0258      	lsls	r0, r3, #9
    7584:	d408      	bmi.n	7598 <RAILINT_2c0c7ba0065447faa0ab7205349f5d73+0x80>
    7586:	69f3      	ldr	r3, [r6, #28]
    7588:	f013 0f80 	tst.w	r3, #128	; 0x80
    758c:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
    7590:	bf14      	ite	ne
    7592:	4a29      	ldrne	r2, [pc, #164]	; (7638 <RAILINT_2c0c7ba0065447faa0ab7205349f5d73+0x120>)
    7594:	4a29      	ldreq	r2, [pc, #164]	; (763c <RAILINT_2c0c7ba0065447faa0ab7205349f5d73+0x124>)
    7596:	6213      	str	r3, [r2, #32]
    7598:	4929      	ldr	r1, [pc, #164]	; (7640 <RAILINT_2c0c7ba0065447faa0ab7205349f5d73+0x128>)
    759a:	6808      	ldr	r0, [r1, #0]
    759c:	f7ff fe6c 	bl	7278 <RAILINT_57fa2c163b50cc6661e10e0e7662afb8>
    75a0:	f04f 33ff 	mov.w	r3, #4294967295
    75a4:	600b      	str	r3, [r1, #0]
    75a6:	7833      	ldrb	r3, [r6, #0]
    75a8:	f043 0304 	orr.w	r3, r3, #4
    75ac:	7033      	strb	r3, [r6, #0]
    75ae:	05a1      	lsls	r1, r4, #22
    75b0:	d507      	bpl.n	75c2 <RAILINT_2c0c7ba0065447faa0ab7205349f5d73+0xaa>
    75b2:	2101      	movs	r1, #1
    75b4:	4630      	mov	r0, r6
    75b6:	f7ff fd3f 	bl	7038 <RAILINT_45e98292b11a528e9c15f82e1aa2d629>
    75ba:	f424 7400 	bic.w	r4, r4, #512	; 0x200
    75be:	4305      	orrs	r5, r0
    75c0:	430c      	orrs	r4, r1
    75c2:	e9d6 233a 	ldrd	r2, r3, [r6, #232]	; 0xe8
    75c6:	4015      	ands	r5, r2
    75c8:	4023      	ands	r3, r4
    75ca:	ea55 0203 	orrs.w	r2, r5, r3
    75ce:	d00a      	beq.n	75e6 <RAILINT_2c0c7ba0065447faa0ab7205349f5d73+0xce>
    75d0:	4a1c      	ldr	r2, [pc, #112]	; (7644 <RAILINT_2c0c7ba0065447faa0ab7205349f5d73+0x12c>)
    75d2:	f1a6 000c 	sub.w	r0, r6, #12
    75d6:	6811      	ldr	r1, [r2, #0]
    75d8:	462a      	mov	r2, r5
    75da:	4788      	blx	r1
    75dc:	072a      	lsls	r2, r5, #28
    75de:	bf42      	ittt	mi
    75e0:	2200      	movmi	r2, #0
    75e2:	4b19      	ldrmi	r3, [pc, #100]	; (7648 <RAILINT_2c0c7ba0065447faa0ab7205349f5d73+0x130>)
    75e4:	601a      	strmi	r2, [r3, #0]
    75e6:	07fb      	lsls	r3, r7, #31
    75e8:	d50f      	bpl.n	760a <RAILINT_2c0c7ba0065447faa0ab7205349f5d73+0xf2>
    75ea:	4918      	ldr	r1, [pc, #96]	; (764c <RAILINT_2c0c7ba0065447faa0ab7205349f5d73+0x134>)
    75ec:	4a18      	ldr	r2, [pc, #96]	; (7650 <RAILINT_2c0c7ba0065447faa0ab7205349f5d73+0x138>)
    75ee:	6808      	ldr	r0, [r1, #0]
    75f0:	2100      	movs	r1, #0
    75f2:	6813      	ldr	r3, [r2, #0]
    75f4:	6011      	str	r1, [r2, #0]
    75f6:	2101      	movs	r1, #1
    75f8:	4a16      	ldr	r2, [pc, #88]	; (7654 <RAILINT_2c0c7ba0065447faa0ab7205349f5d73+0x13c>)
    75fa:	7011      	strb	r1, [r2, #0]
    75fc:	b103      	cbz	r3, 7600 <RAILINT_2c0c7ba0065447faa0ab7205349f5d73+0xe8>
    75fe:	4798      	blx	r3
    7600:	4b15      	ldr	r3, [pc, #84]	; (7658 <RAILINT_2c0c7ba0065447faa0ab7205349f5d73+0x140>)
    7602:	2100      	movs	r1, #0
    7604:	2002      	movs	r0, #2
    7606:	685b      	ldr	r3, [r3, #4]
    7608:	4798      	blx	r3
    760a:	f017 0f0e 	tst.w	r7, #14
    760e:	d008      	beq.n	7622 <RAILINT_2c0c7ba0065447faa0ab7205349f5d73+0x10a>
    7610:	f44f 72b0 	mov.w	r2, #352	; 0x160
    7614:	213b      	movs	r1, #59	; 0x3b
    7616:	2000      	movs	r0, #0
    7618:	b002      	add	sp, #8
    761a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    761e:	f7ff bd5f 	b.w	70e0 <RAILINT_205167ae842e22724c3f35c6430eeddb>
    7622:	b002      	add	sp, #8
    7624:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    7628:	20000aa8 	.word	0x20000aa8
    762c:	b0001000 	.word	0xb0001000
    7630:	a8021000 	.word	0xa8021000
    7634:	a8020000 	.word	0xa8020000
    7638:	a8015000 	.word	0xa8015000
    763c:	a8016000 	.word	0xa8016000
    7640:	200001dc 	.word	0x200001dc
    7644:	200001d8 	.word	0x200001d8
    7648:	20000ccc 	.word	0x20000ccc
    764c:	20000ce4 	.word	0x20000ce4
    7650:	20000ce0 	.word	0x20000ce0
    7654:	20000cdc 	.word	0x20000cdc
    7658:	200001d0 	.word	0x200001d0

0000765c <RAILINT_2a4da4d01b26a7f90998f094ef0d126c>:
    765c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    765e:	e9d0 c73a 	ldrd	ip, r7, [r0, #232]	; 0xe8
    7662:	4619      	mov	r1, r3
    7664:	e9dd 6308 	ldrd	r6, r3, [sp, #32]
    7668:	4604      	mov	r4, r0
    766a:	ea8c 0506 	eor.w	r5, ip, r6
    766e:	ea87 0003 	eor.w	r0, r7, r3
    7672:	4015      	ands	r5, r2
    7674:	4008      	ands	r0, r1
    7676:	ea85 050c 	eor.w	r5, r5, ip
    767a:	4078      	eors	r0, r7
    767c:	e9c4 503a 	strd	r5, r0, [r4, #232]	; 0xe8
    7680:	2500      	movs	r5, #0
    7682:	400b      	ands	r3, r1
    7684:	f022 0001 	bic.w	r0, r2, #1
    7688:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    768c:	ea06 0200 	and.w	r2, r6, r0
    7690:	f043 0302 	orr.w	r3, r3, #2
    7694:	e9cd 5500 	strd	r5, r5, [sp]
    7698:	f002 fff4 	bl	a684 <RAILINT_e56520736dccfc6b4febe00b533ea27a>
    769c:	7823      	ldrb	r3, [r4, #0]
    769e:	07da      	lsls	r2, r3, #31
    76a0:	d518      	bpl.n	76d4 <RAILINT_2a4da4d01b26a7f90998f094ef0d126c+0x78>
    76a2:	f8d4 30ec 	ldr.w	r3, [r4, #236]	; 0xec
    76a6:	059b      	lsls	r3, r3, #22
    76a8:	d514      	bpl.n	76d4 <RAILINT_2a4da4d01b26a7f90998f094ef0d126c+0x78>
    76aa:	f44f 3180 	mov.w	r1, #65536	; 0x10000
    76ae:	4620      	mov	r0, r4
    76b0:	f7ff fcc2 	bl	7038 <RAILINT_45e98292b11a528e9c15f82e1aa2d629>
    76b4:	7823      	ldrb	r3, [r4, #0]
    76b6:	f365 0300 	bfi	r3, r5, #0, #1
    76ba:	7023      	strb	r3, [r4, #0]
    76bc:	e9d4 233a 	ldrd	r2, r3, [r4, #232]	; 0xe8
    76c0:	4002      	ands	r2, r0
    76c2:	400b      	ands	r3, r1
    76c4:	ea52 0103 	orrs.w	r1, r2, r3
    76c8:	d004      	beq.n	76d4 <RAILINT_2a4da4d01b26a7f90998f094ef0d126c+0x78>
    76ca:	4904      	ldr	r1, [pc, #16]	; (76dc <RAILINT_2a4da4d01b26a7f90998f094ef0d126c+0x80>)
    76cc:	f1a4 000c 	sub.w	r0, r4, #12
    76d0:	6809      	ldr	r1, [r1, #0]
    76d2:	4788      	blx	r1
    76d4:	2000      	movs	r0, #0
    76d6:	b003      	add	sp, #12
    76d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    76da:	bf00      	nop
    76dc:	200001d8 	.word	0x200001d8

000076e0 <RAILINT_ee8e30d6c3ef95b8e8dca03da7401c07>:
    76e0:	4a03      	ldr	r2, [pc, #12]	; (76f0 <RAILINT_ee8e30d6c3ef95b8e8dca03da7401c07+0x10>)
    76e2:	6803      	ldr	r3, [r0, #0]
    76e4:	2b00      	cmp	r3, #0
    76e6:	bf08      	it	eq
    76e8:	4613      	moveq	r3, r2
    76ea:	4a02      	ldr	r2, [pc, #8]	; (76f4 <RAILINT_ee8e30d6c3ef95b8e8dca03da7401c07+0x14>)
    76ec:	6013      	str	r3, [r2, #0]
    76ee:	4770      	bx	lr
    76f0:	00007275 	.word	0x00007275
    76f4:	200001d8 	.word	0x200001d8

000076f8 <RAILINT_3131b2227caece62bdb8e184ed31ce2e>:
    76f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    76fc:	4606      	mov	r6, r0
    76fe:	4614      	mov	r4, r2
    7700:	461d      	mov	r5, r3
    7702:	460f      	mov	r7, r1
    7704:	b086      	sub	sp, #24
    7706:	2900      	cmp	r1, #0
    7708:	d046      	beq.n	7798 <RAILINT_3131b2227caece62bdb8e184ed31ce2e+0xa0>
    770a:	b1fa      	cbz	r2, 774c <RAILINT_3131b2227caece62bdb8e184ed31ce2e+0x54>
    770c:	b360      	cbz	r0, 7768 <RAILINT_3131b2227caece62bdb8e184ed31ce2e+0x70>
    770e:	f8df 8098 	ldr.w	r8, [pc, #152]	; 77a8 <RAILINT_3131b2227caece62bdb8e184ed31ce2e+0xb0>
    7712:	f7fe fcbb 	bl	608c <CORE_EnterCritical>
    7716:	f8d8 3000 	ldr.w	r3, [r8]
    771a:	42b3      	cmp	r3, r6
    771c:	d11a      	bne.n	7754 <RAILINT_3131b2227caece62bdb8e184ed31ce2e+0x5c>
    771e:	4b1f      	ldr	r3, [pc, #124]	; (779c <RAILINT_3131b2227caece62bdb8e184ed31ce2e+0xa4>)
    7720:	881b      	ldrh	r3, [r3, #0]
    7722:	f8ad 3002 	strh.w	r3, [sp, #2]
    7726:	4b1e      	ldr	r3, [pc, #120]	; (77a0 <RAILINT_3131b2227caece62bdb8e184ed31ce2e+0xa8>)
    7728:	881e      	ldrh	r6, [r3, #0]
    772a:	f7fe fcb3 	bl	6094 <CORE_ExitCritical>
    772e:	192b      	adds	r3, r5, r4
    7730:	42b3      	cmp	r3, r6
    7732:	f8bd 3002 	ldrh.w	r3, [sp, #2]
    7736:	bfc4      	itt	gt
    7738:	1b74      	subgt	r4, r6, r5
    773a:	b2a4      	uxthgt	r4, r4
    773c:	442b      	add	r3, r5
    773e:	4622      	mov	r2, r4
    7740:	4639      	mov	r1, r7
    7742:	4818      	ldr	r0, [pc, #96]	; (77a4 <RAILINT_3131b2227caece62bdb8e184ed31ce2e+0xac>)
    7744:	b29b      	uxth	r3, r3
    7746:	f001 f919 	bl	897c <RAILINT_cf127192a488f2899b98e74293e0d50f>
    774a:	4604      	mov	r4, r0
    774c:	4620      	mov	r0, r4
    774e:	b006      	add	sp, #24
    7750:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    7754:	f7fe fc9e 	bl	6094 <CORE_ExitCritical>
    7758:	4630      	mov	r0, r6
    775a:	f10d 0202 	add.w	r2, sp, #2
    775e:	a901      	add	r1, sp, #4
    7760:	f001 faae 	bl	8cc0 <RAILINT_3c133834576f64bd8ce53e3b0fe38f30>
    7764:	4606      	mov	r6, r0
    7766:	b908      	cbnz	r0, 776c <RAILINT_3131b2227caece62bdb8e184ed31ce2e+0x74>
    7768:	4634      	mov	r4, r6
    776a:	e7ef      	b.n	774c <RAILINT_3131b2227caece62bdb8e184ed31ce2e+0x54>
    776c:	f89d 3004 	ldrb.w	r3, [sp, #4]
    7770:	f013 0ff7 	tst.w	r3, #247	; 0xf7
    7774:	d00d      	beq.n	7792 <RAILINT_3131b2227caece62bdb8e184ed31ce2e+0x9a>
    7776:	f7fe fc89 	bl	608c <CORE_EnterCritical>
    777a:	4b08      	ldr	r3, [pc, #32]	; (779c <RAILINT_3131b2227caece62bdb8e184ed31ce2e+0xa4>)
    777c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
    7780:	f8c8 6000 	str.w	r6, [r8]
    7784:	801a      	strh	r2, [r3, #0]
    7786:	4b06      	ldr	r3, [pc, #24]	; (77a0 <RAILINT_3131b2227caece62bdb8e184ed31ce2e+0xa8>)
    7788:	f8bd 2006 	ldrh.w	r2, [sp, #6]
    778c:	801a      	strh	r2, [r3, #0]
    778e:	f7fe fc81 	bl	6094 <CORE_ExitCritical>
    7792:	f8bd 6006 	ldrh.w	r6, [sp, #6]
    7796:	e7ca      	b.n	772e <RAILINT_3131b2227caece62bdb8e184ed31ce2e+0x36>
    7798:	460c      	mov	r4, r1
    779a:	e7d7      	b.n	774c <RAILINT_3131b2227caece62bdb8e184ed31ce2e+0x54>
    779c:	20000cd0 	.word	0x20000cd0
    77a0:	20000cca 	.word	0x20000cca
    77a4:	44004038 	.word	0x44004038
    77a8:	20000ccc 	.word	0x20000ccc

000077ac <RAILINT_afeea334a0413e3fba4d9024b9c8696e>:
    77ac:	4b01      	ldr	r3, [pc, #4]	; (77b4 <RAILINT_afeea334a0413e3fba4d9024b9c8696e+0x8>)
    77ae:	2000      	movs	r0, #0
    77b0:	6319      	str	r1, [r3, #48]	; 0x30
    77b2:	4770      	bx	lr
    77b4:	b0001f00 	.word	0xb0001f00

000077b8 <RAILINT_99f0e717b1ae5f07aeace88464176fa9>:
    77b8:	2803      	cmp	r0, #3
    77ba:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    77be:	d83e      	bhi.n	783e <RAILINT_99f0e717b1ae5f07aeace88464176fa9+0x86>
    77c0:	4b20      	ldr	r3, [pc, #128]	; (7844 <RAILINT_99f0e717b1ae5f07aeace88464176fa9+0x8c>)
    77c2:	5c1e      	ldrb	r6, [r3, r0]
    77c4:	4b20      	ldr	r3, [pc, #128]	; (7848 <RAILINT_99f0e717b1ae5f07aeace88464176fa9+0x90>)
    77c6:	5c1f      	ldrb	r7, [r3, r0]
    77c8:	4b20      	ldr	r3, [pc, #128]	; (784c <RAILINT_99f0e717b1ae5f07aeace88464176fa9+0x94>)
    77ca:	f813 8000 	ldrb.w	r8, [r3, r0]
    77ce:	f7fe fc5d 	bl	608c <CORE_EnterCritical>
    77d2:	4605      	mov	r5, r0
    77d4:	f003 f930 	bl	aa38 <RAILINT_0e4fab607515a0ae94861cde84b8a317>
    77d8:	4604      	mov	r4, r0
    77da:	b140      	cbz	r0, 77ee <RAILINT_99f0e717b1ae5f07aeace88464176fa9+0x36>
    77dc:	2300      	movs	r3, #0
    77de:	2200      	movs	r2, #0
    77e0:	e9cd 3300 	strd	r3, r3, [sp]
    77e4:	2001      	movs	r0, #1
    77e6:	2300      	movs	r3, #0
    77e8:	2100      	movs	r1, #0
    77ea:	f002 ff4b 	bl	a684 <RAILINT_e56520736dccfc6b4febe00b533ea27a>
    77ee:	4639      	mov	r1, r7
    77f0:	4630      	mov	r0, r6
    77f2:	f003 f9b3 	bl	ab5c <RAILINT_cf4e885725a47449d7a6caf77bda2061>
    77f6:	4642      	mov	r2, r8
    77f8:	4639      	mov	r1, r7
    77fa:	4630      	mov	r0, r6
    77fc:	f003 fa04 	bl	ac08 <RAILINT_415699d4fedc812ab5645a39d53b6366>
    7800:	b1bc      	cbz	r4, 7832 <RAILINT_99f0e717b1ae5f07aeace88464176fa9+0x7a>
    7802:	4b13      	ldr	r3, [pc, #76]	; (7850 <RAILINT_99f0e717b1ae5f07aeace88464176fa9+0x98>)
    7804:	681b      	ldr	r3, [r3, #0]
    7806:	b103      	cbz	r3, 780a <RAILINT_99f0e717b1ae5f07aeace88464176fa9+0x52>
    7808:	330c      	adds	r3, #12
    780a:	4a12      	ldr	r2, [pc, #72]	; (7854 <RAILINT_99f0e717b1ae5f07aeace88464176fa9+0x9c>)
    780c:	6f12      	ldr	r2, [r2, #112]	; 0x70
    780e:	0252      	lsls	r2, r2, #9
    7810:	d408      	bmi.n	7824 <RAILINT_99f0e717b1ae5f07aeace88464176fa9+0x6c>
    7812:	69db      	ldr	r3, [r3, #28]
    7814:	f013 0f80 	tst.w	r3, #128	; 0x80
    7818:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
    781c:	bf14      	ite	ne
    781e:	4a0e      	ldrne	r2, [pc, #56]	; (7858 <RAILINT_99f0e717b1ae5f07aeace88464176fa9+0xa0>)
    7820:	4a0e      	ldreq	r2, [pc, #56]	; (785c <RAILINT_99f0e717b1ae5f07aeace88464176fa9+0xa4>)
    7822:	6213      	str	r3, [r2, #32]
    7824:	490e      	ldr	r1, [pc, #56]	; (7860 <RAILINT_99f0e717b1ae5f07aeace88464176fa9+0xa8>)
    7826:	6808      	ldr	r0, [r1, #0]
    7828:	f7ff fd26 	bl	7278 <RAILINT_57fa2c163b50cc6661e10e0e7662afb8>
    782c:	f04f 33ff 	mov.w	r3, #4294967295
    7830:	600b      	str	r3, [r1, #0]
    7832:	4628      	mov	r0, r5
    7834:	b002      	add	sp, #8
    7836:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    783a:	f7fe bc2b 	b.w	6094 <CORE_ExitCritical>
    783e:	b002      	add	sp, #8
    7840:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    7844:	0000be74 	.word	0x0000be74
    7848:	0000be78 	.word	0x0000be78
    784c:	0000be7c 	.word	0x0000be7c
    7850:	20000aa8 	.word	0x20000aa8
    7854:	a8020000 	.word	0xa8020000
    7858:	a8015000 	.word	0xa8015000
    785c:	a8016000 	.word	0xa8016000
    7860:	200001dc 	.word	0x200001dc

00007864 <RAILINT_a4b57b9485a34098ab089f4c182a3c25>:
    7864:	b508      	push	{r3, lr}
    7866:	f7ff fcfd 	bl	7264 <RAILINT_07411be539f067663dfa5aa99baea238>
    786a:	3801      	subs	r0, #1
    786c:	b2c0      	uxtb	r0, r0
    786e:	280b      	cmp	r0, #11
    7870:	d802      	bhi.n	7878 <RAILINT_a4b57b9485a34098ab089f4c182a3c25+0x14>
    7872:	4b05      	ldr	r3, [pc, #20]	; (7888 <RAILINT_a4b57b9485a34098ab089f4c182a3c25+0x24>)
    7874:	5c18      	ldrb	r0, [r3, r0]
    7876:	bd08      	pop	{r3, pc}
    7878:	4b04      	ldr	r3, [pc, #16]	; (788c <RAILINT_a4b57b9485a34098ab089f4c182a3c25+0x28>)
    787a:	695b      	ldr	r3, [r3, #20]
    787c:	f013 0f06 	tst.w	r3, #6
    7880:	bf0c      	ite	eq
    7882:	2001      	moveq	r0, #1
    7884:	2004      	movne	r0, #4
    7886:	e7f6      	b.n	7876 <RAILINT_a4b57b9485a34098ab089f4c182a3c25+0x12>
    7888:	0000be80 	.word	0x0000be80
    788c:	a801c000 	.word	0xa801c000

00007890 <RAILINT_dadf1c52f26190429dcacf7151424c68>:
    7890:	b508      	push	{r3, lr}
    7892:	f7ff fd4d 	bl	7330 <RAILINT_a06f36e75bf41143ad151f38401105ae>
    7896:	f7fe fbf9 	bl	608c <CORE_EnterCritical>
    789a:	4a07      	ldr	r2, [pc, #28]	; (78b8 <RAILINT_dadf1c52f26190429dcacf7151424c68+0x28>)
    789c:	f8d2 3e9c 	ldr.w	r3, [r2, #3740]	; 0xe9c
    78a0:	f023 0320 	bic.w	r3, r3, #32
    78a4:	f8c2 3e9c 	str.w	r3, [r2, #3740]	; 0xe9c
    78a8:	f7fe fbf4 	bl	6094 <CORE_ExitCritical>
    78ac:	2202      	movs	r2, #2
    78ae:	4b03      	ldr	r3, [pc, #12]	; (78bc <RAILINT_dadf1c52f26190429dcacf7151424c68+0x2c>)
    78b0:	2000      	movs	r0, #0
    78b2:	609a      	str	r2, [r3, #8]
    78b4:	bd08      	pop	{r3, pc}
    78b6:	bf00      	nop
    78b8:	b0001000 	.word	0xb0001000
    78bc:	a8021000 	.word	0xa8021000

000078c0 <RAILINT_3339c86656af5bd3809fcaff6decfb50>:
    78c0:	4b09      	ldr	r3, [pc, #36]	; (78e8 <RAILINT_3339c86656af5bd3809fcaff6decfb50+0x28>)
    78c2:	4608      	mov	r0, r1
    78c4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    78c6:	0291      	lsls	r1, r2, #10
    78c8:	d40b      	bmi.n	78e2 <RAILINT_3339c86656af5bd3809fcaff6decfb50+0x22>
    78ca:	f8d3 2100 	ldr.w	r2, [r3, #256]	; 0x100
    78ce:	07d2      	lsls	r2, r2, #31
    78d0:	d408      	bmi.n	78e4 <RAILINT_3339c86656af5bd3809fcaff6decfb50+0x24>
    78d2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
    78d6:	f413 6f70 	tst.w	r3, #3840	; 0xf00
    78da:	bf14      	ite	ne
    78dc:	2001      	movne	r0, #1
    78de:	2000      	moveq	r0, #0
    78e0:	4770      	bx	lr
    78e2:	2001      	movs	r0, #1
    78e4:	4770      	bx	lr
    78e6:	bf00      	nop
    78e8:	a8014000 	.word	0xa8014000

000078ec <RAILINT_bc72022350c558af8f7add9f354aa336>:
    78ec:	b570      	push	{r4, r5, r6, lr}
    78ee:	4615      	mov	r5, r2
    78f0:	460c      	mov	r4, r1
    78f2:	f001 030b 	and.w	r3, r1, #11
    78f6:	ea23 0102 	bic.w	r1, r3, r2
    78fa:	4a2c      	ldr	r2, [pc, #176]	; (79ac <RAILINT_bc72022350c558af8f7add9f354aa336+0xc0>)
    78fc:	402b      	ands	r3, r5
    78fe:	64d1      	str	r1, [r2, #76]	; 0x4c
    7900:	f5a2 5280 	sub.w	r2, r2, #4096	; 0x1000
    7904:	64d3      	str	r3, [r2, #76]	; 0x4c
    7906:	0763      	lsls	r3, r4, #29
    7908:	4606      	mov	r6, r0
    790a:	d510      	bpl.n	792e <RAILINT_bc72022350c558af8f7add9f354aa336+0x42>
    790c:	2101      	movs	r1, #1
    790e:	f7ff ffd7 	bl	78c0 <RAILINT_3339c86656af5bd3809fcaff6decfb50>
    7912:	b160      	cbz	r0, 792e <RAILINT_bc72022350c558af8f7add9f354aa336+0x42>
    7914:	f003 f90a 	bl	ab2c <RAILINT_b4349430825f42395f1799b2ff8bb1b4>
    7918:	f44f 7300 	mov.w	r3, #512	; 0x200
    791c:	f015 0f04 	tst.w	r5, #4
    7920:	bf14      	ite	ne
    7922:	4a23      	ldrne	r2, [pc, #140]	; (79b0 <RAILINT_bc72022350c558af8f7add9f354aa336+0xc4>)
    7924:	4a23      	ldreq	r2, [pc, #140]	; (79b4 <RAILINT_bc72022350c558af8f7add9f354aa336+0xc8>)
    7926:	6253      	str	r3, [r2, #36]	; 0x24
    7928:	2204      	movs	r2, #4
    792a:	4b23      	ldr	r3, [pc, #140]	; (79b8 <RAILINT_bc72022350c558af8f7add9f354aa336+0xcc>)
    792c:	671a      	str	r2, [r3, #112]	; 0x70
    792e:	06e0      	lsls	r0, r4, #27
    7930:	d506      	bpl.n	7940 <RAILINT_bc72022350c558af8f7add9f354aa336+0x54>
    7932:	f015 0f10 	tst.w	r5, #16
    7936:	bf14      	ite	ne
    7938:	2200      	movne	r2, #0
    793a:	221b      	moveq	r2, #27
    793c:	4b1f      	ldr	r3, [pc, #124]	; (79bc <RAILINT_bc72022350c558af8f7add9f354aa336+0xd0>)
    793e:	655a      	str	r2, [r3, #84]	; 0x54
    7940:	0621      	lsls	r1, r4, #24
    7942:	d518      	bpl.n	7976 <RAILINT_bc72022350c558af8f7add9f354aa336+0x8a>
    7944:	062a      	lsls	r2, r5, #24
    7946:	d51f      	bpl.n	7988 <RAILINT_bc72022350c558af8f7add9f354aa336+0x9c>
    7948:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
    794c:	4b18      	ldr	r3, [pc, #96]	; (79b0 <RAILINT_bc72022350c558af8f7add9f354aa336+0xc4>)
    794e:	621a      	str	r2, [r3, #32]
    7950:	2201      	movs	r2, #1
    7952:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
    7956:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
    795a:	f7fe fb97 	bl	608c <CORE_EnterCritical>
    795e:	210e      	movs	r1, #14
    7960:	4605      	mov	r5, r0
    7962:	2003      	movs	r0, #3
    7964:	f002 f904 	bl	9b70 <RAILINT_98702195dd5df205b66d73f7f1b701b5>
    7968:	f240 2201 	movw	r2, #513	; 0x201
    796c:	4b13      	ldr	r3, [pc, #76]	; (79bc <RAILINT_bc72022350c558af8f7add9f354aa336+0xd0>)
    796e:	4628      	mov	r0, r5
    7970:	62da      	str	r2, [r3, #44]	; 0x2c
    7972:	f7fe fb8f 	bl	6094 <CORE_ExitCritical>
    7976:	f014 0f60 	tst.w	r4, #96	; 0x60
    797a:	d003      	beq.n	7984 <RAILINT_bc72022350c558af8f7add9f354aa336+0x98>
    797c:	4630      	mov	r0, r6
    797e:	6fb1      	ldr	r1, [r6, #120]	; 0x78
    7980:	f7ff fc88 	bl	7294 <RAILINT_3c9710db34f633d3b8fb008ca62c25bd>
    7984:	2000      	movs	r0, #0
    7986:	bd70      	pop	{r4, r5, r6, pc}
    7988:	4b0d      	ldr	r3, [pc, #52]	; (79c0 <RAILINT_bc72022350c558af8f7add9f354aa336+0xd4>)
    798a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    798c:	025b      	lsls	r3, r3, #9
    798e:	d4f2      	bmi.n	7976 <RAILINT_bc72022350c558af8f7add9f354aa336+0x8a>
    7990:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
    7994:	f896 30b2 	ldrb.w	r3, [r6, #178]	; 0xb2
    7998:	4a06      	ldr	r2, [pc, #24]	; (79b4 <RAILINT_bc72022350c558af8f7add9f354aa336+0xc8>)
    799a:	6211      	str	r1, [r2, #32]
    799c:	2b00      	cmp	r3, #0
    799e:	d0ea      	beq.n	7976 <RAILINT_bc72022350c558af8f7add9f354aa336+0x8a>
    79a0:	2201      	movs	r2, #1
    79a2:	4b03      	ldr	r3, [pc, #12]	; (79b0 <RAILINT_bc72022350c558af8f7add9f354aa336+0xc4>)
    79a4:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
    79a8:	e7e5      	b.n	7976 <RAILINT_bc72022350c558af8f7add9f354aa336+0x8a>
    79aa:	bf00      	nop
    79ac:	a8006000 	.word	0xa8006000
    79b0:	a8015000 	.word	0xa8015000
    79b4:	a8016000 	.word	0xa8016000
    79b8:	a8022000 	.word	0xa8022000
    79bc:	a8004000 	.word	0xa8004000
    79c0:	a8020000 	.word	0xa8020000

000079c4 <RAILINT_c1ee6010aaf86bbd071153c63f21d1bb>:
    79c4:	b430      	push	{r4, r5}
    79c6:	69c5      	ldr	r5, [r0, #28]
    79c8:	ea85 0302 	eor.w	r3, r5, r2
    79cc:	400b      	ands	r3, r1
    79ce:	406b      	eors	r3, r5
    79d0:	61c3      	str	r3, [r0, #28]
    79d2:	bc30      	pop	{r4, r5}
    79d4:	f7ff bf8a 	b.w	78ec <RAILINT_bc72022350c558af8f7add9f354aa336>

000079d8 <RAILINT_7513d8eab2e711e2387c527c09895f59>:
    79d8:	4b01      	ldr	r3, [pc, #4]	; (79e0 <RAILINT_7513d8eab2e711e2387c527c09895f59+0x8>)
    79da:	6a18      	ldr	r0, [r3, #32]
    79dc:	f002 b8da 	b.w	9b94 <RAILINT_1bc89bb9191442fba8e0eefadd7115db>
    79e0:	a8014000 	.word	0xa8014000

000079e4 <RAILINT_abc7196ead04976a18289a1791500047>:
    79e4:	6f83      	ldr	r3, [r0, #120]	; 0x78
    79e6:	b14b      	cbz	r3, 79fc <RAILINT_abc7196ead04976a18289a1791500047+0x18>
    79e8:	681a      	ldr	r2, [r3, #0]
    79ea:	2a02      	cmp	r2, #2
    79ec:	d906      	bls.n	79fc <RAILINT_abc7196ead04976a18289a1791500047+0x18>
    79ee:	f893 0025 	ldrb.w	r0, [r3, #37]	; 0x25
    79f2:	b130      	cbz	r0, 7a02 <RAILINT_abc7196ead04976a18289a1791500047+0x1e>
    79f4:	6a1b      	ldr	r3, [r3, #32]
    79f6:	fbb3 f0f0 	udiv	r0, r3, r0
    79fa:	4770      	bx	lr
    79fc:	380c      	subs	r0, #12
    79fe:	f7ff b8cb 	b.w	6b98 <RAILCb_CalcSymbolRate>
    7a02:	4770      	bx	lr

00007a04 <RAILINT_fd62944279593a99af34baf33f1f64a3>:
    7a04:	4b01      	ldr	r3, [pc, #4]	; (7a0c <RAILINT_fd62944279593a99af34baf33f1f64a3+0x8>)
    7a06:	6a18      	ldr	r0, [r3, #32]
    7a08:	f002 b8ec 	b.w	9be4 <RAILINT_3d99cbb66750f16ad038aa09d2dbf23c>
    7a0c:	a8014000 	.word	0xa8014000

00007a10 <RAILINT_32fca4e0317a75a73f64b707fd6986c3>:
    7a10:	6f82      	ldr	r2, [r0, #120]	; 0x78
    7a12:	b172      	cbz	r2, 7a32 <RAILINT_32fca4e0317a75a73f64b707fd6986c3+0x22>
    7a14:	6813      	ldr	r3, [r2, #0]
    7a16:	2b02      	cmp	r3, #2
    7a18:	d90b      	bls.n	7a32 <RAILINT_32fca4e0317a75a73f64b707fd6986c3+0x22>
    7a1a:	6a53      	ldr	r3, [r2, #36]	; 0x24
    7a1c:	f413 4f7f 	tst.w	r3, #65280	; 0xff00
    7a20:	f3c3 2007 	ubfx	r0, r3, #8, #8
    7a24:	d008      	beq.n	7a38 <RAILINT_32fca4e0317a75a73f64b707fd6986c3+0x28>
    7a26:	6a12      	ldr	r2, [r2, #32]
    7a28:	b2db      	uxtb	r3, r3
    7a2a:	4353      	muls	r3, r2
    7a2c:	fbb3 f0f0 	udiv	r0, r3, r0
    7a30:	4770      	bx	lr
    7a32:	380c      	subs	r0, #12
    7a34:	f7ff b8b4 	b.w	6ba0 <RAILCb_CalcBitRate>
    7a38:	4770      	bx	lr
	...

00007a3c <RAILINT_83a3874c81bc5511d0e4d7f8af307385>:
    7a3c:	7843      	ldrb	r3, [r0, #1]
    7a3e:	1f5a      	subs	r2, r3, #5
    7a40:	2a01      	cmp	r2, #1
    7a42:	d901      	bls.n	7a48 <RAILINT_83a3874c81bc5511d0e4d7f8af307385+0xc>
    7a44:	2b08      	cmp	r3, #8
    7a46:	d105      	bne.n	7a54 <RAILINT_83a3874c81bc5511d0e4d7f8af307385+0x18>
    7a48:	7b4b      	ldrb	r3, [r1, #13]
    7a4a:	b12b      	cbz	r3, 7a58 <RAILINT_83a3874c81bc5511d0e4d7f8af307385+0x1c>
    7a4c:	2b01      	cmp	r3, #1
    7a4e:	d005      	beq.n	7a5c <RAILINT_83a3874c81bc5511d0e4d7f8af307385+0x20>
    7a50:	2b02      	cmp	r3, #2
    7a52:	d005      	beq.n	7a60 <RAILINT_83a3874c81bc5511d0e4d7f8af307385+0x24>
    7a54:	f7ff bfdc 	b.w	7a10 <RAILINT_32fca4e0317a75a73f64b707fd6986c3>
    7a58:	4802      	ldr	r0, [pc, #8]	; (7a64 <RAILINT_83a3874c81bc5511d0e4d7f8af307385+0x28>)
    7a5a:	4770      	bx	lr
    7a5c:	4802      	ldr	r0, [pc, #8]	; (7a68 <RAILINT_83a3874c81bc5511d0e4d7f8af307385+0x2c>)
    7a5e:	4770      	bx	lr
    7a60:	4802      	ldr	r0, [pc, #8]	; (7a6c <RAILINT_83a3874c81bc5511d0e4d7f8af307385+0x30>)
    7a62:	4770      	bx	lr
    7a64:	0007a120 	.word	0x0007a120
    7a68:	0001e848 	.word	0x0001e848
    7a6c:	000f4240 	.word	0x000f4240

00007a70 <RAILINT_c232eb9695d8ec51969199511f1ffdbc>:
    7a70:	b570      	push	{r4, r5, r6, lr}
    7a72:	460e      	mov	r6, r1
    7a74:	f7fe fb0a 	bl	608c <CORE_EnterCritical>
    7a78:	4605      	mov	r5, r0
    7a7a:	f7ff fc2d 	bl	72d8 <RAILINT_d3f1a953c5ad458b47a16e4df761d2c8>
    7a7e:	4604      	mov	r4, r0
    7a80:	b120      	cbz	r0, 7a8c <RAILINT_c232eb9695d8ec51969199511f1ffdbc+0x1c>
    7a82:	4628      	mov	r0, r5
    7a84:	f7fe fb06 	bl	6094 <CORE_ExitCritical>
    7a88:	4620      	mov	r0, r4
    7a8a:	bd70      	pop	{r4, r5, r6, pc}
    7a8c:	f003 f84e 	bl	ab2c <RAILINT_b4349430825f42395f1799b2ff8bb1b4>
    7a90:	4b10      	ldr	r3, [pc, #64]	; (7ad4 <RAILINT_c232eb9695d8ec51969199511f1ffdbc+0x64>)
    7a92:	7832      	ldrb	r2, [r6, #0]
    7a94:	f8d3 3ecc 	ldr.w	r3, [r3, #3788]	; 0xecc
    7a98:	2a02      	cmp	r2, #2
    7a9a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
    7a9e:	d015      	beq.n	7acc <RAILINT_c232eb9695d8ec51969199511f1ffdbc+0x5c>
    7aa0:	2a04      	cmp	r2, #4
    7aa2:	bf0c      	ite	eq
    7aa4:	2202      	moveq	r2, #2
    7aa6:	2200      	movne	r2, #0
    7aa8:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
    7aac:	7872      	ldrb	r2, [r6, #1]
    7aae:	2a02      	cmp	r2, #2
    7ab0:	d00e      	beq.n	7ad0 <RAILINT_c232eb9695d8ec51969199511f1ffdbc+0x60>
    7ab2:	2a04      	cmp	r2, #4
    7ab4:	bf0c      	ite	eq
    7ab6:	2202      	moveq	r2, #2
    7ab8:	2200      	movne	r2, #0
    7aba:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
    7abe:	4a05      	ldr	r2, [pc, #20]	; (7ad4 <RAILINT_c232eb9695d8ec51969199511f1ffdbc+0x64>)
    7ac0:	f8c2 3ecc 	str.w	r3, [r2, #3788]	; 0xecc
    7ac4:	2204      	movs	r2, #4
    7ac6:	4b04      	ldr	r3, [pc, #16]	; (7ad8 <RAILINT_c232eb9695d8ec51969199511f1ffdbc+0x68>)
    7ac8:	671a      	str	r2, [r3, #112]	; 0x70
    7aca:	e7da      	b.n	7a82 <RAILINT_c232eb9695d8ec51969199511f1ffdbc+0x12>
    7acc:	2201      	movs	r2, #1
    7ace:	e7eb      	b.n	7aa8 <RAILINT_c232eb9695d8ec51969199511f1ffdbc+0x38>
    7ad0:	2201      	movs	r2, #1
    7ad2:	e7f2      	b.n	7aba <RAILINT_c232eb9695d8ec51969199511f1ffdbc+0x4a>
    7ad4:	b0001000 	.word	0xb0001000
    7ad8:	a8022000 	.word	0xa8022000

00007adc <RAILINT_7bc23e10f52e56d9fc3392da3f1c2215>:
    7adc:	b538      	push	{r3, r4, r5, lr}
    7ade:	460d      	mov	r5, r1
    7ae0:	f7fe fad4 	bl	608c <CORE_EnterCritical>
    7ae4:	4604      	mov	r4, r0
    7ae6:	4a1e      	ldr	r2, [pc, #120]	; (7b60 <RAILINT_7bc23e10f52e56d9fc3392da3f1c2215+0x84>)
    7ae8:	f7ff fbbc 	bl	7264 <RAILINT_07411be539f067663dfa5aa99baea238>
    7aec:	2806      	cmp	r0, #6
    7aee:	d826      	bhi.n	7b3e <RAILINT_7bc23e10f52e56d9fc3392da3f1c2215+0x62>
    7af0:	2804      	cmp	r0, #4
    7af2:	d82b      	bhi.n	7b4c <RAILINT_7bc23e10f52e56d9fc3392da3f1c2215+0x70>
    7af4:	2803      	cmp	r0, #3
    7af6:	d029      	beq.n	7b4c <RAILINT_7bc23e10f52e56d9fc3392da3f1c2215+0x70>
    7af8:	f003 f818 	bl	ab2c <RAILINT_b4349430825f42395f1799b2ff8bb1b4>
    7afc:	4b19      	ldr	r3, [pc, #100]	; (7b64 <RAILINT_7bc23e10f52e56d9fc3392da3f1c2215+0x88>)
    7afe:	782a      	ldrb	r2, [r5, #0]
    7b00:	f8d3 3ecc 	ldr.w	r3, [r3, #3788]	; 0xecc
    7b04:	2a02      	cmp	r2, #2
    7b06:	f023 030f 	bic.w	r3, r3, #15
    7b0a:	d024      	beq.n	7b56 <RAILINT_7bc23e10f52e56d9fc3392da3f1c2215+0x7a>
    7b0c:	2a04      	cmp	r2, #4
    7b0e:	bf0c      	ite	eq
    7b10:	2202      	moveq	r2, #2
    7b12:	2200      	movne	r2, #0
    7b14:	4313      	orrs	r3, r2
    7b16:	786a      	ldrb	r2, [r5, #1]
    7b18:	2a02      	cmp	r2, #2
    7b1a:	d01e      	beq.n	7b5a <RAILINT_7bc23e10f52e56d9fc3392da3f1c2215+0x7e>
    7b1c:	2a04      	cmp	r2, #4
    7b1e:	bf0c      	ite	eq
    7b20:	2202      	moveq	r2, #2
    7b22:	2200      	movne	r2, #0
    7b24:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
    7b28:	4a0e      	ldr	r2, [pc, #56]	; (7b64 <RAILINT_7bc23e10f52e56d9fc3392da3f1c2215+0x88>)
    7b2a:	4620      	mov	r0, r4
    7b2c:	f8c2 3ecc 	str.w	r3, [r2, #3788]	; 0xecc
    7b30:	2204      	movs	r2, #4
    7b32:	4b0d      	ldr	r3, [pc, #52]	; (7b68 <RAILINT_7bc23e10f52e56d9fc3392da3f1c2215+0x8c>)
    7b34:	671a      	str	r2, [r3, #112]	; 0x70
    7b36:	f7fe faad 	bl	6094 <CORE_ExitCritical>
    7b3a:	2000      	movs	r0, #0
    7b3c:	e00a      	b.n	7b54 <RAILINT_7bc23e10f52e56d9fc3392da3f1c2215+0x78>
    7b3e:	2807      	cmp	r0, #7
    7b40:	d1da      	bne.n	7af8 <RAILINT_7bc23e10f52e56d9fc3392da3f1c2215+0x1c>
    7b42:	f8d2 3130 	ldr.w	r3, [r2, #304]	; 0x130
    7b46:	2b00      	cmp	r3, #0
    7b48:	d1ce      	bne.n	7ae8 <RAILINT_7bc23e10f52e56d9fc3392da3f1c2215+0xc>
    7b4a:	e7d5      	b.n	7af8 <RAILINT_7bc23e10f52e56d9fc3392da3f1c2215+0x1c>
    7b4c:	4620      	mov	r0, r4
    7b4e:	f7fe faa1 	bl	6094 <CORE_ExitCritical>
    7b52:	2002      	movs	r0, #2
    7b54:	bd38      	pop	{r3, r4, r5, pc}
    7b56:	2201      	movs	r2, #1
    7b58:	e7dc      	b.n	7b14 <RAILINT_7bc23e10f52e56d9fc3392da3f1c2215+0x38>
    7b5a:	2201      	movs	r2, #1
    7b5c:	e7e2      	b.n	7b24 <RAILINT_7bc23e10f52e56d9fc3392da3f1c2215+0x48>
    7b5e:	bf00      	nop
    7b60:	a8020000 	.word	0xa8020000
    7b64:	b0001000 	.word	0xb0001000
    7b68:	a8022000 	.word	0xa8022000

00007b6c <RAILINT_cd62b828417e3475c6b58e9a311685cc>:
    7b6c:	b570      	push	{r4, r5, r6, lr}
    7b6e:	4605      	mov	r5, r0
    7b70:	f890 00c0 	ldrb.w	r0, [r0, #192]	; 0xc0
    7b74:	460c      	mov	r4, r1
    7b76:	2804      	cmp	r0, #4
    7b78:	4616      	mov	r6, r2
    7b7a:	d018      	beq.n	7bae <RAILINT_cd62b828417e3475c6b58e9a311685cc+0x42>
    7b7c:	29ff      	cmp	r1, #255	; 0xff
    7b7e:	d018      	beq.n	7bb2 <RAILINT_cd62b828417e3475c6b58e9a311685cc+0x46>
    7b80:	f001 f9d2 	bl	8f28 <RAILINT_1040bf941e847cb582a86b6ad519d354>
    7b84:	42a0      	cmp	r0, r4
    7b86:	d804      	bhi.n	7b92 <RAILINT_cd62b828417e3475c6b58e9a311685cc+0x26>
    7b88:	f895 00c0 	ldrb.w	r0, [r5, #192]	; 0xc0
    7b8c:	f001 f9cc 	bl	8f28 <RAILINT_1040bf941e847cb582a86b6ad519d354>
    7b90:	4604      	mov	r4, r0
    7b92:	4620      	mov	r0, r4
    7b94:	71ac      	strb	r4, [r5, #6]
    7b96:	f001 fa6f 	bl	9078 <RAILINT_08c8419aa71adfff4194c3a91186dc0b>
    7b9a:	f1a0 03ff 	sub.w	r3, r0, #255	; 0xff
    7b9e:	425c      	negs	r4, r3
    7ba0:	415c      	adcs	r4, r3
    7ba2:	b916      	cbnz	r6, 7baa <RAILINT_cd62b828417e3475c6b58e9a311685cc+0x3e>
    7ba4:	4628      	mov	r0, r5
    7ba6:	f001 f9d3 	bl	8f50 <RAILINT_0253fd9ac1e21acdc9ffa6ba468555a5>
    7baa:	4620      	mov	r0, r4
    7bac:	bd70      	pop	{r4, r5, r6, pc}
    7bae:	2402      	movs	r4, #2
    7bb0:	e7fb      	b.n	7baa <RAILINT_cd62b828417e3475c6b58e9a311685cc+0x3e>
    7bb2:	2401      	movs	r4, #1
    7bb4:	e7f9      	b.n	7baa <RAILINT_cd62b828417e3475c6b58e9a311685cc+0x3e>
	...

00007bb8 <RAILINT_b693f7d424389daf06cac15e5c7b8047>:
    7bb8:	b570      	push	{r4, r5, r6, lr}
    7bba:	6a43      	ldr	r3, [r0, #36]	; 0x24
    7bbc:	b08a      	sub	sp, #40	; 0x28
    7bbe:	2b01      	cmp	r3, #1
    7bc0:	d103      	bne.n	7bca <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x12>
    7bc2:	2500      	movs	r5, #0
    7bc4:	4628      	mov	r0, r5
    7bc6:	b00a      	add	sp, #40	; 0x28
    7bc8:	bd70      	pop	{r4, r5, r6, pc}
    7bca:	4604      	mov	r4, r0
    7bcc:	4978      	ldr	r1, [pc, #480]	; (7db0 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x1f8>)
    7bce:	f001 fddb 	bl	9788 <RAILINT_c174cd7e27ebfe1b2de47ff269c167ee>
    7bd2:	6f66      	ldr	r6, [r4, #116]	; 0x74
    7bd4:	8925      	ldrh	r5, [r4, #8]
    7bd6:	67a0      	str	r0, [r4, #120]	; 0x78
    7bd8:	b12e      	cbz	r6, 7be6 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x2e>
    7bda:	6833      	ldr	r3, [r6, #0]
    7bdc:	b11b      	cbz	r3, 7be6 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x2e>
    7bde:	685b      	ldr	r3, [r3, #4]
    7be0:	2b00      	cmp	r3, #0
    7be2:	f040 8097 	bne.w	7d14 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x15c>
    7be6:	f7fe fa51 	bl	608c <CORE_EnterCritical>
    7bea:	f7fe fa53 	bl	6094 <CORE_ExitCritical>
    7bee:	2301      	movs	r3, #1
    7bf0:	6fa0      	ldr	r0, [r4, #120]	; 0x78
    7bf2:	f88d 300a 	strb.w	r3, [sp, #10]
    7bf6:	89b3      	ldrh	r3, [r6, #12]
    7bf8:	e9d6 2101 	ldrd	r2, r1, [r6, #4]
    7bfc:	1aeb      	subs	r3, r5, r3
    7bfe:	b29b      	uxth	r3, r3
    7c00:	fb01 2203 	mla	r2, r1, r3, r2
    7c04:	496b      	ldr	r1, [pc, #428]	; (7db4 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x1fc>)
    7c06:	f8ad 3008 	strh.w	r3, [sp, #8]
    7c0a:	680b      	ldr	r3, [r1, #0]
    7c0c:	9201      	str	r2, [sp, #4]
    7c0e:	4283      	cmp	r3, r0
    7c10:	d016      	beq.n	7c40 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x88>
    7c12:	b148      	cbz	r0, 7c28 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x70>
    7c14:	6803      	ldr	r3, [r0, #0]
    7c16:	b13b      	cbz	r3, 7c28 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x70>
    7c18:	6903      	ldr	r3, [r0, #16]
    7c1a:	b12b      	cbz	r3, 7c28 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x70>
    7c1c:	e9d3 1200 	ldrd	r1, r2, [r3]
    7c20:	689b      	ldr	r3, [r3, #8]
    7c22:	e9c4 1222 	strd	r1, r2, [r4, #136]	; 0x88
    7c26:	e004      	b.n	7c32 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x7a>
    7c28:	ed9f 7b5f 	vldr	d7, [pc, #380]	; 7da8 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x1f0>
    7c2c:	2300      	movs	r3, #0
    7c2e:	ed84 7b22 	vstr	d7, [r4, #136]	; 0x88
    7c32:	4601      	mov	r1, r0
    7c34:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
    7c38:	4620      	mov	r0, r4
    7c3a:	f7ff fb2b 	bl	7294 <RAILINT_3c9710db34f633d3b8fb008ca62c25bd>
    7c3e:	6fa0      	ldr	r0, [r4, #120]	; 0x78
    7c40:	2800      	cmp	r0, #0
    7c42:	d042      	beq.n	7cca <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x112>
    7c44:	6803      	ldr	r3, [r0, #0]
    7c46:	2b03      	cmp	r3, #3
    7c48:	d93f      	bls.n	7cca <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x112>
    7c4a:	4620      	mov	r0, r4
    7c4c:	f89d 200a 	ldrb.w	r2, [sp, #10]
    7c50:	9901      	ldr	r1, [sp, #4]
    7c52:	ab05      	add	r3, sp, #20
    7c54:	f002 f884 	bl	9d60 <RAILINT_f26e766b4223f258d2a3acd050099dec>
    7c58:	2800      	cmp	r0, #0
    7c5a:	d157      	bne.n	7d0c <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x154>
    7c5c:	4a56      	ldr	r2, [pc, #344]	; (7db8 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x200>)
    7c5e:	4957      	ldr	r1, [pc, #348]	; (7dbc <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x204>)
    7c60:	f7ff fb00 	bl	7264 <RAILINT_07411be539f067663dfa5aa99baea238>
    7c64:	1e43      	subs	r3, r0, #1
    7c66:	b2db      	uxtb	r3, r3
    7c68:	2b0b      	cmp	r3, #11
    7c6a:	d844      	bhi.n	7cf6 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x13e>
    7c6c:	5cd3      	ldrb	r3, [r2, r3]
    7c6e:	2b01      	cmp	r3, #1
    7c70:	d1f6      	bne.n	7c60 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0xa8>
    7c72:	a905      	add	r1, sp, #20
    7c74:	a801      	add	r0, sp, #4
    7c76:	f002 f9e5 	bl	a044 <RAILINT_40f50b01b0acf65296da94a1cd4ce85b>
    7c7a:	4605      	mov	r5, r0
    7c7c:	2800      	cmp	r0, #0
    7c7e:	d145      	bne.n	7d0c <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x154>
    7c80:	7823      	ldrb	r3, [r4, #0]
    7c82:	f360 0300 	bfi	r3, r0, #0, #1
    7c86:	7023      	strb	r3, [r4, #0]
    7c88:	f000 fd8e 	bl	87a8 <RAILINT_42ba343910883753b346a02b0f77ef3e>
    7c8c:	6f63      	ldr	r3, [r4, #116]	; 0x74
    7c8e:	695a      	ldr	r2, [r3, #20]
    7c90:	1e43      	subs	r3, r0, #1
    7c92:	6816      	ldr	r6, [r2, #0]
    7c94:	b2db      	uxtb	r3, r3
    7c96:	2bfd      	cmp	r3, #253	; 0xfd
    7c98:	9603      	str	r6, [sp, #12]
    7c9a:	d842      	bhi.n	7d22 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x16a>
    7c9c:	6853      	ldr	r3, [r2, #4]
    7c9e:	2801      	cmp	r0, #1
    7ca0:	9304      	str	r3, [sp, #16]
    7ca2:	d161      	bne.n	7d68 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x1b0>
    7ca4:	4606      	mov	r6, r0
    7ca6:	1cd9      	adds	r1, r3, #3
    7ca8:	d849      	bhi.n	7d3e <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x186>
    7caa:	4602      	mov	r2, r0
    7cac:	a903      	add	r1, sp, #12
    7cae:	4620      	mov	r0, r4
    7cb0:	f000 fcde 	bl	8670 <RAILINT_5e8e9467b0c1450a5e8b8c0a2125b945>
    7cb4:	2e00      	cmp	r6, #0
    7cb6:	d185      	bne.n	7bc4 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0xc>
    7cb8:	f8d4 30ec 	ldr.w	r3, [r4, #236]	; 0xec
    7cbc:	059b      	lsls	r3, r3, #22
    7cbe:	d459      	bmi.n	7d74 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x1bc>
    7cc0:	7823      	ldrb	r3, [r4, #0]
    7cc2:	f043 0301 	orr.w	r3, r3, #1
    7cc6:	7023      	strb	r3, [r4, #0]
    7cc8:	e77c      	b.n	7bc4 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0xc>
    7cca:	4a3b      	ldr	r2, [pc, #236]	; (7db8 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x200>)
    7ccc:	493b      	ldr	r1, [pc, #236]	; (7dbc <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x204>)
    7cce:	f7ff fac9 	bl	7264 <RAILINT_07411be539f067663dfa5aa99baea238>
    7cd2:	1e43      	subs	r3, r0, #1
    7cd4:	b2db      	uxtb	r3, r3
    7cd6:	2b0b      	cmp	r3, #11
    7cd8:	d808      	bhi.n	7cec <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x134>
    7cda:	5cd3      	ldrb	r3, [r2, r3]
    7cdc:	2b01      	cmp	r3, #1
    7cde:	d0b4      	beq.n	7c4a <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x92>
    7ce0:	f7ff fac0 	bl	7264 <RAILINT_07411be539f067663dfa5aa99baea238>
    7ce4:	1e43      	subs	r3, r0, #1
    7ce6:	b2db      	uxtb	r3, r3
    7ce8:	2b0b      	cmp	r3, #11
    7cea:	d9f6      	bls.n	7cda <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x122>
    7cec:	694b      	ldr	r3, [r1, #20]
    7cee:	f013 0f06 	tst.w	r3, #6
    7cf2:	d0aa      	beq.n	7c4a <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x92>
    7cf4:	e7eb      	b.n	7cce <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x116>
    7cf6:	694b      	ldr	r3, [r1, #20]
    7cf8:	f013 0f06 	tst.w	r3, #6
    7cfc:	d1b0      	bne.n	7c60 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0xa8>
    7cfe:	a905      	add	r1, sp, #20
    7d00:	a801      	add	r0, sp, #4
    7d02:	f002 f99f 	bl	a044 <RAILINT_40f50b01b0acf65296da94a1cd4ce85b>
    7d06:	4605      	mov	r5, r0
    7d08:	2800      	cmp	r0, #0
    7d0a:	d0b9      	beq.n	7c80 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0xc8>
    7d0c:	2502      	movs	r5, #2
    7d0e:	4628      	mov	r0, r5
    7d10:	b00a      	add	sp, #40	; 0x28
    7d12:	bd70      	pop	{r4, r5, r6, pc}
    7d14:	681a      	ldr	r2, [r3, #0]
    7d16:	2a03      	cmp	r2, #3
    7d18:	f67f af65 	bls.w	7be6 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x2e>
    7d1c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    7d1e:	0e5b      	lsrs	r3, r3, #25
    7d20:	e767      	b.n	7bf2 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x3a>
    7d22:	1cf3      	adds	r3, r6, #3
    7d24:	d914      	bls.n	7d50 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x198>
    7d26:	4b26      	ldr	r3, [pc, #152]	; (7dc0 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x208>)
    7d28:	3601      	adds	r6, #1
    7d2a:	681b      	ldr	r3, [r3, #0]
    7d2c:	bf18      	it	ne
    7d2e:	2601      	movne	r6, #1
    7d30:	1cd9      	adds	r1, r3, #3
    7d32:	d917      	bls.n	7d64 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x1ac>
    7d34:	28ff      	cmp	r0, #255	; 0xff
    7d36:	6853      	ldr	r3, [r2, #4]
    7d38:	d031      	beq.n	7d9e <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x1e6>
    7d3a:	9304      	str	r3, [sp, #16]
    7d3c:	e7ba      	b.n	7cb4 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0xfc>
    7d3e:	3301      	adds	r3, #1
    7d40:	4b1f      	ldr	r3, [pc, #124]	; (7dc0 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x208>)
    7d42:	bf08      	it	eq
    7d44:	2600      	moveq	r6, #0
    7d46:	685b      	ldr	r3, [r3, #4]
    7d48:	1cda      	adds	r2, r3, #3
    7d4a:	d808      	bhi.n	7d5e <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x1a6>
    7d4c:	9304      	str	r3, [sp, #16]
    7d4e:	e7ac      	b.n	7caa <RAILINT_b693f7d424389daf06cac15e5c7b8047+0xf2>
    7d50:	2601      	movs	r6, #1
    7d52:	6853      	ldr	r3, [r2, #4]
    7d54:	28ff      	cmp	r0, #255	; 0xff
    7d56:	9304      	str	r3, [sp, #16]
    7d58:	d0a5      	beq.n	7ca6 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0xee>
    7d5a:	2000      	movs	r0, #0
    7d5c:	e7a5      	b.n	7caa <RAILINT_b693f7d424389daf06cac15e5c7b8047+0xf2>
    7d5e:	28ff      	cmp	r0, #255	; 0xff
    7d60:	d1a8      	bne.n	7cb4 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0xfc>
    7d62:	e7fa      	b.n	7d5a <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x1a2>
    7d64:	9303      	str	r3, [sp, #12]
    7d66:	e7f4      	b.n	7d52 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x19a>
    7d68:	4602      	mov	r2, r0
    7d6a:	a903      	add	r1, sp, #12
    7d6c:	4620      	mov	r0, r4
    7d6e:	f000 fc7f 	bl	8670 <RAILINT_5e8e9467b0c1450a5e8b8c0a2125b945>
    7d72:	e727      	b.n	7bc4 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0xc>
    7d74:	f44f 3180 	mov.w	r1, #65536	; 0x10000
    7d78:	4620      	mov	r0, r4
    7d7a:	f7ff f95d 	bl	7038 <RAILINT_45e98292b11a528e9c15f82e1aa2d629>
    7d7e:	f8d4 20e8 	ldr.w	r2, [r4, #232]	; 0xe8
    7d82:	f8d4 30ec 	ldr.w	r3, [r4, #236]	; 0xec
    7d86:	4002      	ands	r2, r0
    7d88:	400b      	ands	r3, r1
    7d8a:	ea52 0103 	orrs.w	r1, r2, r3
    7d8e:	f43f af19 	beq.w	7bc4 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0xc>
    7d92:	490c      	ldr	r1, [pc, #48]	; (7dc4 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0x20c>)
    7d94:	f1a4 000c 	sub.w	r0, r4, #12
    7d98:	6809      	ldr	r1, [r1, #0]
    7d9a:	4788      	blx	r1
    7d9c:	e712      	b.n	7bc4 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0xc>
    7d9e:	2001      	movs	r0, #1
    7da0:	9304      	str	r3, [sp, #16]
    7da2:	e780      	b.n	7ca6 <RAILINT_b693f7d424389daf06cac15e5c7b8047+0xee>
    7da4:	f3af 8000 	nop.w
	...
    7db0:	b0001ffc 	.word	0xb0001ffc
    7db4:	20000cd4 	.word	0x20000cd4
    7db8:	0000be80 	.word	0x0000be80
    7dbc:	a801c000 	.word	0xa801c000
    7dc0:	20000200 	.word	0x20000200
    7dc4:	200001d8 	.word	0x200001d8

00007dc8 <RAILINT_cb27dba168c71b340f37df80e4ee5b60>:
    7dc8:	b510      	push	{r4, lr}
    7dca:	4604      	mov	r4, r0
    7dcc:	b151      	cbz	r1, 7de4 <RAILINT_cb27dba168c71b340f37df80e4ee5b60+0x1c>
    7dce:	f44f 6100 	mov.w	r1, #2048	; 0x800
    7dd2:	f003 fbd9 	bl	b588 <RAILINT_10ac1cf98a783c6bdb18657a1d32c8ed>
    7dd6:	b110      	cbz	r0, 7dde <RAILINT_cb27dba168c71b340f37df80e4ee5b60+0x16>
    7dd8:	f894 30ba 	ldrb.w	r3, [r4, #186]	; 0xba
    7ddc:	b963      	cbnz	r3, 7df8 <RAILINT_cb27dba168c71b340f37df80e4ee5b60+0x30>
    7dde:	f44f 7280 	mov.w	r2, #256	; 0x100
    7de2:	e000      	b.n	7de6 <RAILINT_cb27dba168c71b340f37df80e4ee5b60+0x1e>
    7de4:	460a      	mov	r2, r1
    7de6:	f44f 7180 	mov.w	r1, #256	; 0x100
    7dea:	4620      	mov	r0, r4
    7dec:	f003 fbb8 	bl	b560 <RAILINT_fc431c63280fcec9c8f1f2616df249e6>
    7df0:	3800      	subs	r0, #0
    7df2:	bf18      	it	ne
    7df4:	2001      	movne	r0, #1
    7df6:	bd10      	pop	{r4, pc}
    7df8:	2000      	movs	r0, #0
    7dfa:	e7fc      	b.n	7df6 <RAILINT_cb27dba168c71b340f37df80e4ee5b60+0x2e>

00007dfc <RAILINT_f70b804705a044eb7f74093268741788>:
    7dfc:	b510      	push	{r4, lr}
    7dfe:	460c      	mov	r4, r1
    7e00:	b119      	cbz	r1, 7e0a <RAILINT_f70b804705a044eb7f74093268741788+0xe>
    7e02:	f000 fb65 	bl	84d0 <RAILINT_5cc919fc20dd52f2d4dcd0fd622a0329>
    7e06:	b100      	cbz	r0, 7e0a <RAILINT_f70b804705a044eb7f74093268741788+0xe>
    7e08:	340b      	adds	r4, #11
    7e0a:	4620      	mov	r0, r4
    7e0c:	f001 fc50 	bl	96b0 <RAILINT_91df45e96a2874f76867d6f26ae534a0>
    7e10:	4b02      	ldr	r3, [pc, #8]	; (7e1c <RAILINT_f70b804705a044eb7f74093268741788+0x20>)
    7e12:	4240      	negs	r0, r0
    7e14:	f8c3 0ebc 	str.w	r0, [r3, #3772]	; 0xebc
    7e18:	2000      	movs	r0, #0
    7e1a:	bd10      	pop	{r4, pc}
    7e1c:	b0001000 	.word	0xb0001000

00007e20 <RAILINT_2fd87bc1616c65bab5aaf8241d078d01>:
    7e20:	b537      	push	{r0, r1, r2, r4, r5, lr}
    7e22:	460c      	mov	r4, r1
    7e24:	9201      	str	r2, [sp, #4]
    7e26:	f7fe f931 	bl	608c <CORE_EnterCritical>
    7e2a:	4605      	mov	r5, r0
    7e2c:	f7ff fa1a 	bl	7264 <RAILINT_07411be539f067663dfa5aa99baea238>
    7e30:	1fc2      	subs	r2, r0, #7
    7e32:	b2d2      	uxtb	r2, r2
    7e34:	2a02      	cmp	r2, #2
    7e36:	9901      	ldr	r1, [sp, #4]
    7e38:	d901      	bls.n	7e3e <RAILINT_2fd87bc1616c65bab5aaf8241d078d01+0x1e>
    7e3a:	280c      	cmp	r0, #12
    7e3c:	d103      	bne.n	7e46 <RAILINT_2fd87bc1616c65bab5aaf8241d078d01+0x26>
    7e3e:	4b08      	ldr	r3, [pc, #32]	; (7e60 <RAILINT_2fd87bc1616c65bab5aaf8241d078d01+0x40>)
    7e40:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    7e42:	039b      	lsls	r3, r3, #14
    7e44:	d40a      	bmi.n	7e5c <RAILINT_2fd87bc1616c65bab5aaf8241d078d01+0x3c>
    7e46:	4620      	mov	r0, r4
    7e48:	2201      	movs	r2, #1
    7e4a:	f000 fda1 	bl	8990 <RAILINT_3ed2ccbe6359cb941c07e51a82b4c080>
    7e4e:	4604      	mov	r4, r0
    7e50:	4628      	mov	r0, r5
    7e52:	f7fe f91f 	bl	6094 <CORE_ExitCritical>
    7e56:	4620      	mov	r0, r4
    7e58:	b003      	add	sp, #12
    7e5a:	bd30      	pop	{r4, r5, pc}
    7e5c:	2403      	movs	r4, #3
    7e5e:	e7f7      	b.n	7e50 <RAILINT_2fd87bc1616c65bab5aaf8241d078d01+0x30>
    7e60:	a8020000 	.word	0xa8020000

00007e64 <RAILINT_5cc15e08889684ec1ad3d74b53d1f5dc>:
    7e64:	2900      	cmp	r1, #0
    7e66:	bf14      	ite	ne
    7e68:	f44f 7200 	movne.w	r2, #512	; 0x200
    7e6c:	2200      	moveq	r2, #0
    7e6e:	f44f 7100 	mov.w	r1, #512	; 0x200
    7e72:	f003 bb75 	b.w	b560 <RAILINT_fc431c63280fcec9c8f1f2616df249e6>

00007e76 <RAILINT_bf9c5ad5b66e6c5ba2ba7ecd77ccb2e2>:
    7e76:	2900      	cmp	r1, #0
    7e78:	bf14      	ite	ne
    7e7a:	f44f 6280 	movne.w	r2, #1024	; 0x400
    7e7e:	2200      	moveq	r2, #0
    7e80:	f44f 6180 	mov.w	r1, #1024	; 0x400
    7e84:	f003 bb6c 	b.w	b560 <RAILINT_fc431c63280fcec9c8f1f2616df249e6>

00007e88 <RAILINT_304d05fa5f7ea83bae289f8245ef896e>:
    7e88:	788a      	ldrb	r2, [r1, #2]
    7e8a:	4603      	mov	r3, r0
    7e8c:	2a01      	cmp	r2, #1
    7e8e:	b410      	push	{r4}
    7e90:	d815      	bhi.n	7ebe <RAILINT_304d05fa5f7ea83bae289f8245ef896e+0x36>
    7e92:	78c8      	ldrb	r0, [r1, #3]
    7e94:	2801      	cmp	r0, #1
    7e96:	d812      	bhi.n	7ebe <RAILINT_304d05fa5f7ea83bae289f8245ef896e+0x36>
    7e98:	780a      	ldrb	r2, [r1, #0]
    7e9a:	2a01      	cmp	r2, #1
    7e9c:	d80f      	bhi.n	7ebe <RAILINT_304d05fa5f7ea83bae289f8245ef896e+0x36>
    7e9e:	784c      	ldrb	r4, [r1, #1]
    7ea0:	2c04      	cmp	r4, #4
    7ea2:	d80c      	bhi.n	7ebe <RAILINT_304d05fa5f7ea83bae289f8245ef896e+0x36>
    7ea4:	b10c      	cbz	r4, 7eaa <RAILINT_304d05fa5f7ea83bae289f8245ef896e+0x22>
    7ea6:	2801      	cmp	r0, #1
    7ea8:	d109      	bne.n	7ebe <RAILINT_304d05fa5f7ea83bae289f8245ef896e+0x36>
    7eaa:	2a01      	cmp	r2, #1
    7eac:	d007      	beq.n	7ebe <RAILINT_304d05fa5f7ea83bae289f8245ef896e+0x36>
    7eae:	6808      	ldr	r0, [r1, #0]
    7eb0:	f85d 4b04 	ldr.w	r4, [sp], #4
    7eb4:	f8c3 00d8 	str.w	r0, [r3, #216]	; 0xd8
    7eb8:	4618      	mov	r0, r3
    7eba:	f7ff ba93 	b.w	73e4 <RAILINT_ff4a165288c69b8c0d7a13c9d06da43a>
    7ebe:	2001      	movs	r0, #1
    7ec0:	f85d 4b04 	ldr.w	r4, [sp], #4
    7ec4:	4770      	bx	lr
	...

00007ec8 <RAILINT_052f8b2565813079f19c931bac48db51>:
    7ec8:	b537      	push	{r0, r1, r2, r4, r5, lr}
    7eca:	f10d 0206 	add.w	r2, sp, #6
    7ece:	460d      	mov	r5, r1
    7ed0:	f000 fef6 	bl	8cc0 <RAILINT_3c133834576f64bd8ce53e3b0fe38f30>
    7ed4:	4604      	mov	r4, r0
    7ed6:	b188      	cbz	r0, 7efc <RAILINT_052f8b2565813079f19c931bac48db51+0x34>
    7ed8:	b185      	cbz	r5, 7efc <RAILINT_052f8b2565813079f19c931bac48db51+0x34>
    7eda:	782b      	ldrb	r3, [r5, #0]
    7edc:	f013 0ff7 	tst.w	r3, #247	; 0xf7
    7ee0:	d00c      	beq.n	7efc <RAILINT_052f8b2565813079f19c931bac48db51+0x34>
    7ee2:	f7fe f8d3 	bl	608c <CORE_EnterCritical>
    7ee6:	4b07      	ldr	r3, [pc, #28]	; (7f04 <RAILINT_052f8b2565813079f19c931bac48db51+0x3c>)
    7ee8:	f8bd 2006 	ldrh.w	r2, [sp, #6]
    7eec:	601c      	str	r4, [r3, #0]
    7eee:	4b06      	ldr	r3, [pc, #24]	; (7f08 <RAILINT_052f8b2565813079f19c931bac48db51+0x40>)
    7ef0:	801a      	strh	r2, [r3, #0]
    7ef2:	886a      	ldrh	r2, [r5, #2]
    7ef4:	4b05      	ldr	r3, [pc, #20]	; (7f0c <RAILINT_052f8b2565813079f19c931bac48db51+0x44>)
    7ef6:	801a      	strh	r2, [r3, #0]
    7ef8:	f7fe f8cc 	bl	6094 <CORE_ExitCritical>
    7efc:	4620      	mov	r0, r4
    7efe:	b003      	add	sp, #12
    7f00:	bd30      	pop	{r4, r5, pc}
    7f02:	bf00      	nop
    7f04:	20000ccc 	.word	0x20000ccc
    7f08:	20000cd0 	.word	0x20000cd0
    7f0c:	20000cca 	.word	0x20000cca

00007f10 <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5>:
    7f10:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    7f14:	4606      	mov	r6, r0
    7f16:	4615      	mov	r5, r2
    7f18:	4608      	mov	r0, r1
    7f1a:	b919      	cbnz	r1, 7f24 <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0x14>
    7f1c:	2001      	movs	r0, #1
    7f1e:	b003      	add	sp, #12
    7f20:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    7f24:	2a00      	cmp	r2, #0
    7f26:	d0f9      	beq.n	7f1c <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0xc>
    7f28:	2903      	cmp	r1, #3
    7f2a:	d805      	bhi.n	7f38 <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0x28>
    7f2c:	2200      	movs	r2, #0
    7f2e:	4611      	mov	r1, r2
    7f30:	f000 fec6 	bl	8cc0 <RAILINT_3c133834576f64bd8ce53e3b0fe38f30>
    7f34:	2800      	cmp	r0, #0
    7f36:	d0f1      	beq.n	7f1c <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0xc>
    7f38:	7881      	ldrb	r1, [r0, #2]
    7f3a:	8803      	ldrh	r3, [r0, #0]
    7f3c:	7902      	ldrb	r2, [r0, #4]
    7f3e:	f890 8005 	ldrb.w	r8, [r0, #5]
    7f42:	88c4      	ldrh	r4, [r0, #6]
    7f44:	f9b0 0000 	ldrsh.w	r0, [r0]
    7f48:	f001 0707 	and.w	r7, r1, #7
    7f4c:	2800      	cmp	r0, #0
    7f4e:	f2c0 8085 	blt.w	805c <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0x14c>
    7f52:	f1a7 0c07 	sub.w	ip, r7, #7
    7f56:	f1dc 0000 	rsbs	r0, ip, #0
    7f5a:	eb40 000c 	adc.w	r0, r0, ip
    7f5e:	2f05      	cmp	r7, #5
    7f60:	7228      	strb	r0, [r5, #8]
    7f62:	bf94      	ite	ls
    7f64:	2000      	movls	r0, #0
    7f66:	f3c1 1000 	ubfxhi	r0, r1, #4, #1
    7f6a:	7268      	strb	r0, [r5, #9]
    7f6c:	f3c1 1080 	ubfx	r0, r1, #6, #1
    7f70:	7328      	strb	r0, [r5, #12]
    7f72:	f001 0088 	and.w	r0, r1, #136	; 0x88
    7f76:	2880      	cmp	r0, #128	; 0x80
    7f78:	d03a      	beq.n	7ff0 <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0xe0>
    7f7a:	2888      	cmp	r0, #136	; 0x88
    7f7c:	d03a      	beq.n	7ff4 <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0xe4>
    7f7e:	2808      	cmp	r0, #8
    7f80:	d13a      	bne.n	7ff8 <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0xe8>
    7f82:	2001      	movs	r0, #1
    7f84:	f3c1 1140 	ubfx	r1, r1, #5, #1
    7f88:	7368      	strb	r0, [r5, #13]
    7f8a:	73a9      	strb	r1, [r5, #14]
    7f8c:	b90a      	cbnz	r2, 7f92 <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0x82>
    7f8e:	f896 20ba 	ldrb.w	r2, [r6, #186]	; 0xba
    7f92:	3a01      	subs	r2, #1
    7f94:	b2d2      	uxtb	r2, r2
    7f96:	73ea      	strb	r2, [r5, #15]
    7f98:	69f2      	ldr	r2, [r6, #28]
    7f9a:	06d2      	lsls	r2, r2, #27
    7f9c:	d458      	bmi.n	8050 <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0x140>
    7f9e:	3f06      	subs	r7, #6
    7fa0:	2f01      	cmp	r7, #1
    7fa2:	d855      	bhi.n	8050 <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0x140>
    7fa4:	4a2e      	ldr	r2, [pc, #184]	; (8060 <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0x150>)
    7fa6:	3b06      	subs	r3, #6
    7fa8:	6d52      	ldr	r2, [r2, #84]	; 0x54
    7faa:	b29b      	uxth	r3, r3
    7fac:	2206      	movs	r2, #6
    7fae:	4669      	mov	r1, sp
    7fb0:	482c      	ldr	r0, [pc, #176]	; (8064 <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0x154>)
    7fb2:	f000 fce3 	bl	897c <RAILINT_cf127192a488f2899b98e74293e0d50f>
    7fb6:	f89d 7000 	ldrb.w	r7, [sp]
    7fba:	04e3      	lsls	r3, r4, #19
    7fbc:	f1a7 0732 	sub.w	r7, r7, #50	; 0x32
    7fc0:	b27f      	sxtb	r7, r7
    7fc2:	d41b      	bmi.n	7ffc <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0xec>
    7fc4:	f89d 0001 	ldrb.w	r0, [sp, #1]
    7fc8:	0044      	lsls	r4, r0, #1
    7fca:	b2e0      	uxtb	r0, r4
    7fcc:	f8d6 3080 	ldr.w	r3, [r6, #128]	; 0x80
    7fd0:	b10b      	cbz	r3, 7fd6 <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0xc6>
    7fd2:	4639      	mov	r1, r7
    7fd4:	4798      	blx	r3
    7fd6:	72e8      	strb	r0, [r5, #11]
    7fd8:	7b6a      	ldrb	r2, [r5, #13]
    7fda:	4630      	mov	r0, r6
    7fdc:	f8dd 1002 	ldr.w	r1, [sp, #2]
    7fe0:	72af      	strb	r7, [r5, #10]
    7fe2:	f002 fa29 	bl	a438 <RAILINT_80090d97c419b275ef1f41db6daa21d4>
    7fe6:	2306      	movs	r3, #6
    7fe8:	6028      	str	r0, [r5, #0]
    7fea:	71ab      	strb	r3, [r5, #6]
    7fec:	2000      	movs	r0, #0
    7fee:	e796      	b.n	7f1e <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0xe>
    7ff0:	2002      	movs	r0, #2
    7ff2:	e7c7      	b.n	7f84 <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0x74>
    7ff4:	2003      	movs	r0, #3
    7ff6:	e7c5      	b.n	7f84 <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0x74>
    7ff8:	2000      	movs	r0, #0
    7ffa:	e7c3      	b.n	7f84 <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0x74>
    7ffc:	6fb3      	ldr	r3, [r6, #120]	; 0x78
    7ffe:	f3c4 040b 	ubfx	r4, r4, #0, #12
    8002:	00e4      	lsls	r4, r4, #3
    8004:	b18b      	cbz	r3, 802a <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0x11a>
    8006:	681a      	ldr	r2, [r3, #0]
    8008:	2a02      	cmp	r2, #2
    800a:	d90e      	bls.n	802a <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0x11a>
    800c:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
    8010:	b10b      	cbz	r3, 8016 <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0x106>
    8012:	fbb4 f4f3 	udiv	r4, r4, r3
    8016:	45a0      	cmp	r8, r4
    8018:	d816      	bhi.n	8048 <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0x138>
    801a:	b1bc      	cbz	r4, 804c <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0x13c>
    801c:	ebc8 2008 	rsb	r0, r8, r8, lsl #8
    8020:	fbb0 f0f4 	udiv	r0, r0, r4
    8024:	43c0      	mvns	r0, r0
    8026:	b2c0      	uxtb	r0, r0
    8028:	e7d0      	b.n	7fcc <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0xbc>
    802a:	4630      	mov	r0, r6
    802c:	f7ff fcda 	bl	79e4 <RAILINT_abc7196ead04976a18289a1791500047>
    8030:	4629      	mov	r1, r5
    8032:	4681      	mov	r9, r0
    8034:	4630      	mov	r0, r6
    8036:	f7ff fd01 	bl	7a3c <RAILINT_83a3874c81bc5511d0e4d7f8af307385>
    803a:	2800      	cmp	r0, #0
    803c:	d0eb      	beq.n	8016 <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0x106>
    803e:	fb09 f404 	mul.w	r4, r9, r4
    8042:	fbb4 f4f0 	udiv	r4, r4, r0
    8046:	e7e6      	b.n	8016 <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0x106>
    8048:	2000      	movs	r0, #0
    804a:	e7bf      	b.n	7fcc <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0xbc>
    804c:	4620      	mov	r0, r4
    804e:	e7bd      	b.n	7fcc <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0xbc>
    8050:	2000      	movs	r0, #0
    8052:	2380      	movs	r3, #128	; 0x80
    8054:	6028      	str	r0, [r5, #0]
    8056:	816b      	strh	r3, [r5, #10]
    8058:	71a8      	strb	r0, [r5, #6]
    805a:	e760      	b.n	7f1e <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0xe>
    805c:	2002      	movs	r0, #2
    805e:	e75e      	b.n	7f1e <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5+0xe>
    8060:	a8004000 	.word	0xa8004000
    8064:	44004038 	.word	0x44004038

00008068 <RAILINT_310967c2629da02413ba4e8adfa3e137>:
    8068:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    806a:	4606      	mov	r6, r0
    806c:	4614      	mov	r4, r2
    806e:	7997      	ldrb	r7, [r2, #6]
    8070:	f7ff ff4e 	bl	7f10 <RAILINT_e331ba91c2ae1705d8ddbb0caff1d0a5>
    8074:	4605      	mov	r5, r0
    8076:	b948      	cbnz	r0, 808c <RAILINT_310967c2629da02413ba4e8adfa3e137+0x24>
    8078:	79a3      	ldrb	r3, [r4, #6]
    807a:	b13b      	cbz	r3, 808c <RAILINT_310967c2629da02413ba4e8adfa3e137+0x24>
    807c:	4621      	mov	r1, r4
    807e:	4630      	mov	r0, r6
    8080:	71a7      	strb	r7, [r4, #6]
    8082:	f7ff fcdb 	bl	7a3c <RAILINT_83a3874c81bc5511d0e4d7f8af307385>
    8086:	4621      	mov	r1, r4
    8088:	f002 f9a4 	bl	a3d4 <RAILINT_41ffa61618f37d2827bd6e01cc6c61f5>
    808c:	4628      	mov	r0, r5
    808e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00008090 <RAILINT_d9e915d6d22bf4edc2f73d7c60daed1e>:
    8090:	f000 bd10 	b.w	8ab4 <RAILINT_af1bec131c155099f8156b6fce969aff>

00008094 <RAILINT_f921a6fdde390c986016ab0c8bf49fae>:
    8094:	4b04      	ldr	r3, [pc, #16]	; (80a8 <RAILINT_f921a6fdde390c986016ab0c8bf49fae+0x14>)
    8096:	681a      	ldr	r2, [r3, #0]
    8098:	4282      	cmp	r2, r0
    809a:	d001      	beq.n	80a0 <RAILINT_f921a6fdde390c986016ab0c8bf49fae+0xc>
    809c:	2803      	cmp	r0, #3
    809e:	d801      	bhi.n	80a4 <RAILINT_f921a6fdde390c986016ab0c8bf49fae+0x10>
    80a0:	2200      	movs	r2, #0
    80a2:	601a      	str	r2, [r3, #0]
    80a4:	f002 bd8a 	b.w	abbc <RAILINT_519bf7b367869678ccdc4f803cd8123f>
    80a8:	20000ccc 	.word	0x20000ccc

000080ac <RAILINT_bfd5d2eb09d8a4a7871a5c604290c6e9>:
    80ac:	fab3 f383 	clz	r3, r3
    80b0:	2b19      	cmp	r3, #25
    80b2:	4608      	mov	r0, r1
    80b4:	b510      	push	{r4, lr}
    80b6:	4611      	mov	r1, r2
    80b8:	d012      	beq.n	80e0 <RAILINT_bfd5d2eb09d8a4a7871a5c604290c6e9+0x34>
    80ba:	f1c3 0319 	rsb	r3, r3, #25
    80be:	b2db      	uxtb	r3, r3
    80c0:	2b06      	cmp	r3, #6
    80c2:	bf28      	it	cs
    80c4:	2306      	movcs	r3, #6
    80c6:	461a      	mov	r2, r3
    80c8:	1d94      	adds	r4, r2, #6
    80ca:	b2e3      	uxtb	r3, r4
    80cc:	2401      	movs	r4, #1
    80ce:	409c      	lsls	r4, r3
    80d0:	b2a4      	uxth	r4, r4
    80d2:	42a1      	cmp	r1, r4
    80d4:	bf28      	it	cs
    80d6:	4621      	movcs	r1, r4
    80d8:	f000 fbce 	bl	8878 <RAILINT_86983bfebc3fcf81f3ab3444e4625a88>
    80dc:	4620      	mov	r0, r4
    80de:	bd10      	pop	{r4, pc}
    80e0:	2200      	movs	r2, #0
    80e2:	e7f1      	b.n	80c8 <RAILINT_bfd5d2eb09d8a4a7871a5c604290c6e9+0x1c>

000080e4 <RAILINT_705827075d9b54aaab0fdf12a337d2ed>:
    80e4:	8813      	ldrh	r3, [r2, #0]
    80e6:	4608      	mov	r0, r1
    80e8:	2b3f      	cmp	r3, #63	; 0x3f
    80ea:	b510      	push	{r4, lr}
    80ec:	d915      	bls.n	811a <RAILINT_705827075d9b54aaab0fdf12a337d2ed+0x36>
    80ee:	fab3 f383 	clz	r3, r3
    80f2:	2b19      	cmp	r3, #25
    80f4:	d00f      	beq.n	8116 <RAILINT_705827075d9b54aaab0fdf12a337d2ed+0x32>
    80f6:	f1c3 0319 	rsb	r3, r3, #25
    80fa:	b2db      	uxtb	r3, r3
    80fc:	2b06      	cmp	r3, #6
    80fe:	bf28      	it	cs
    8100:	2306      	movcs	r3, #6
    8102:	4619      	mov	r1, r3
    8104:	1d8b      	adds	r3, r1, #6
    8106:	b2dc      	uxtb	r4, r3
    8108:	2301      	movs	r3, #1
    810a:	40a3      	lsls	r3, r4
    810c:	8013      	strh	r3, [r2, #0]
    810e:	f000 fbd1 	bl	88b4 <RAILINT_cdbd2ef4368f95ff8e91482f629bd134>
    8112:	2000      	movs	r0, #0
    8114:	bd10      	pop	{r4, pc}
    8116:	2100      	movs	r1, #0
    8118:	e7f4      	b.n	8104 <RAILINT_705827075d9b54aaab0fdf12a337d2ed+0x20>
    811a:	2001      	movs	r0, #1
    811c:	e7fa      	b.n	8114 <RAILINT_705827075d9b54aaab0fdf12a337d2ed+0x30>

0000811e <RAILINT_ed7cbf63d67a6dc102f980914a3e8a21>:
    811e:	b510      	push	{r4, lr}
    8120:	4614      	mov	r4, r2
    8122:	4608      	mov	r0, r1
    8124:	2101      	movs	r1, #1
    8126:	f001 fca7 	bl	9a78 <RAILINT_cd65c06e3b1af867d6257be45870f13b>
    812a:	4620      	mov	r0, r4
    812c:	2101      	movs	r1, #1
    812e:	f001 fca3 	bl	9a78 <RAILINT_cd65c06e3b1af867d6257be45870f13b>
    8132:	2000      	movs	r0, #0
    8134:	bd10      	pop	{r4, pc}
	...

00008138 <RAILINT_44f844fe44efb07ef80df95a956dc879>:
    8138:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    813a:	4604      	mov	r4, r0
    813c:	460d      	mov	r5, r1
    813e:	b911      	cbnz	r1, 8146 <RAILINT_44f844fe44efb07ef80df95a956dc879+0xe>
    8140:	7803      	ldrb	r3, [r0, #0]
    8142:	065a      	lsls	r2, r3, #25
    8144:	d43a      	bmi.n	81bc <RAILINT_44f844fe44efb07ef80df95a956dc879+0x84>
    8146:	f64f 73ff 	movw	r3, #65535	; 0xffff
    814a:	89a1      	ldrh	r1, [r4, #12]
    814c:	6fa6      	ldr	r6, [r4, #120]	; 0x78
    814e:	4299      	cmp	r1, r3
    8150:	d004      	beq.n	815c <RAILINT_44f844fe44efb07ef80df95a956dc879+0x24>
    8152:	4b2a      	ldr	r3, [pc, #168]	; (81fc <RAILINT_44f844fe44efb07ef80df95a956dc879+0xc4>)
    8154:	681b      	ldr	r3, [r3, #0]
    8156:	b10b      	cbz	r3, 815c <RAILINT_44f844fe44efb07ef80df95a956dc879+0x24>
    8158:	4620      	mov	r0, r4
    815a:	4798      	blx	r3
    815c:	4f28      	ldr	r7, [pc, #160]	; (8200 <RAILINT_44f844fe44efb07ef80df95a956dc879+0xc8>)
    815e:	683b      	ldr	r3, [r7, #0]
    8160:	42b3      	cmp	r3, r6
    8162:	d044      	beq.n	81ee <RAILINT_44f844fe44efb07ef80df95a956dc879+0xb6>
    8164:	4b27      	ldr	r3, [pc, #156]	; (8204 <RAILINT_44f844fe44efb07ef80df95a956dc879+0xcc>)
    8166:	681b      	ldr	r3, [r3, #0]
    8168:	b13b      	cbz	r3, 817a <RAILINT_44f844fe44efb07ef80df95a956dc879+0x42>
    816a:	b11e      	cbz	r6, 8174 <RAILINT_44f844fe44efb07ef80df95a956dc879+0x3c>
    816c:	6832      	ldr	r2, [r6, #0]
    816e:	2a00      	cmp	r2, #0
    8170:	d03f      	beq.n	81f2 <RAILINT_44f844fe44efb07ef80df95a956dc879+0xba>
    8172:	68b6      	ldr	r6, [r6, #8]
    8174:	4631      	mov	r1, r6
    8176:	4620      	mov	r0, r4
    8178:	4798      	blx	r3
    817a:	6fa3      	ldr	r3, [r4, #120]	; 0x78
    817c:	b393      	cbz	r3, 81e4 <RAILINT_44f844fe44efb07ef80df95a956dc879+0xac>
    817e:	681a      	ldr	r2, [r3, #0]
    8180:	2a02      	cmp	r2, #2
    8182:	d92f      	bls.n	81e4 <RAILINT_44f844fe44efb07ef80df95a956dc879+0xac>
    8184:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    8186:	f412 4f7f 	tst.w	r2, #65280	; 0xff00
    818a:	f3c2 2007 	ubfx	r0, r2, #8, #8
    818e:	d005      	beq.n	819c <RAILINT_44f844fe44efb07ef80df95a956dc879+0x64>
    8190:	6a1b      	ldr	r3, [r3, #32]
    8192:	b2d2      	uxtb	r2, r2
    8194:	fb03 f202 	mul.w	r2, r3, r2
    8198:	fbb2 f0f0 	udiv	r0, r2, r0
    819c:	f001 ffb4 	bl	a108 <RAILINT_d0ad23c1600b008713957f4fe5ac160e>
    81a0:	2607      	movs	r6, #7
    81a2:	4620      	mov	r0, r4
    81a4:	f000 ffc4 	bl	9130 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134>
    81a8:	b1b5      	cbz	r5, 81d8 <RAILINT_44f844fe44efb07ef80df95a956dc879+0xa0>
    81aa:	2006      	movs	r0, #6
    81ac:	2201      	movs	r2, #1
    81ae:	6fa3      	ldr	r3, [r4, #120]	; 0x78
    81b0:	4915      	ldr	r1, [pc, #84]	; (8208 <RAILINT_44f844fe44efb07ef80df95a956dc879+0xd0>)
    81b2:	603b      	str	r3, [r7, #0]
    81b4:	4b15      	ldr	r3, [pc, #84]	; (820c <RAILINT_44f844fe44efb07ef80df95a956dc879+0xd4>)
    81b6:	6788      	str	r0, [r1, #120]	; 0x78
    81b8:	701a      	strb	r2, [r3, #0]
    81ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    81bc:	f64f 71ff 	movw	r1, #65535	; 0xffff
    81c0:	4f0f      	ldr	r7, [pc, #60]	; (8200 <RAILINT_44f844fe44efb07ef80df95a956dc879+0xc8>)
    81c2:	6f86      	ldr	r6, [r0, #120]	; 0x78
    81c4:	683a      	ldr	r2, [r7, #0]
    81c6:	f365 1386 	bfi	r3, r5, #6, #1
    81ca:	42b2      	cmp	r2, r6
    81cc:	8181      	strh	r1, [r0, #12]
    81ce:	7003      	strb	r3, [r0, #0]
    81d0:	d1c8      	bne.n	8164 <RAILINT_44f844fe44efb07ef80df95a956dc879+0x2c>
    81d2:	f000 ffad 	bl	9130 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134>
    81d6:	2601      	movs	r6, #1
    81d8:	4631      	mov	r1, r6
    81da:	f104 0088 	add.w	r0, r4, #136	; 0x88
    81de:	f002 f823 	bl	a228 <RAILINT_aeea5e1f09f1c2b4f097efecd921db8d>
    81e2:	e7e2      	b.n	81aa <RAILINT_44f844fe44efb07ef80df95a956dc879+0x72>
    81e4:	f1a4 000c 	sub.w	r0, r4, #12
    81e8:	f7fe fcda 	bl	6ba0 <RAILCb_CalcBitRate>
    81ec:	e7d6      	b.n	819c <RAILINT_44f844fe44efb07ef80df95a956dc879+0x64>
    81ee:	2601      	movs	r6, #1
    81f0:	e7d7      	b.n	81a2 <RAILINT_44f844fe44efb07ef80df95a956dc879+0x6a>
    81f2:	4616      	mov	r6, r2
    81f4:	4620      	mov	r0, r4
    81f6:	4631      	mov	r1, r6
    81f8:	4798      	blx	r3
    81fa:	e7be      	b.n	817a <RAILINT_44f844fe44efb07ef80df95a956dc879+0x42>
    81fc:	20000cd8 	.word	0x20000cd8
    8200:	20000cd4 	.word	0x20000cd4
    8204:	20000cc4 	.word	0x20000cc4
    8208:	a8006000 	.word	0xa8006000
    820c:	20000cc8 	.word	0x20000cc8

00008210 <RAILINT_c95e9d4ad5fb39bdcaabe1c820867429>:
    8210:	b508      	push	{r3, lr}
    8212:	2248      	movs	r2, #72	; 0x48
    8214:	2100      	movs	r1, #0
    8216:	4803      	ldr	r0, [pc, #12]	; (8224 <RAILINT_c95e9d4ad5fb39bdcaabe1c820867429+0x14>)
    8218:	f003 fc61 	bl	bade <memset>
    821c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    8220:	f003 b9fc 	b.w	b61c <RAILINT_dc675e4729ddc8fc4759ebbb1d4c3bce>
    8224:	b0001ed0 	.word	0xb0001ed0

00008228 <RAILINT_f70cad743ef3526a2ef7ac090e6c385a>:
    8228:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    822c:	460f      	mov	r7, r1
    822e:	4604      	mov	r4, r0
    8230:	2800      	cmp	r0, #0
    8232:	d04b      	beq.n	82cc <RAILINT_f70cad743ef3526a2ef7ac090e6c385a+0xa4>
    8234:	2304      	movs	r3, #4
    8236:	f880 30cc 	strb.w	r3, [r0, #204]	; 0xcc
    823a:	4b26      	ldr	r3, [pc, #152]	; (82d4 <RAILINT_f70cad743ef3526a2ef7ac090e6c385a+0xac>)
    823c:	f04f 38ff 	mov.w	r8, #4294967295
    8240:	781b      	ldrb	r3, [r3, #0]
    8242:	f100 060c 	add.w	r6, r0, #12
    8246:	7383      	strb	r3, [r0, #14]
    8248:	2364      	movs	r3, #100	; 0x64
    824a:	f8c0 8150 	str.w	r8, [r0, #336]	; 0x150
    824e:	e9c0 332b 	strd	r3, r3, [r0, #172]	; 0xac
    8252:	e9c0 332d 	strd	r3, r3, [r0, #180]	; 0xb4
    8256:	f8c0 30a8 	str.w	r3, [r0, #168]	; 0xa8
    825a:	f8a0 30bc 	strh.w	r3, [r0, #188]	; 0xbc
    825e:	f880 8011 	strb.w	r8, [r0, #17]
    8262:	f8a0 8012 	strh.w	r8, [r0, #18]
    8266:	f8c0 8018 	str.w	r8, [r0, #24]
    826a:	4630      	mov	r0, r6
    826c:	f002 fbf6 	bl	aa5c <RAILINT_0390333908b9b36d5ab834e553f87374>
    8270:	4630      	mov	r0, r6
    8272:	f7ff ffcd 	bl	8210 <RAILINT_c95e9d4ad5fb39bdcaabe1c820867429>
    8276:	f994 000e 	ldrsb.w	r0, [r4, #14]
    827a:	f7ff f941 	bl	7500 <RAILINT_9a12d5b6e36b120af4f5fbee5b057a33>
    827e:	2260      	movs	r2, #96	; 0x60
    8280:	4b15      	ldr	r3, [pc, #84]	; (82d8 <RAILINT_f70cad743ef3526a2ef7ac090e6c385a+0xb0>)
    8282:	f104 01e4 	add.w	r1, r4, #228	; 0xe4
    8286:	64da      	str	r2, [r3, #76]	; 0x4c
    8288:	4630      	mov	r0, r6
    828a:	f7ff fdfd 	bl	7e88 <RAILINT_304d05fa5f7ea83bae289f8245ef896e>
    828e:	4641      	mov	r1, r8
    8290:	4605      	mov	r5, r0
    8292:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    8294:	4630      	mov	r0, r6
    8296:	f7ff fb95 	bl	79c4 <RAILINT_c1ee6010aaf86bbd071153c63f21d1bb>
    829a:	230e      	movs	r3, #14
    829c:	2200      	movs	r2, #0
    829e:	e9cd 3300 	strd	r3, r3, [sp]
    82a2:	f240 2302 	movw	r3, #514	; 0x202
    82a6:	4610      	mov	r0, r2
    82a8:	4619      	mov	r1, r3
    82aa:	f002 f9eb 	bl	a684 <RAILINT_e56520736dccfc6b4febe00b533ea27a>
    82ae:	f000 fe07 	bl	8ec0 <RAILINT_538e671f17d827f5e8fbb6213721d612>
    82b2:	b93d      	cbnz	r5, 82c4 <RAILINT_f70cad743ef3526a2ef7ac090e6c385a+0x9c>
    82b4:	4620      	mov	r0, r4
    82b6:	f7fe fedb 	bl	7070 <RAILCb_SetupRxFifo>
    82ba:	4605      	mov	r5, r0
    82bc:	b117      	cbz	r7, 82c4 <RAILINT_f70cad743ef3526a2ef7ac090e6c385a+0x9c>
    82be:	b908      	cbnz	r0, 82c4 <RAILINT_f70cad743ef3526a2ef7ac090e6c385a+0x9c>
    82c0:	4620      	mov	r0, r4
    82c2:	47b8      	blx	r7
    82c4:	4628      	mov	r0, r5
    82c6:	b002      	add	sp, #8
    82c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    82cc:	f880 00c0 	strb.w	r0, [r0, #192]	; 0xc0
    82d0:	deff      	udf	#255	; 0xff
    82d2:	bf00      	nop
    82d4:	200001e2 	.word	0x200001e2
    82d8:	a8004000 	.word	0xa8004000

000082dc <RAILINT_c141602218ed06e17bb09de10ef4b9a3>:
    82dc:	b510      	push	{r4, lr}
    82de:	460c      	mov	r4, r1
    82e0:	f7ff ff96 	bl	8210 <RAILINT_c95e9d4ad5fb39bdcaabe1c820867429>
    82e4:	b1cc      	cbz	r4, 831a <RAILINT_c141602218ed06e17bb09de10ef4b9a3+0x3e>
    82e6:	78a3      	ldrb	r3, [r4, #2]
    82e8:	2b08      	cmp	r3, #8
    82ea:	d818      	bhi.n	831e <RAILINT_c141602218ed06e17bb09de10ef4b9a3+0x42>
    82ec:	78e2      	ldrb	r2, [r4, #3]
    82ee:	2a08      	cmp	r2, #8
    82f0:	d815      	bhi.n	831e <RAILINT_c141602218ed06e17bb09de10ef4b9a3+0x42>
    82f2:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
    82f6:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
    82fa:	bf0c      	ite	eq
    82fc:	4619      	moveq	r1, r3
    82fe:	6861      	ldrne	r1, [r4, #4]
    8300:	4a08      	ldr	r2, [pc, #32]	; (8324 <RAILINT_c141602218ed06e17bb09de10ef4b9a3+0x48>)
    8302:	f8c2 10d0 	str.w	r1, [r2, #208]	; 0xd0
    8306:	7821      	ldrb	r1, [r4, #0]
    8308:	f882 1114 	strb.w	r1, [r2, #276]	; 0x114
    830c:	7861      	ldrb	r1, [r4, #1]
    830e:	f882 3117 	strb.w	r3, [r2, #279]	; 0x117
    8312:	f882 1115 	strb.w	r1, [r2, #277]	; 0x115
    8316:	f003 f981 	bl	b61c <RAILINT_dc675e4729ddc8fc4759ebbb1d4c3bce>
    831a:	2000      	movs	r0, #0
    831c:	bd10      	pop	{r4, pc}
    831e:	2001      	movs	r0, #1
    8320:	e7fc      	b.n	831c <RAILINT_c141602218ed06e17bb09de10ef4b9a3+0x40>
    8322:	bf00      	nop
    8324:	b0001e00 	.word	0xb0001e00

00008328 <RAILINT_e02d00033aeee031972ce3294c5c5c74>:
    8328:	2a01      	cmp	r2, #1
    832a:	b510      	push	{r4, lr}
    832c:	d813      	bhi.n	8356 <RAILINT_e02d00033aeee031972ce3294c5c5c74+0x2e>
    832e:	2b03      	cmp	r3, #3
    8330:	d811      	bhi.n	8356 <RAILINT_e02d00033aeee031972ce3294c5c5c74+0x2e>
    8332:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    8336:	2201      	movs	r2, #1
    8338:	4c08      	ldr	r4, [pc, #32]	; (835c <RAILINT_e02d00033aeee031972ce3294c5c5c74+0x34>)
    833a:	fa02 f303 	lsl.w	r3, r2, r3
    833e:	f894 0116 	ldrb.w	r0, [r4, #278]	; 0x116
    8342:	b2db      	uxtb	r3, r3
    8344:	b121      	cbz	r1, 8350 <RAILINT_e02d00033aeee031972ce3294c5c5c74+0x28>
    8346:	4303      	orrs	r3, r0
    8348:	2000      	movs	r0, #0
    834a:	f884 3116 	strb.w	r3, [r4, #278]	; 0x116
    834e:	bd10      	pop	{r4, pc}
    8350:	ea20 0303 	bic.w	r3, r0, r3
    8354:	e7f8      	b.n	8348 <RAILINT_e02d00033aeee031972ce3294c5c5c74+0x20>
    8356:	2001      	movs	r0, #1
    8358:	e7f9      	b.n	834e <RAILINT_e02d00033aeee031972ce3294c5c5c74+0x26>
    835a:	bf00      	nop
    835c:	b0001e00 	.word	0xb0001e00

00008360 <RAILINT_232a85da35fb8aa0cd28c39542df9730>:
    8360:	4603      	mov	r3, r0
    8362:	b570      	push	{r4, r5, r6, lr}
    8364:	680c      	ldr	r4, [r1, #0]
    8366:	f8b0 20c4 	ldrh.w	r2, [r0, #196]	; 0xc4
    836a:	3401      	adds	r4, #1
    836c:	bf08      	it	eq
    836e:	f8d3 409c 	ldreq.w	r4, [r3, #156]	; 0x9c
    8372:	688d      	ldr	r5, [r1, #8]
    8374:	bf08      	it	eq
    8376:	600c      	streq	r4, [r1, #0]
    8378:	684c      	ldr	r4, [r1, #4]
    837a:	325a      	adds	r2, #90	; 0x5a
    837c:	3401      	adds	r4, #1
    837e:	bf08      	it	eq
    8380:	f8d3 40a8 	ldreq.w	r4, [r3, #168]	; 0xa8
    8384:	b292      	uxth	r2, r2
    8386:	bf08      	it	eq
    8388:	604c      	streq	r4, [r1, #4]
    838a:	1c6c      	adds	r4, r5, #1
    838c:	f100 0088 	add.w	r0, r0, #136	; 0x88
    8390:	d133      	bne.n	83fa <RAILINT_232a85da35fb8aa0cd28c39542df9730+0x9a>
    8392:	f8d3 50a4 	ldr.w	r5, [r3, #164]	; 0xa4
    8396:	68cc      	ldr	r4, [r1, #12]
    8398:	608d      	str	r5, [r1, #8]
    839a:	1c66      	adds	r6, r4, #1
    839c:	d131      	bne.n	8402 <RAILINT_232a85da35fb8aa0cd28c39542df9730+0xa2>
    839e:	f8d3 40a0 	ldr.w	r4, [r3, #160]	; 0xa0
    83a2:	690e      	ldr	r6, [r1, #16]
    83a4:	60cc      	str	r4, [r1, #12]
    83a6:	3601      	adds	r6, #1
    83a8:	bf04      	itt	eq
    83aa:	f8d3 6094 	ldreq.w	r6, [r3, #148]	; 0x94
    83ae:	610e      	streq	r6, [r1, #16]
    83b0:	694e      	ldr	r6, [r1, #20]
    83b2:	3601      	adds	r6, #1
    83b4:	bf04      	itt	eq
    83b6:	f8d3 6098 	ldreq.w	r6, [r3, #152]	; 0x98
    83ba:	614e      	streq	r6, [r1, #20]
    83bc:	698e      	ldr	r6, [r1, #24]
    83be:	3601      	adds	r6, #1
    83c0:	bf04      	itt	eq
    83c2:	f8d3 60ac 	ldreq.w	r6, [r3, #172]	; 0xac
    83c6:	618e      	streq	r6, [r1, #24]
    83c8:	698e      	ldr	r6, [r1, #24]
    83ca:	b1f6      	cbz	r6, 840a <RAILINT_232a85da35fb8aa0cd28c39542df9730+0xaa>
    83cc:	42b2      	cmp	r2, r6
    83ce:	bf38      	it	cc
    83d0:	4632      	movcc	r2, r6
    83d2:	680e      	ldr	r6, [r1, #0]
    83d4:	618a      	str	r2, [r1, #24]
    83d6:	e9c3 6427 	strd	r6, r4, [r3, #156]	; 0x9c
    83da:	684c      	ldr	r4, [r1, #4]
    83dc:	f8c3 50a4 	str.w	r5, [r3, #164]	; 0xa4
    83e0:	e9c3 422a 	strd	r4, r2, [r3, #168]	; 0xa8
    83e4:	690a      	ldr	r2, [r1, #16]
    83e6:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
    83ea:	694a      	ldr	r2, [r1, #20]
    83ec:	2107      	movs	r1, #7
    83ee:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
    83f2:	f001 ff19 	bl	a228 <RAILINT_aeea5e1f09f1c2b4f097efecd921db8d>
    83f6:	2000      	movs	r0, #0
    83f8:	bd70      	pop	{r4, r5, r6, pc}
    83fa:	4295      	cmp	r5, r2
    83fc:	bf38      	it	cc
    83fe:	4615      	movcc	r5, r2
    8400:	e7c9      	b.n	8396 <RAILINT_232a85da35fb8aa0cd28c39542df9730+0x36>
    8402:	4294      	cmp	r4, r2
    8404:	bf38      	it	cc
    8406:	4614      	movcc	r4, r2
    8408:	e7cb      	b.n	83a2 <RAILINT_232a85da35fb8aa0cd28c39542df9730+0x42>
    840a:	2264      	movs	r2, #100	; 0x64
    840c:	e7e1      	b.n	83d2 <RAILINT_232a85da35fb8aa0cd28c39542df9730+0x72>
	...

00008410 <RAILINT_3209015e469febd3aebf12c10b838c78>:
    8410:	b538      	push	{r3, r4, r5, lr}
    8412:	f7fd fe3b 	bl	608c <CORE_EnterCritical>
    8416:	f64f 71ff 	movw	r1, #65535	; 0xffff
    841a:	4a0a      	ldr	r2, [pc, #40]	; (8444 <RAILINT_3209015e469febd3aebf12c10b838c78+0x34>)
    841c:	8813      	ldrh	r3, [r2, #0]
    841e:	428b      	cmp	r3, r1
    8420:	d103      	bne.n	842a <RAILINT_3209015e469febd3aebf12c10b838c78+0x1a>
    8422:	f7fd fe37 	bl	6094 <CORE_ExitCritical>
    8426:	2003      	movs	r0, #3
    8428:	bd38      	pop	{r3, r4, r5, pc}
    842a:	4c07      	ldr	r4, [pc, #28]	; (8448 <RAILINT_3209015e469febd3aebf12c10b838c78+0x38>)
    842c:	4d07      	ldr	r5, [pc, #28]	; (844c <RAILINT_3209015e469febd3aebf12c10b838c78+0x3c>)
    842e:	041b      	lsls	r3, r3, #16
    8430:	6665      	str	r5, [r4, #100]	; 0x64
    8432:	f5a4 5480 	sub.w	r4, r4, #4096	; 0x1000
    8436:	6663      	str	r3, [r4, #100]	; 0x64
    8438:	8011      	strh	r1, [r2, #0]
    843a:	f7fd fe2b 	bl	6094 <CORE_ExitCritical>
    843e:	2000      	movs	r0, #0
    8440:	e7f2      	b.n	8428 <RAILINT_3209015e469febd3aebf12c10b838c78+0x18>
    8442:	bf00      	nop
    8444:	200001e0 	.word	0x200001e0
    8448:	a8016000 	.word	0xa8016000
    844c:	ffff0000 	.word	0xffff0000

00008450 <RAILINT_3e587e95c937431090ed1e304e004f0f>:
    8450:	b508      	push	{r3, lr}
    8452:	4b08      	ldr	r3, [pc, #32]	; (8474 <RAILINT_3e587e95c937431090ed1e304e004f0f+0x24>)
    8454:	f8d3 314c 	ldr.w	r3, [r3, #332]	; 0x14c
    8458:	1c5a      	adds	r2, r3, #1
    845a:	d00a      	beq.n	8472 <RAILINT_3e587e95c937431090ed1e304e004f0f+0x22>
    845c:	005b      	lsls	r3, r3, #1
    845e:	d408      	bmi.n	8472 <RAILINT_3e587e95c937431090ed1e304e004f0f+0x22>
    8460:	2003      	movs	r0, #3
    8462:	f7ff f9a9 	bl	77b8 <RAILINT_99f0e717b1ae5f07aeace88464176fa9>
    8466:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
    846a:	4b03      	ldr	r3, [pc, #12]	; (8478 <RAILINT_3e587e95c937431090ed1e304e004f0f+0x28>)
    846c:	67da      	str	r2, [r3, #124]	; 0x7c
    846e:	2201      	movs	r2, #1
    8470:	615a      	str	r2, [r3, #20]
    8472:	bd08      	pop	{r3, pc}
    8474:	0fe08000 	.word	0x0fe08000
    8478:	a8021000 	.word	0xa8021000

0000847c <RAILINT_67b648a3a6e52348d55fcd9139d9f7aa>:
    847c:	f44f 2200 	mov.w	r2, #524288	; 0x80000
    8480:	4b01      	ldr	r3, [pc, #4]	; (8488 <RAILINT_67b648a3a6e52348d55fcd9139d9f7aa+0xc>)
    8482:	671a      	str	r2, [r3, #112]	; 0x70
    8484:	4770      	bx	lr
    8486:	bf00      	nop
    8488:	a8022000 	.word	0xa8022000

0000848c <RAILINT_2224e76641c2cf7155997d9bff12d8b8>:
    848c:	4b02      	ldr	r3, [pc, #8]	; (8498 <RAILINT_2224e76641c2cf7155997d9bff12d8b8+0xc>)
    848e:	6f18      	ldr	r0, [r3, #112]	; 0x70
    8490:	f3c0 40c0 	ubfx	r0, r0, #19, #1
    8494:	4770      	bx	lr
    8496:	bf00      	nop
    8498:	a8020000 	.word	0xa8020000

0000849c <RAILINT_3bff6dfc0590d5c54bb0576abaeb38dd>:
    849c:	4b01      	ldr	r3, [pc, #4]	; (84a4 <RAILINT_3bff6dfc0590d5c54bb0576abaeb38dd+0x8>)
    849e:	4a02      	ldr	r2, [pc, #8]	; (84a8 <RAILINT_3bff6dfc0590d5c54bb0576abaeb38dd+0xc>)
    84a0:	601a      	str	r2, [r3, #0]
    84a2:	4770      	bx	lr
    84a4:	20000cc4 	.word	0x20000cc4
    84a8:	00007371 	.word	0x00007371

000084ac <RAILINT_66d345e90816f39971179025c7079256>:
    84ac:	b538      	push	{r3, r4, r5, lr}
    84ae:	4615      	mov	r5, r2
    84b0:	4604      	mov	r4, r0
    84b2:	f7fe fd35 	bl	6f20 <RAILINT_f0f851116f368bc625e2a9fc0cccaa69>
    84b6:	f005 01f7 	and.w	r1, r5, #247	; 0xf7
    84ba:	4620      	mov	r0, r4
    84bc:	f7ff f976 	bl	77ac <RAILINT_afeea334a0413e3fba4d9024b9c8696e>
    84c0:	2200      	movs	r2, #0
    84c2:	f44f 21c0 	mov.w	r1, #393216	; 0x60000
    84c6:	4620      	mov	r0, r4
    84c8:	f003 f84a 	bl	b560 <RAILINT_fc431c63280fcec9c8f1f2616df249e6>
    84cc:	2000      	movs	r0, #0
    84ce:	bd38      	pop	{r3, r4, r5, pc}

000084d0 <RAILINT_5cc919fc20dd52f2d4dcd0fd622a0329>:
    84d0:	2180      	movs	r1, #128	; 0x80
    84d2:	f003 b859 	b.w	b588 <RAILINT_10ac1cf98a783c6bdb18657a1d32c8ed>
	...

000084d8 <RAILINT_d25081615073202245609fde0f0d4fbe>:
    84d8:	2200      	movs	r2, #0
    84da:	4901      	ldr	r1, [pc, #4]	; (84e0 <RAILINT_d25081615073202245609fde0f0d4fbe+0x8>)
    84dc:	f7ff bfe6 	b.w	84ac <RAILINT_66d345e90816f39971179025c7079256>
    84e0:	0000dad0 	.word	0x0000dad0

000084e4 <RAILINT_7f52347882ddbba7a077ea8579225490>:
    84e4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    84e6:	1c53      	adds	r3, r2, #1
    84e8:	f88d 1014 	strb.w	r1, [sp, #20]
    84ec:	aa05      	add	r2, sp, #20
    84ee:	0a09      	lsrs	r1, r1, #8
    84f0:	f88d 1015 	strb.w	r1, [sp, #21]
    84f4:	9202      	str	r2, [sp, #8]
    84f6:	2102      	movs	r1, #2
    84f8:	2200      	movs	r2, #0
    84fa:	b2db      	uxtb	r3, r3
    84fc:	e9cd 2100 	strd	r2, r1, [sp]
    8500:	4611      	mov	r1, r2
    8502:	f003 f84d 	bl	b5a0 <RAILINT_97099dc7ca7699c8d5ef5cc5413c4a7a>
    8506:	b007      	add	sp, #28
    8508:	f85d fb04 	ldr.w	pc, [sp], #4

0000850c <RAILINT_0bdeace83920f49d6521258171637f3c>:
    850c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    850e:	f88d 1014 	strb.w	r1, [sp, #20]
    8512:	ab05      	add	r3, sp, #20
    8514:	0a09      	lsrs	r1, r1, #8
    8516:	f88d 1015 	strb.w	r1, [sp, #21]
    851a:	9302      	str	r3, [sp, #8]
    851c:	2104      	movs	r1, #4
    851e:	2302      	movs	r3, #2
    8520:	3201      	adds	r2, #1
    8522:	e9cd 3100 	strd	r3, r1, [sp]
    8526:	b2d3      	uxtb	r3, r2
    8528:	2101      	movs	r1, #1
    852a:	2200      	movs	r2, #0
    852c:	f003 f838 	bl	b5a0 <RAILINT_97099dc7ca7699c8d5ef5cc5413c4a7a>
    8530:	b007      	add	sp, #28
    8532:	f85d fb04 	ldr.w	pc, [sp], #4

00008536 <RAILINT_3ec854c4301ae6ed04c0338b9dec6a8d>:
    8536:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    8538:	2300      	movs	r3, #0
    853a:	9102      	str	r1, [sp, #8]
    853c:	2108      	movs	r1, #8
    853e:	3201      	adds	r2, #1
    8540:	e9cd 3100 	strd	r3, r1, [sp]
    8544:	b2d3      	uxtb	r3, r2
    8546:	2201      	movs	r2, #1
    8548:	4611      	mov	r1, r2
    854a:	f003 f829 	bl	b5a0 <RAILINT_97099dc7ca7699c8d5ef5cc5413c4a7a>
    854e:	b005      	add	sp, #20
    8550:	f85d fb04 	ldr.w	pc, [sp], #4

00008554 <RAILINT_bd523e50f8dd0476bd448bb4ab0a0bba>:
    8554:	b510      	push	{r4, lr}
    8556:	22ff      	movs	r2, #255	; 0xff
    8558:	f64f 71ff 	movw	r1, #65535	; 0xffff
    855c:	4604      	mov	r4, r0
    855e:	f7ff ffc1 	bl	84e4 <RAILINT_7f52347882ddbba7a077ea8579225490>
    8562:	b968      	cbnz	r0, 8580 <RAILINT_bd523e50f8dd0476bd448bb4ab0a0bba+0x2c>
    8564:	22ff      	movs	r2, #255	; 0xff
    8566:	f64f 71ff 	movw	r1, #65535	; 0xffff
    856a:	4620      	mov	r0, r4
    856c:	f7ff ffce 	bl	850c <RAILINT_0bdeace83920f49d6521258171637f3c>
    8570:	b930      	cbnz	r0, 8580 <RAILINT_bd523e50f8dd0476bd448bb4ab0a0bba+0x2c>
    8572:	4620      	mov	r0, r4
    8574:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    8578:	22ff      	movs	r2, #255	; 0xff
    857a:	4902      	ldr	r1, [pc, #8]	; (8584 <RAILINT_bd523e50f8dd0476bd448bb4ab0a0bba+0x30>)
    857c:	f7ff bfdb 	b.w	8536 <RAILINT_3ec854c4301ae6ed04c0338b9dec6a8d>
    8580:	bd10      	pop	{r4, pc}
    8582:	bf00      	nop
    8584:	0000bea4 	.word	0x0000bea4

00008588 <RAILINT_c37fe6dda1b65bd8e07f247eebfb0d24>:
    8588:	b508      	push	{r3, lr}
    858a:	040a      	lsls	r2, r1, #16
    858c:	f44f 3180 	mov.w	r1, #65536	; 0x10000
    8590:	f002 ffe6 	bl	b560 <RAILINT_fc431c63280fcec9c8f1f2616df249e6>
    8594:	2000      	movs	r0, #0
    8596:	bd08      	pop	{r3, pc}

00008598 <RAILINT_05746359872f2c5331853a4d5044e337>:
    8598:	0549      	lsls	r1, r1, #21
    859a:	b508      	push	{r3, lr}
    859c:	f031 63bc 	bics.w	r3, r1, #98566144	; 0x5e00000
    85a0:	f001 62bc 	and.w	r2, r1, #98566144	; 0x5e00000
    85a4:	d105      	bne.n	85b2 <RAILINT_05746359872f2c5331853a4d5044e337+0x1a>
    85a6:	f04f 61bc 	mov.w	r1, #98566144	; 0x5e00000
    85aa:	f002 ffd9 	bl	b560 <RAILINT_fc431c63280fcec9c8f1f2616df249e6>
    85ae:	2000      	movs	r0, #0
    85b0:	bd08      	pop	{r3, pc}
    85b2:	2001      	movs	r0, #1
    85b4:	e7fc      	b.n	85b0 <RAILINT_05746359872f2c5331853a4d5044e337+0x18>
	...

000085b8 <RAILINT_98bbf79a9d5372aef3bfc63b8029e5b5>:
    85b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    85bc:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8628 <RAILINT_98bbf79a9d5372aef3bfc63b8029e5b5+0x70>
    85c0:	4605      	mov	r5, r0
    85c2:	f8d8 0000 	ldr.w	r0, [r8]
    85c6:	461c      	mov	r4, r3
    85c8:	460e      	mov	r6, r1
    85ca:	4617      	mov	r7, r2
    85cc:	f001 fa1c 	bl	9a08 <RAILINT_171f424fc160b143d72e8b724c33f1c6>
    85d0:	f8d8 300c 	ldr.w	r3, [r8, #12]
    85d4:	b123      	cbz	r3, 85e0 <RAILINT_98bbf79a9d5372aef3bfc63b8029e5b5+0x28>
    85d6:	f8d8 3008 	ldr.w	r3, [r8, #8]
    85da:	6818      	ldr	r0, [r3, #0]
    85dc:	f001 fa14 	bl	9a08 <RAILINT_171f424fc160b143d72e8b724c33f1c6>
    85e0:	4b0f      	ldr	r3, [pc, #60]	; (8620 <RAILINT_98bbf79a9d5372aef3bfc63b8029e5b5+0x68>)
    85e2:	68da      	ldr	r2, [r3, #12]
    85e4:	b11a      	cbz	r2, 85ee <RAILINT_98bbf79a9d5372aef3bfc63b8029e5b5+0x36>
    85e6:	689b      	ldr	r3, [r3, #8]
    85e8:	6818      	ldr	r0, [r3, #0]
    85ea:	f001 fa0d 	bl	9a08 <RAILINT_171f424fc160b143d72e8b724c33f1c6>
    85ee:	f89d 1018 	ldrb.w	r1, [sp, #24]
    85f2:	0763      	lsls	r3, r4, #29
    85f4:	ea43 4407 	orr.w	r4, r3, r7, lsl #16
    85f8:	0549      	lsls	r1, r1, #21
    85fa:	ea44 62c6 	orr.w	r2, r4, r6, lsl #27
    85fe:	f001 61bc 	and.w	r1, r1, #98566144	; 0x5e00000
    8602:	430a      	orrs	r2, r1
    8604:	4628      	mov	r0, r5
    8606:	4907      	ldr	r1, [pc, #28]	; (8624 <RAILINT_98bbf79a9d5372aef3bfc63b8029e5b5+0x6c>)
    8608:	f442 72c8 	orr.w	r2, r2, #400	; 0x190
    860c:	f002 ffa8 	bl	b560 <RAILINT_fc431c63280fcec9c8f1f2616df249e6>
    8610:	2200      	movs	r2, #0
    8612:	4628      	mov	r0, r5
    8614:	4611      	mov	r1, r2
    8616:	f7ff fc03 	bl	7e20 <RAILINT_2fd87bc1616c65bab5aaf8241d078d01>
    861a:	2000      	movs	r0, #0
    861c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    8620:	0000dad0 	.word	0x0000dad0
    8624:	2de10790 	.word	0x2de10790
    8628:	0000d7cc 	.word	0x0000d7cc

0000862c <RAILINT_e27525372891c9e702a563a1b4973f45>:
    862c:	7840      	ldrb	r0, [r0, #1]
    862e:	3805      	subs	r0, #5
    8630:	2801      	cmp	r0, #1
    8632:	bf8c      	ite	hi
    8634:	2000      	movhi	r0, #0
    8636:	2001      	movls	r0, #1
    8638:	4770      	bx	lr
	...

0000863c <RAILINT_a779509c3ccfe3314b466cbc2527e4c8>:
    863c:	b121      	cbz	r1, 8648 <RAILINT_a779509c3ccfe3314b466cbc2527e4c8+0xc>
    863e:	f242 0201 	movw	r2, #8193	; 0x2001
    8642:	4b0a      	ldr	r3, [pc, #40]	; (866c <RAILINT_a779509c3ccfe3314b466cbc2527e4c8+0x30>)
    8644:	f8c3 2228 	str.w	r2, [r3, #552]	; 0x228
    8648:	1e43      	subs	r3, r0, #1
    864a:	b2db      	uxtb	r3, r3
    864c:	2bfd      	cmp	r3, #253	; 0xfd
    864e:	d90a      	bls.n	8666 <RAILINT_a779509c3ccfe3314b466cbc2527e4c8+0x2a>
    8650:	680a      	ldr	r2, [r1, #0]
    8652:	4b06      	ldr	r3, [pc, #24]	; (866c <RAILINT_a779509c3ccfe3314b466cbc2527e4c8+0x30>)
    8654:	28ff      	cmp	r0, #255	; 0xff
    8656:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
    865a:	d106      	bne.n	866a <RAILINT_a779509c3ccfe3314b466cbc2527e4c8+0x2e>
    865c:	684a      	ldr	r2, [r1, #4]
    865e:	4b03      	ldr	r3, [pc, #12]	; (866c <RAILINT_a779509c3ccfe3314b466cbc2527e4c8+0x30>)
    8660:	f8c3 2254 	str.w	r2, [r3, #596]	; 0x254
    8664:	4770      	bx	lr
    8666:	2801      	cmp	r0, #1
    8668:	e7f7      	b.n	865a <RAILINT_a779509c3ccfe3314b466cbc2527e4c8+0x1e>
    866a:	4770      	bx	lr
    866c:	a8014000 	.word	0xa8014000

00008670 <RAILINT_5e8e9467b0c1450a5e8b8c0a2125b945>:
    8670:	b558      	push	{r3, r4, r6, lr}
    8672:	4606      	mov	r6, r0
    8674:	4610      	mov	r0, r2
    8676:	460c      	mov	r4, r1
    8678:	f7ff ffe0 	bl	863c <RAILINT_a779509c3ccfe3314b466cbc2527e4c8>
    867c:	b1ce      	cbz	r6, 86b2 <RAILINT_5e8e9467b0c1450a5e8b8c0a2125b945+0x42>
    867e:	6f73      	ldr	r3, [r6, #116]	; 0x74
    8680:	b1bb      	cbz	r3, 86b2 <RAILINT_5e8e9467b0c1450a5e8b8c0a2125b945+0x42>
    8682:	695b      	ldr	r3, [r3, #20]
    8684:	b1ab      	cbz	r3, 86b2 <RAILINT_5e8e9467b0c1450a5e8b8c0a2125b945+0x42>
    8686:	1e42      	subs	r2, r0, #1
    8688:	b2d2      	uxtb	r2, r2
    868a:	2afd      	cmp	r2, #253	; 0xfd
    868c:	d913      	bls.n	86b6 <RAILINT_5e8e9467b0c1450a5e8b8c0a2125b945+0x46>
    868e:	680a      	ldr	r2, [r1, #0]
    8690:	3201      	adds	r2, #1
    8692:	bf04      	itt	eq
    8694:	f06f 0201 	mvneq.w	r2, #1
    8698:	600a      	streq	r2, [r1, #0]
    869a:	680a      	ldr	r2, [r1, #0]
    869c:	28ff      	cmp	r0, #255	; 0xff
    869e:	601a      	str	r2, [r3, #0]
    86a0:	d107      	bne.n	86b2 <RAILINT_5e8e9467b0c1450a5e8b8c0a2125b945+0x42>
    86a2:	6862      	ldr	r2, [r4, #4]
    86a4:	3201      	adds	r2, #1
    86a6:	d102      	bne.n	86ae <RAILINT_5e8e9467b0c1450a5e8b8c0a2125b945+0x3e>
    86a8:	f06f 0201 	mvn.w	r2, #1
    86ac:	6062      	str	r2, [r4, #4]
    86ae:	6862      	ldr	r2, [r4, #4]
    86b0:	605a      	str	r2, [r3, #4]
    86b2:	2000      	movs	r0, #0
    86b4:	bd58      	pop	{r3, r4, r6, pc}
    86b6:	2801      	cmp	r0, #1
    86b8:	e7f2      	b.n	86a0 <RAILINT_5e8e9467b0c1450a5e8b8c0a2125b945+0x30>

000086ba <RAILINT_180789e54523ec093dde33f764dd8f42>:
    86ba:	f04f 33ff 	mov.w	r3, #4294967295
    86be:	b513      	push	{r0, r1, r4, lr}
    86c0:	e9cd 3300 	strd	r3, r3, [sp]
    86c4:	b149      	cbz	r1, 86da <RAILINT_180789e54523ec093dde33f764dd8f42+0x20>
    86c6:	18d4      	adds	r4, r2, r3
    86c8:	b2e4      	uxtb	r4, r4
    86ca:	2cfd      	cmp	r4, #253	; 0xfd
    86cc:	d90a      	bls.n	86e4 <RAILINT_180789e54523ec093dde33f764dd8f42+0x2a>
    86ce:	600b      	str	r3, [r1, #0]
    86d0:	2aff      	cmp	r2, #255	; 0xff
    86d2:	d102      	bne.n	86da <RAILINT_180789e54523ec093dde33f764dd8f42+0x20>
    86d4:	f04f 33ff 	mov.w	r3, #4294967295
    86d8:	604b      	str	r3, [r1, #4]
    86da:	4669      	mov	r1, sp
    86dc:	f7ff ffc8 	bl	8670 <RAILINT_5e8e9467b0c1450a5e8b8c0a2125b945>
    86e0:	b002      	add	sp, #8
    86e2:	bd10      	pop	{r4, pc}
    86e4:	2a01      	cmp	r2, #1
    86e6:	e7f4      	b.n	86d2 <RAILINT_180789e54523ec093dde33f764dd8f42+0x18>

000086e8 <RAILINT_7c4474e9c252fd93501bbf7d6298f3d3>:
    86e8:	b507      	push	{r0, r1, r2, lr}
    86ea:	4b0c      	ldr	r3, [pc, #48]	; (871c <RAILINT_7c4474e9c252fd93501bbf7d6298f3d3+0x34>)
    86ec:	2208      	movs	r2, #8
    86ee:	7819      	ldrb	r1, [r3, #0]
    86f0:	b989      	cbnz	r1, 8716 <RAILINT_7c4474e9c252fd93501bbf7d6298f3d3+0x2e>
    86f2:	490b      	ldr	r1, [pc, #44]	; (8720 <RAILINT_7c4474e9c252fd93501bbf7d6298f3d3+0x38>)
    86f4:	f8c1 23fc 	str.w	r2, [r1, #1020]	; 0x3fc
    86f8:	f04f 32ff 	mov.w	r2, #4294967295
    86fc:	e9cd 2200 	strd	r2, r2, [sp]
    8700:	4a08      	ldr	r2, [pc, #32]	; (8724 <RAILINT_7c4474e9c252fd93501bbf7d6298f3d3+0x3c>)
    8702:	6810      	ldr	r0, [r2, #0]
    8704:	b100      	cbz	r0, 8708 <RAILINT_7c4474e9c252fd93501bbf7d6298f3d3+0x20>
    8706:	300c      	adds	r0, #12
    8708:	4669      	mov	r1, sp
    870a:	781a      	ldrb	r2, [r3, #0]
    870c:	f7ff ffd5 	bl	86ba <RAILINT_180789e54523ec093dde33f764dd8f42>
    8710:	b003      	add	sp, #12
    8712:	f85d fb04 	ldr.w	pc, [sp], #4
    8716:	4904      	ldr	r1, [pc, #16]	; (8728 <RAILINT_7c4474e9c252fd93501bbf7d6298f3d3+0x40>)
    8718:	e7ec      	b.n	86f4 <RAILINT_7c4474e9c252fd93501bbf7d6298f3d3+0xc>
    871a:	bf00      	nop
    871c:	200001e3 	.word	0x200001e3
    8720:	a8021000 	.word	0xa8021000
    8724:	20000aa8 	.word	0x20000aa8
    8728:	a8022000 	.word	0xa8022000

0000872c <RAILINT_d035493dc985426c706a16725f81a4c1>:
    872c:	b538      	push	{r3, r4, r5, lr}
    872e:	4604      	mov	r4, r0
    8730:	f001 f8a8 	bl	9884 <RAILINT_ff78d9bb4bfe772063473783474f9dc5>
    8734:	78e0      	ldrb	r0, [r4, #3]
    8736:	7921      	ldrb	r1, [r4, #4]
    8738:	4a17      	ldr	r2, [pc, #92]	; (8798 <RAILINT_d035493dc985426c706a16725f81a4c1+0x6c>)
    873a:	ea40 4301 	orr.w	r3, r0, r1, lsl #16
    873e:	f8c2 34cc 	str.w	r3, [r2, #1228]	; 0x4cc
    8742:	79e5      	ldrb	r5, [r4, #7]
    8744:	79a3      	ldrb	r3, [r4, #6]
    8746:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
    874a:	f8c2 34d0 	str.w	r3, [r2, #1232]	; 0x4d0
    874e:	7823      	ldrb	r3, [r4, #0]
    8750:	b11b      	cbz	r3, 875a <RAILINT_d035493dc985426c706a16725f81a4c1+0x2e>
    8752:	2300      	movs	r3, #0
    8754:	2204      	movs	r2, #4
    8756:	f7fd fca7 	bl	60a8 <GPIO_PinModeSet>
    875a:	7863      	ldrb	r3, [r4, #1]
    875c:	b12b      	cbz	r3, 876a <RAILINT_d035493dc985426c706a16725f81a4c1+0x3e>
    875e:	2300      	movs	r3, #0
    8760:	2204      	movs	r2, #4
    8762:	79e1      	ldrb	r1, [r4, #7]
    8764:	79a0      	ldrb	r0, [r4, #6]
    8766:	f7fd fc9f 	bl	60a8 <GPIO_PinModeSet>
    876a:	7822      	ldrb	r2, [r4, #0]
    876c:	2301      	movs	r3, #1
    876e:	b17a      	cbz	r2, 8790 <RAILINT_d035493dc985426c706a16725f81a4c1+0x64>
    8770:	4a0a      	ldr	r2, [pc, #40]	; (879c <RAILINT_d035493dc985426c706a16725f81a4c1+0x70>)
    8772:	f8c2 34c8 	str.w	r3, [r2, #1224]	; 0x4c8
    8776:	7862      	ldrb	r2, [r4, #1]
    8778:	2302      	movs	r3, #2
    877a:	b15a      	cbz	r2, 8794 <RAILINT_d035493dc985426c706a16725f81a4c1+0x68>
    877c:	4a07      	ldr	r2, [pc, #28]	; (879c <RAILINT_d035493dc985426c706a16725f81a4c1+0x70>)
    877e:	f8c2 34c8 	str.w	r3, [r2, #1224]	; 0x4c8
    8782:	78a2      	ldrb	r2, [r4, #2]
    8784:	4b06      	ldr	r3, [pc, #24]	; (87a0 <RAILINT_d035493dc985426c706a16725f81a4c1+0x74>)
    8786:	701a      	strb	r2, [r3, #0]
    8788:	f7ff ffae 	bl	86e8 <RAILINT_7c4474e9c252fd93501bbf7d6298f3d3>
    878c:	2000      	movs	r0, #0
    878e:	bd38      	pop	{r3, r4, r5, pc}
    8790:	4a04      	ldr	r2, [pc, #16]	; (87a4 <RAILINT_d035493dc985426c706a16725f81a4c1+0x78>)
    8792:	e7ee      	b.n	8772 <RAILINT_d035493dc985426c706a16725f81a4c1+0x46>
    8794:	4a03      	ldr	r2, [pc, #12]	; (87a4 <RAILINT_d035493dc985426c706a16725f81a4c1+0x78>)
    8796:	e7f2      	b.n	877e <RAILINT_d035493dc985426c706a16725f81a4c1+0x52>
    8798:	4003c000 	.word	0x4003c000
    879c:	4003d000 	.word	0x4003d000
    87a0:	200001e3 	.word	0x200001e3
    87a4:	4003e000 	.word	0x4003e000

000087a8 <RAILINT_42ba343910883753b346a02b0f77ef3e>:
    87a8:	4b01      	ldr	r3, [pc, #4]	; (87b0 <RAILINT_42ba343910883753b346a02b0f77ef3e+0x8>)
    87aa:	7818      	ldrb	r0, [r3, #0]
    87ac:	4770      	bx	lr
    87ae:	bf00      	nop
    87b0:	200001e3 	.word	0x200001e3

000087b4 <RAILINT_33d661e401ffa5b40584048fe4dff1c2>:
    87b4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    87b8:	6806      	ldr	r6, [r0, #0]
    87ba:	461c      	mov	r4, r3
    87bc:	f89d 3030 	ldrb.w	r3, [sp, #48]	; 0x30
    87c0:	f006 0607 	and.w	r6, r6, #7
    87c4:	9301      	str	r3, [sp, #4]
    87c6:	1db3      	adds	r3, r6, #6
    87c8:	2601      	movs	r6, #1
    87ca:	409e      	lsls	r6, r3
    87cc:	4605      	mov	r5, r0
    87ce:	4617      	mov	r7, r2
    87d0:	460b      	mov	r3, r1
    87d2:	f106 38ff 	add.w	r8, r6, #4294967295
    87d6:	b1a1      	cbz	r1, 8802 <RAILINT_33d661e401ffa5b40584048fe4dff1c2+0x4e>
    87d8:	6841      	ldr	r1, [r0, #4]
    87da:	ea04 0b08 	and.w	fp, r4, r8
    87de:	eba6 0a0b 	sub.w	sl, r6, fp
    87e2:	f041 5900 	orr.w	r9, r1, #536870912	; 0x20000000
    87e6:	4552      	cmp	r2, sl
    87e8:	eb09 010b 	add.w	r1, r9, fp
    87ec:	d918      	bls.n	8820 <RAILINT_33d661e401ffa5b40584048fe4dff1c2+0x6c>
    87ee:	4652      	mov	r2, sl
    87f0:	4618      	mov	r0, r3
    87f2:	f003 f967 	bl	bac4 <memcpy>
    87f6:	4649      	mov	r1, r9
    87f8:	1bba      	subs	r2, r7, r6
    87fa:	445a      	add	r2, fp
    87fc:	4450      	add	r0, sl
    87fe:	f003 f961 	bl	bac4 <memcpy>
    8802:	9b01      	ldr	r3, [sp, #4]
    8804:	b14b      	cbz	r3, 881a <RAILINT_33d661e401ffa5b40584048fe4dff1c2+0x66>
    8806:	443c      	add	r4, r7
    8808:	ea48 0606 	orr.w	r6, r8, r6
    880c:	4034      	ands	r4, r6
    880e:	60ec      	str	r4, [r5, #12]
    8810:	68ab      	ldr	r3, [r5, #8]
    8812:	42a3      	cmp	r3, r4
    8814:	bf1c      	itt	ne
    8816:	2302      	movne	r3, #2
    8818:	62ab      	strne	r3, [r5, #40]	; 0x28
    881a:	b003      	add	sp, #12
    881c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8820:	4618      	mov	r0, r3
    8822:	e7ec      	b.n	87fe <RAILINT_33d661e401ffa5b40584048fe4dff1c2+0x4a>

00008824 <RAILINT_893fd72dfcf6ebbe2598a01d375fa2c0>:
    8824:	4b12      	ldr	r3, [pc, #72]	; (8870 <RAILINT_893fd72dfcf6ebbe2598a01d375fa2c0+0x4c>)
    8826:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
    882a:	03d2      	lsls	r2, r2, #15
    882c:	d51e      	bpl.n	886c <RAILINT_893fd72dfcf6ebbe2598a01d375fa2c0+0x48>
    882e:	f44f 3280 	mov.w	r2, #65536	; 0x10000
    8832:	4910      	ldr	r1, [pc, #64]	; (8874 <RAILINT_893fd72dfcf6ebbe2598a01d375fa2c0+0x50>)
    8834:	f8c1 20e0 	str.w	r2, [r1, #224]	; 0xe0
    8838:	f5a1 5180 	sub.w	r1, r1, #4096	; 0x1000
    883c:	f8c1 20ec 	str.w	r2, [r1, #236]	; 0xec
    8840:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    8842:	b2d1      	uxtb	r1, r2
    8844:	f3c2 2207 	ubfx	r2, r2, #8, #8
    8848:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
    884c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    8850:	2204      	movs	r2, #4
    8852:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    8856:	2200      	movs	r2, #0
    8858:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    885c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    8860:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    8864:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    8868:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    886c:	4770      	bx	lr
    886e:	bf00      	nop
    8870:	44004000 	.word	0x44004000
    8874:	44006000 	.word	0x44006000

00008878 <RAILINT_86983bfebc3fcf81f3ab3444e4625a88>:
    8878:	b538      	push	{r3, r4, r5, lr}
    887a:	4c0c      	ldr	r4, [pc, #48]	; (88ac <RAILINT_86983bfebc3fcf81f3ab3444e4625a88+0x34>)
    887c:	460d      	mov	r5, r1
    887e:	60a2      	str	r2, [r4, #8]
    8880:	60e0      	str	r0, [r4, #12]
    8882:	f7fd fc03 	bl	608c <CORE_EnterCritical>
    8886:	2201      	movs	r2, #1
    8888:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
    888c:	6322      	str	r2, [r4, #48]	; 0x30
    888e:	075b      	lsls	r3, r3, #29
    8890:	bf5c      	itt	pl
    8892:	2204      	movpl	r2, #4
    8894:	4b06      	ldrpl	r3, [pc, #24]	; (88b0 <RAILINT_86983bfebc3fcf81f3ab3444e4625a88+0x38>)
    8896:	6125      	str	r5, [r4, #16]
    8898:	bf58      	it	pl
    889a:	f8c3 20e0 	strpl.w	r2, [r3, #224]	; 0xe0
    889e:	f7fd fbf9 	bl	6094 <CORE_ExitCritical>
    88a2:	b10d      	cbz	r5, 88a8 <RAILINT_86983bfebc3fcf81f3ab3444e4625a88+0x30>
    88a4:	2302      	movs	r3, #2
    88a6:	6323      	str	r3, [r4, #48]	; 0x30
    88a8:	bd38      	pop	{r3, r4, r5, pc}
    88aa:	bf00      	nop
    88ac:	44004000 	.word	0x44004000
    88b0:	44006000 	.word	0x44006000

000088b4 <RAILINT_cdbd2ef4368f95ff8e91482f629bd134>:
    88b4:	f640 72ff 	movw	r2, #4095	; 0xfff
    88b8:	4b03      	ldr	r3, [pc, #12]	; (88c8 <RAILINT_cdbd2ef4368f95ff8e91482f629bd134+0x14>)
    88ba:	6018      	str	r0, [r3, #0]
    88bc:	4b03      	ldr	r3, [pc, #12]	; (88cc <RAILINT_cdbd2ef4368f95ff8e91482f629bd134+0x18>)
    88be:	6399      	str	r1, [r3, #56]	; 0x38
    88c0:	63d8      	str	r0, [r3, #60]	; 0x3c
    88c2:	65da      	str	r2, [r3, #92]	; 0x5c
    88c4:	4770      	bx	lr
    88c6:	bf00      	nop
    88c8:	20000ce8 	.word	0x20000ce8
    88cc:	44004000 	.word	0x44004000

000088d0 <RAILINT_d098fb7ee08dc8d454a1df118de69bc4>:
    88d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    88d4:	2a04      	cmp	r2, #4
    88d6:	4605      	mov	r5, r0
    88d8:	b083      	sub	sp, #12
    88da:	d939      	bls.n	8950 <RAILINT_d098fb7ee08dc8d454a1df118de69bc4+0x80>
    88dc:	2601      	movs	r6, #1
    88de:	780b      	ldrb	r3, [r1, #0]
    88e0:	1f14      	subs	r4, r2, #4
    88e2:	6183      	str	r3, [r0, #24]
    88e4:	784b      	ldrb	r3, [r1, #1]
    88e6:	f101 0904 	add.w	r9, r1, #4
    88ea:	6183      	str	r3, [r0, #24]
    88ec:	788b      	ldrb	r3, [r1, #2]
    88ee:	6183      	str	r3, [r0, #24]
    88f0:	78cb      	ldrb	r3, [r1, #3]
    88f2:	6183      	str	r3, [r0, #24]
    88f4:	6803      	ldr	r3, [r0, #0]
    88f6:	f8d0 b008 	ldr.w	fp, [r0, #8]
    88fa:	f003 0307 	and.w	r3, r3, #7
    88fe:	3306      	adds	r3, #6
    8900:	409e      	lsls	r6, r3
    8902:	f106 3aff 	add.w	sl, r6, #4294967295
    8906:	ea0a 080b 	and.w	r8, sl, fp
    890a:	6847      	ldr	r7, [r0, #4]
    890c:	eba6 0208 	sub.w	r2, r6, r8
    8910:	4294      	cmp	r4, r2
    8912:	f047 5700 	orr.w	r7, r7, #536870912	; 0x20000000
    8916:	d80e      	bhi.n	8936 <RAILINT_d098fb7ee08dc8d454a1df118de69bc4+0x66>
    8918:	4649      	mov	r1, r9
    891a:	4622      	mov	r2, r4
    891c:	eb07 0008 	add.w	r0, r7, r8
    8920:	f003 f8d0 	bl	bac4 <memcpy>
    8924:	ea46 060a 	orr.w	r6, r6, sl
    8928:	eb04 020b 	add.w	r2, r4, fp
    892c:	4032      	ands	r2, r6
    892e:	60aa      	str	r2, [r5, #8]
    8930:	b003      	add	sp, #12
    8932:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8936:	4649      	mov	r1, r9
    8938:	eb07 0008 	add.w	r0, r7, r8
    893c:	9201      	str	r2, [sp, #4]
    893e:	f003 f8c1 	bl	bac4 <memcpy>
    8942:	9a01      	ldr	r2, [sp, #4]
    8944:	4638      	mov	r0, r7
    8946:	eb09 0102 	add.w	r1, r9, r2
    894a:	1ba2      	subs	r2, r4, r6
    894c:	4442      	add	r2, r8
    894e:	e7e7      	b.n	8920 <RAILINT_d098fb7ee08dc8d454a1df118de69bc4+0x50>
    8950:	3a01      	subs	r2, #1
    8952:	2a03      	cmp	r2, #3
    8954:	d8ec      	bhi.n	8930 <RAILINT_d098fb7ee08dc8d454a1df118de69bc4+0x60>
    8956:	e8df f002 	tbb	[pc, r2]
    895a:	080b      	.short	0x080b
    895c:	0205      	.short	0x0205
    895e:	f811 3b01 	ldrb.w	r3, [r1], #1
    8962:	6183      	str	r3, [r0, #24]
    8964:	f811 3b01 	ldrb.w	r3, [r1], #1
    8968:	61ab      	str	r3, [r5, #24]
    896a:	f811 3b01 	ldrb.w	r3, [r1], #1
    896e:	61ab      	str	r3, [r5, #24]
    8970:	780b      	ldrb	r3, [r1, #0]
    8972:	61ab      	str	r3, [r5, #24]
    8974:	b003      	add	sp, #12
    8976:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    897a:	bf00      	nop

0000897c <RAILINT_cf127192a488f2899b98e74293e0d50f>:
    897c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    897e:	2500      	movs	r5, #0
    8980:	4614      	mov	r4, r2
    8982:	9500      	str	r5, [sp, #0]
    8984:	f7ff ff16 	bl	87b4 <RAILINT_33d661e401ffa5b40584048fe4dff1c2>
    8988:	4620      	mov	r0, r4
    898a:	b003      	add	sp, #12
    898c:	bd30      	pop	{r4, r5, pc}
	...

00008990 <RAILINT_3ed2ccbe6359cb941c07e51a82b4c080>:
    8990:	2940      	cmp	r1, #64	; 0x40
    8992:	b538      	push	{r3, r4, r5, lr}
    8994:	4614      	mov	r4, r2
    8996:	f04f 0201 	mov.w	r2, #1
    899a:	d80d      	bhi.n	89b8 <RAILINT_3ed2ccbe6359cb941c07e51a82b4c080+0x28>
    899c:	4d08      	ldr	r5, [pc, #32]	; (89c0 <RAILINT_3ed2ccbe6359cb941c07e51a82b4c080+0x30>)
    899e:	f8c5 20c0 	str.w	r2, [r5, #192]	; 0xc0
    89a2:	460a      	mov	r2, r1
    89a4:	4601      	mov	r1, r0
    89a6:	4807      	ldr	r0, [pc, #28]	; (89c4 <RAILINT_3ed2ccbe6359cb941c07e51a82b4c080+0x34>)
    89a8:	f7ff ff92 	bl	88d0 <RAILINT_d098fb7ee08dc8d454a1df118de69bc4>
    89ac:	b134      	cbz	r4, 89bc <RAILINT_3ed2ccbe6359cb941c07e51a82b4c080+0x2c>
    89ae:	2304      	movs	r3, #4
    89b0:	2000      	movs	r0, #0
    89b2:	f8c5 30c0 	str.w	r3, [r5, #192]	; 0xc0
    89b6:	bd38      	pop	{r3, r4, r5, pc}
    89b8:	4610      	mov	r0, r2
    89ba:	e7fc      	b.n	89b6 <RAILINT_3ed2ccbe6359cb941c07e51a82b4c080+0x26>
    89bc:	4620      	mov	r0, r4
    89be:	e7fa      	b.n	89b6 <RAILINT_3ed2ccbe6359cb941c07e51a82b4c080+0x26>
    89c0:	44004000 	.word	0x44004000
    89c4:	44004098 	.word	0x44004098

000089c8 <RAILINT_6281eecc9c4ea6e1ecc523be2e1d48d2>:
    89c8:	b510      	push	{r4, lr}
    89ca:	f7fd fb5f 	bl	608c <CORE_EnterCritical>
    89ce:	2201      	movs	r2, #1
    89d0:	4b1b      	ldr	r3, [pc, #108]	; (8a40 <RAILINT_6281eecc9c4ea6e1ecc523be2e1d48d2+0x78>)
    89d2:	491c      	ldr	r1, [pc, #112]	; (8a44 <RAILINT_6281eecc9c4ea6e1ecc523be2e1d48d2+0x7c>)
    89d4:	661a      	str	r2, [r3, #96]	; 0x60
    89d6:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
    89da:	669a      	str	r2, [r3, #104]	; 0x68
    89dc:	66d9      	str	r1, [r3, #108]	; 0x6c
    89de:	2107      	movs	r1, #7
    89e0:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
    89e4:	4b18      	ldr	r3, [pc, #96]	; (8a48 <RAILINT_6281eecc9c4ea6e1ecc523be2e1d48d2+0x80>)
    89e6:	4c19      	ldr	r4, [pc, #100]	; (8a4c <RAILINT_6281eecc9c4ea6e1ecc523be2e1d48d2+0x84>)
    89e8:	8019      	strh	r1, [r3, #0]
    89ea:	2300      	movs	r3, #0
    89ec:	4918      	ldr	r1, [pc, #96]	; (8a50 <RAILINT_6281eecc9c4ea6e1ecc523be2e1d48d2+0x88>)
    89ee:	800b      	strh	r3, [r1, #0]
    89f0:	f44f 21a0 	mov.w	r1, #327680	; 0x50000
    89f4:	f8c4 10e0 	str.w	r1, [r4, #224]	; 0xe0
    89f8:	f5a4 5480 	sub.w	r4, r4, #4096	; 0x1000
    89fc:	f8c4 10ec 	str.w	r1, [r4, #236]	; 0xec
    8a00:	4914      	ldr	r1, [pc, #80]	; (8a54 <RAILINT_6281eecc9c4ea6e1ecc523be2e1d48d2+0x8c>)
    8a02:	600b      	str	r3, [r1, #0]
    8a04:	4b14      	ldr	r3, [pc, #80]	; (8a58 <RAILINT_6281eecc9c4ea6e1ecc523be2e1d48d2+0x90>)
    8a06:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    8a08:	025c      	lsls	r4, r3, #9
    8a0a:	d513      	bpl.n	8a34 <RAILINT_6281eecc9c4ea6e1ecc523be2e1d48d2+0x6c>
    8a0c:	f44f 0480 	mov.w	r4, #4194304	; 0x400000
    8a10:	4b12      	ldr	r3, [pc, #72]	; (8a5c <RAILINT_6281eecc9c4ea6e1ecc523be2e1d48d2+0x94>)
    8a12:	4913      	ldr	r1, [pc, #76]	; (8a60 <RAILINT_6281eecc9c4ea6e1ecc523be2e1d48d2+0x98>)
    8a14:	681b      	ldr	r3, [r3, #0]
    8a16:	670c      	str	r4, [r1, #112]	; 0x70
    8a18:	b183      	cbz	r3, 8a3c <RAILINT_6281eecc9c4ea6e1ecc523be2e1d48d2+0x74>
    8a1a:	6a99      	ldr	r1, [r3, #40]	; 0x28
    8a1c:	0609      	lsls	r1, r1, #24
    8a1e:	d409      	bmi.n	8a34 <RAILINT_6281eecc9c4ea6e1ecc523be2e1d48d2+0x6c>
    8a20:	f44f 1400 	mov.w	r4, #2097152	; 0x200000
    8a24:	f893 30be 	ldrb.w	r3, [r3, #190]	; 0xbe
    8a28:	490e      	ldr	r1, [pc, #56]	; (8a64 <RAILINT_6281eecc9c4ea6e1ecc523be2e1d48d2+0x9c>)
    8a2a:	620c      	str	r4, [r1, #32]
    8a2c:	b113      	cbz	r3, 8a34 <RAILINT_6281eecc9c4ea6e1ecc523be2e1d48d2+0x6c>
    8a2e:	4b0e      	ldr	r3, [pc, #56]	; (8a68 <RAILINT_6281eecc9c4ea6e1ecc523be2e1d48d2+0xa0>)
    8a30:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
    8a34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    8a38:	f7fd bb2c 	b.w	6094 <CORE_ExitCritical>
    8a3c:	69db      	ldr	r3, [r3, #28]
    8a3e:	deff      	udf	#255	; 0xff
    8a40:	44004000 	.word	0x44004000
    8a44:	20000cf0 	.word	0x20000cf0
    8a48:	20000d72 	.word	0x20000d72
    8a4c:	44006000 	.word	0x44006000
    8a50:	20000d70 	.word	0x20000d70
    8a54:	20000d74 	.word	0x20000d74
    8a58:	a8020000 	.word	0xa8020000
    8a5c:	20000aa8 	.word	0x20000aa8
    8a60:	a8022000 	.word	0xa8022000
    8a64:	a8016000 	.word	0xa8016000
    8a68:	a8015000 	.word	0xa8015000

00008a6c <RAILINT_32732aa1d78833fa65026efd536f2c3e>:
    8a6c:	2207      	movs	r2, #7
    8a6e:	4b0d      	ldr	r3, [pc, #52]	; (8aa4 <RAILINT_32732aa1d78833fa65026efd536f2c3e+0x38>)
    8a70:	21f0      	movs	r1, #240	; 0xf0
    8a72:	801a      	strh	r2, [r3, #0]
    8a74:	2200      	movs	r2, #0
    8a76:	4b0c      	ldr	r3, [pc, #48]	; (8aa8 <RAILINT_32732aa1d78833fa65026efd536f2c3e+0x3c>)
    8a78:	801a      	strh	r2, [r3, #0]
    8a7a:	4b0c      	ldr	r3, [pc, #48]	; (8aac <RAILINT_32732aa1d78833fa65026efd536f2c3e+0x40>)
    8a7c:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
    8a80:	f44f 5200 	mov.w	r2, #8192	; 0x2000
    8a84:	f8c3 009c 	str.w	r0, [r3, #156]	; 0x9c
    8a88:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
    8a8c:	4a08      	ldr	r2, [pc, #32]	; (8ab0 <RAILINT_32732aa1d78833fa65026efd536f2c3e+0x44>)
    8a8e:	6491      	str	r1, [r2, #72]	; 0x48
    8a90:	21a0      	movs	r1, #160	; 0xa0
    8a92:	f5a2 5280 	sub.w	r2, r2, #4096	; 0x1000
    8a96:	6491      	str	r1, [r2, #72]	; 0x48
    8a98:	2201      	movs	r2, #1
    8a9a:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
    8a9e:	f7ff bf93 	b.w	89c8 <RAILINT_6281eecc9c4ea6e1ecc523be2e1d48d2>
    8aa2:	bf00      	nop
    8aa4:	20000d72 	.word	0x20000d72
    8aa8:	20000d70 	.word	0x20000d70
    8aac:	44004000 	.word	0x44004000
    8ab0:	a8006000 	.word	0xa8006000

00008ab4 <RAILINT_af1bec131c155099f8156b6fce969aff>:
    8ab4:	4b04      	ldr	r3, [pc, #16]	; (8ac8 <RAILINT_af1bec131c155099f8156b6fce969aff+0x14>)
    8ab6:	6818      	ldr	r0, [r3, #0]
    8ab8:	b120      	cbz	r0, 8ac4 <RAILINT_af1bec131c155099f8156b6fce969aff+0x10>
    8aba:	f040 0201 	orr.w	r2, r0, #1
    8abe:	601a      	str	r2, [r3, #0]
    8ac0:	f020 0001 	bic.w	r0, r0, #1
    8ac4:	4770      	bx	lr
    8ac6:	bf00      	nop
    8ac8:	20000d74 	.word	0x20000d74

00008acc <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39>:
    8acc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    8ad0:	4604      	mov	r4, r0
    8ad2:	b1a0      	cbz	r0, 8afe <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0x32>
    8ad4:	f7fd fada 	bl	608c <CORE_EnterCritical>
    8ad8:	4e42      	ldr	r6, [pc, #264]	; (8be4 <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0x118>)
    8ada:	4b43      	ldr	r3, [pc, #268]	; (8be8 <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0x11c>)
    8adc:	8831      	ldrh	r1, [r6, #0]
    8ade:	2c03      	cmp	r4, #3
    8ae0:	f001 0278 	and.w	r2, r1, #120	; 0x78
    8ae4:	4605      	mov	r5, r0
    8ae6:	4f41      	ldr	r7, [pc, #260]	; (8bec <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0x120>)
    8ae8:	f001 0e7f 	and.w	lr, r1, #127	; 0x7f
    8aec:	441a      	add	r2, r3
    8aee:	d164      	bne.n	8bba <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0xee>
    8af0:	f8d7 c000 	ldr.w	ip, [r7]
    8af4:	f1bc 0f00 	cmp.w	ip, #0
    8af8:	d103      	bne.n	8b02 <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0x36>
    8afa:	f7fd facb 	bl	6094 <CORE_ExitCritical>
    8afe:	2003      	movs	r0, #3
    8b00:	e059      	b.n	8bb6 <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0xea>
    8b02:	f02c 0401 	bic.w	r4, ip, #1
    8b06:	6838      	ldr	r0, [r7, #0]
    8b08:	f020 0001 	bic.w	r0, r0, #1
    8b0c:	42a0      	cmp	r0, r4
    8b0e:	d159      	bne.n	8bc4 <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0xf8>
    8b10:	2300      	movs	r3, #0
    8b12:	603b      	str	r3, [r7, #0]
    8b14:	8823      	ldrh	r3, [r4, #0]
    8b16:	4294      	cmp	r4, r2
    8b18:	ea6f 4343 	mvn.w	r3, r3, lsl #17
    8b1c:	ea6f 4353 	mvn.w	r3, r3, lsr #17
    8b20:	8023      	strh	r3, [r4, #0]
    8b22:	d144      	bne.n	8bae <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0xe2>
    8b24:	4f32      	ldr	r7, [pc, #200]	; (8bf0 <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0x124>)
    8b26:	f8df c0e8 	ldr.w	ip, [pc, #232]	; 8c10 <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0x144>
    8b2a:	883b      	ldrh	r3, [r7, #0]
    8b2c:	f1ac 0880 	sub.w	r8, ip, #128	; 0x80
    8b30:	18cc      	adds	r4, r1, r3
    8b32:	3b08      	subs	r3, #8
    8b34:	b29b      	uxth	r3, r3
    8b36:	f102 0108 	add.w	r1, r2, #8
    8b3a:	4561      	cmp	r1, ip
    8b3c:	bf28      	it	cs
    8b3e:	4641      	movcs	r1, r8
    8b40:	1ae0      	subs	r0, r4, r3
    8b42:	2b08      	cmp	r3, #8
    8b44:	b280      	uxth	r0, r0
    8b46:	d904      	bls.n	8b52 <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0x86>
    8b48:	f9b1 e000 	ldrsh.w	lr, [r1]
    8b4c:	f1be 0f00 	cmp.w	lr, #0
    8b50:	db43      	blt.n	8bda <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0x10e>
    8b52:	7894      	ldrb	r4, [r2, #2]
    8b54:	8812      	ldrh	r2, [r2, #0]
    8b56:	4927      	ldr	r1, [pc, #156]	; (8bf4 <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0x128>)
    8b58:	f3c2 020c 	ubfx	r2, r2, #0, #13
    8b5c:	803b      	strh	r3, [r7, #0]
    8b5e:	644a      	str	r2, [r1, #68]	; 0x44
    8b60:	f44f 2280 	mov.w	r2, #262144	; 0x40000
    8b64:	b2c0      	uxtb	r0, r0
    8b66:	8030      	strh	r0, [r6, #0]
    8b68:	6748      	str	r0, [r1, #116]	; 0x74
    8b6a:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    8b6e:	4b22      	ldr	r3, [pc, #136]	; (8bf8 <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0x12c>)
    8b70:	f004 0407 	and.w	r4, r4, #7
    8b74:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
    8b78:	f7ff fe54 	bl	8824 <RAILINT_893fd72dfcf6ebbe2598a01d375fa2c0>
    8b7c:	2c04      	cmp	r4, #4
    8b7e:	d116      	bne.n	8bae <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0xe2>
    8b80:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
    8b84:	4b1d      	ldr	r3, [pc, #116]	; (8bfc <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0x130>)
    8b86:	4a1e      	ldr	r2, [pc, #120]	; (8c00 <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0x134>)
    8b88:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    8b8a:	4b1e      	ldr	r3, [pc, #120]	; (8c04 <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0x138>)
    8b8c:	681b      	ldr	r3, [r3, #0]
    8b8e:	6711      	str	r1, [r2, #112]	; 0x70
    8b90:	b32b      	cbz	r3, 8bde <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0x112>
    8b92:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    8b94:	0612      	lsls	r2, r2, #24
    8b96:	d40a      	bmi.n	8bae <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0xe2>
    8b98:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
    8b9c:	f893 30be 	ldrb.w	r3, [r3, #190]	; 0xbe
    8ba0:	4a19      	ldr	r2, [pc, #100]	; (8c08 <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0x13c>)
    8ba2:	6211      	str	r1, [r2, #32]
    8ba4:	b11b      	cbz	r3, 8bae <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0xe2>
    8ba6:	2201      	movs	r2, #1
    8ba8:	4b18      	ldr	r3, [pc, #96]	; (8c0c <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0x140>)
    8baa:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
    8bae:	4628      	mov	r0, r5
    8bb0:	f7fd fa70 	bl	6094 <CORE_ExitCritical>
    8bb4:	2000      	movs	r0, #0
    8bb6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    8bba:	1e60      	subs	r0, r4, #1
    8bbc:	2801      	cmp	r0, #1
    8bbe:	bf98      	it	ls
    8bc0:	4614      	movls	r4, r2
    8bc2:	e7a0      	b.n	8b06 <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0x3a>
    8bc4:	480a      	ldr	r0, [pc, #40]	; (8bf0 <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0x124>)
    8bc6:	4473      	add	r3, lr
    8bc8:	8800      	ldrh	r0, [r0, #0]
    8bca:	1ae3      	subs	r3, r4, r3
    8bcc:	bf48      	it	mi
    8bce:	3380      	addmi	r3, #128	; 0x80
    8bd0:	3808      	subs	r0, #8
    8bd2:	4298      	cmp	r0, r3
    8bd4:	dc9e      	bgt.n	8b14 <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0x48>
    8bd6:	4628      	mov	r0, r5
    8bd8:	e78f      	b.n	8afa <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0x2e>
    8bda:	460a      	mov	r2, r1
    8bdc:	e7a9      	b.n	8b32 <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39+0x66>
    8bde:	69db      	ldr	r3, [r3, #28]
    8be0:	deff      	udf	#255	; 0xff
    8be2:	bf00      	nop
    8be4:	20000d70 	.word	0x20000d70
    8be8:	20000cf0 	.word	0x20000cf0
    8bec:	20000d74 	.word	0x20000d74
    8bf0:	20000d72 	.word	0x20000d72
    8bf4:	44004000 	.word	0x44004000
    8bf8:	44006000 	.word	0x44006000
    8bfc:	a8020000 	.word	0xa8020000
    8c00:	a8022000 	.word	0xa8022000
    8c04:	20000aa8 	.word	0x20000aa8
    8c08:	a8016000 	.word	0xa8016000
    8c0c:	a8015000 	.word	0xa8015000
    8c10:	20000d70 	.word	0x20000d70

00008c14 <RAILINT_0906929bba6a17fd8a9605e65064a9f4>:
    8c14:	4810      	ldr	r0, [pc, #64]	; (8c58 <RAILINT_0906929bba6a17fd8a9605e65064a9f4+0x44>)
    8c16:	4a11      	ldr	r2, [pc, #68]	; (8c5c <RAILINT_0906929bba6a17fd8a9605e65064a9f4+0x48>)
    8c18:	8803      	ldrh	r3, [r0, #0]
    8c1a:	8812      	ldrh	r2, [r2, #0]
    8c1c:	4910      	ldr	r1, [pc, #64]	; (8c60 <RAILINT_0906929bba6a17fd8a9605e65064a9f4+0x4c>)
    8c1e:	441a      	add	r2, r3
    8c20:	3a07      	subs	r2, #7
    8c22:	f002 0278 	and.w	r2, r2, #120	; 0x78
    8c26:	440a      	add	r2, r1
    8c28:	3308      	adds	r3, #8
    8c2a:	490e      	ldr	r1, [pc, #56]	; (8c64 <RAILINT_0906929bba6a17fd8a9605e65064a9f4+0x50>)
    8c2c:	b29b      	uxth	r3, r3
    8c2e:	8003      	strh	r3, [r0, #0]
    8c30:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    8c34:	f44f 2180 	mov.w	r1, #262144	; 0x40000
    8c38:	7890      	ldrb	r0, [r2, #2]
    8c3a:	4b0b      	ldr	r3, [pc, #44]	; (8c68 <RAILINT_0906929bba6a17fd8a9605e65064a9f4+0x54>)
    8c3c:	f000 0007 	and.w	r0, r0, #7
    8c40:	2804      	cmp	r0, #4
    8c42:	f8c3 10e0 	str.w	r1, [r3, #224]	; 0xe0
    8c46:	d103      	bne.n	8c50 <RAILINT_0906929bba6a17fd8a9605e65064a9f4+0x3c>
    8c48:	4908      	ldr	r1, [pc, #32]	; (8c6c <RAILINT_0906929bba6a17fd8a9605e65064a9f4+0x58>)
    8c4a:	68cb      	ldr	r3, [r1, #12]
    8c4c:	031b      	lsls	r3, r3, #12
    8c4e:	d4fc      	bmi.n	8c4a <RAILINT_0906929bba6a17fd8a9605e65064a9f4+0x36>
    8c50:	4b07      	ldr	r3, [pc, #28]	; (8c70 <RAILINT_0906929bba6a17fd8a9605e65064a9f4+0x5c>)
    8c52:	601a      	str	r2, [r3, #0]
    8c54:	4770      	bx	lr
    8c56:	bf00      	nop
    8c58:	20000d72 	.word	0x20000d72
    8c5c:	20000d70 	.word	0x20000d70
    8c60:	20000cf0 	.word	0x20000cf0
    8c64:	44004000 	.word	0x44004000
    8c68:	44006000 	.word	0x44006000
    8c6c:	a8020000 	.word	0xa8020000
    8c70:	20000d74 	.word	0x20000d74

00008c74 <RAILINT_31258cb71f8a6b9069347d576bc679f0>:
    8c74:	b510      	push	{r4, lr}
    8c76:	4c05      	ldr	r4, [pc, #20]	; (8c8c <RAILINT_31258cb71f8a6b9069347d576bc679f0+0x18>)
    8c78:	6820      	ldr	r0, [r4, #0]
    8c7a:	b128      	cbz	r0, 8c88 <RAILINT_31258cb71f8a6b9069347d576bc679f0+0x14>
    8c7c:	07c3      	lsls	r3, r0, #31
    8c7e:	d401      	bmi.n	8c84 <RAILINT_31258cb71f8a6b9069347d576bc679f0+0x10>
    8c80:	f7ff ff24 	bl	8acc <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39>
    8c84:	2300      	movs	r3, #0
    8c86:	6023      	str	r3, [r4, #0]
    8c88:	bd10      	pop	{r4, pc}
    8c8a:	bf00      	nop
    8c8c:	20000d74 	.word	0x20000d74

00008c90 <RAILINT_6e9511005f24d0489b4328a9cd887def>:
    8c90:	f44f 3380 	mov.w	r3, #65536	; 0x10000
    8c94:	4a08      	ldr	r2, [pc, #32]	; (8cb8 <RAILINT_6e9511005f24d0489b4328a9cd887def+0x28>)
    8c96:	f8c2 30ec 	str.w	r3, [r2, #236]	; 0xec
    8c9a:	f5a2 5280 	sub.w	r2, r2, #4096	; 0x1000
    8c9e:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
    8ca2:	4b06      	ldr	r3, [pc, #24]	; (8cbc <RAILINT_6e9511005f24d0489b4328a9cd887def+0x2c>)
    8ca4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    8ca8:	f3c3 030c 	ubfx	r3, r3, #0, #13
    8cac:	2b78      	cmp	r3, #120	; 0x78
    8cae:	d801      	bhi.n	8cb4 <RAILINT_6e9511005f24d0489b4328a9cd887def+0x24>
    8cb0:	f7ff bdb8 	b.w	8824 <RAILINT_893fd72dfcf6ebbe2598a01d375fa2c0>
    8cb4:	4770      	bx	lr
    8cb6:	bf00      	nop
    8cb8:	44006000 	.word	0x44006000
    8cbc:	44004000 	.word	0x44004000

00008cc0 <RAILINT_3c133834576f64bd8ce53e3b0fe38f30>:
    8cc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    8cc4:	4605      	mov	r5, r0
    8cc6:	460e      	mov	r6, r1
    8cc8:	4614      	mov	r4, r2
    8cca:	f7fd f9df 	bl	608c <CORE_EnterCritical>
    8cce:	4b56      	ldr	r3, [pc, #344]	; (8e28 <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x168>)
    8cd0:	4681      	mov	r9, r0
    8cd2:	8819      	ldrh	r1, [r3, #0]
    8cd4:	4f55      	ldr	r7, [pc, #340]	; (8e2c <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x16c>)
    8cd6:	4856      	ldr	r0, [pc, #344]	; (8e30 <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x170>)
    8cd8:	f001 0278 	and.w	r2, r1, #120	; 0x78
    8cdc:	2d03      	cmp	r5, #3
    8cde:	f8b0 c000 	ldrh.w	ip, [r0]
    8ce2:	f001 037f 	and.w	r3, r1, #127	; 0x7f
    8ce6:	443a      	add	r2, r7
    8ce8:	d118      	bne.n	8d1c <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x5c>
    8cea:	4852      	ldr	r0, [pc, #328]	; (8e34 <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x174>)
    8cec:	6805      	ldr	r5, [r0, #0]
    8cee:	b995      	cbnz	r5, 8d16 <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x56>
    8cf0:	eb01 050c 	add.w	r5, r1, ip
    8cf4:	3d07      	subs	r5, #7
    8cf6:	f005 0578 	and.w	r5, r5, #120	; 0x78
    8cfa:	443d      	add	r5, r7
    8cfc:	443b      	add	r3, r7
    8cfe:	1aeb      	subs	r3, r5, r3
    8d00:	bf48      	it	mi
    8d02:	3380      	addmi	r3, #128	; 0x80
    8d04:	4563      	cmp	r3, ip
    8d06:	db11      	blt.n	8d2c <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x6c>
    8d08:	4648      	mov	r0, r9
    8d0a:	f7fd f9c3 	bl	6094 <CORE_ExitCritical>
    8d0e:	2500      	movs	r5, #0
    8d10:	4628      	mov	r0, r5
    8d12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    8d16:	f025 0501 	bic.w	r5, r5, #1
    8d1a:	e7ef      	b.n	8cfc <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x3c>
    8d1c:	2d01      	cmp	r5, #1
    8d1e:	d003      	beq.n	8d28 <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x68>
    8d20:	2d02      	cmp	r5, #2
    8d22:	d1eb      	bne.n	8cfc <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x3c>
    8d24:	f1ac 0c08 	sub.w	ip, ip, #8
    8d28:	4615      	mov	r5, r2
    8d2a:	e7e7      	b.n	8cfc <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x3c>
    8d2c:	b90e      	cbnz	r6, 8d32 <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x72>
    8d2e:	2c00      	cmp	r4, #0
    8d30:	d04b      	beq.n	8dca <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x10a>
    8d32:	4295      	cmp	r5, r2
    8d34:	d14d      	bne.n	8dd2 <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x112>
    8d36:	4a40      	ldr	r2, [pc, #256]	; (8e38 <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x178>)
    8d38:	6c57      	ldr	r7, [r2, #68]	; 0x44
    8d3a:	b2bf      	uxth	r7, r7
    8d3c:	b104      	cbz	r4, 8d40 <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x80>
    8d3e:	8027      	strh	r7, [r4, #0]
    8d40:	493d      	ldr	r1, [pc, #244]	; (8e38 <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x178>)
    8d42:	6b8a      	ldr	r2, [r1, #56]	; 0x38
    8d44:	2e00      	cmp	r6, #0
    8d46:	d040      	beq.n	8dca <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x10a>
    8d48:	f002 0a07 	and.w	sl, r2, #7
    8d4c:	f10a 0206 	add.w	r2, sl, #6
    8d50:	f04f 0a01 	mov.w	sl, #1
    8d54:	fa0a fa02 	lsl.w	sl, sl, r2
    8d58:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
    8d5c:	fa1f f88a 	uxth.w	r8, sl
    8d60:	f3c2 020c 	ubfx	r2, r2, #0, #13
    8d64:	429a      	cmp	r2, r3
    8d66:	dd46      	ble.n	8df6 <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x136>
    8d68:	f9b5 3000 	ldrsh.w	r3, [r5]
    8d6c:	882c      	ldrh	r4, [r5, #0]
    8d6e:	2b00      	cmp	r3, #0
    8d70:	dbca      	blt.n	8d08 <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x48>
    8d72:	78ab      	ldrb	r3, [r5, #2]
    8d74:	f3c4 040c 	ubfx	r4, r4, #0, #13
    8d78:	f108 32ff 	add.w	r2, r8, #4294967295
    8d7c:	f003 0307 	and.w	r3, r3, #7
    8d80:	1be4      	subs	r4, r4, r7
    8d82:	ea48 0202 	orr.w	r2, r8, r2
    8d86:	4014      	ands	r4, r2
    8d88:	2b05      	cmp	r3, #5
    8d8a:	7033      	strb	r3, [r6, #0]
    8d8c:	b2a4      	uxth	r4, r4
    8d8e:	d82a      	bhi.n	8de6 <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x126>
    8d90:	b224      	sxth	r4, r4
    8d92:	43e0      	mvns	r0, r4
    8d94:	f44f 7277 	mov.w	r2, #988	; 0x3dc
    8d98:	2104      	movs	r1, #4
    8d9a:	0fc0      	lsrs	r0, r0, #31
    8d9c:	f7fe f9a0 	bl	70e0 <RAILINT_205167ae842e22724c3f35c6430eeddb>
    8da0:	8074      	strh	r4, [r6, #2]
    8da2:	78eb      	ldrb	r3, [r5, #3]
    8da4:	7433      	strb	r3, [r6, #16]
    8da6:	f108 33ff 	add.w	r3, r8, #4294967295
    8daa:	401f      	ands	r7, r3
    8dac:	4b23      	ldr	r3, [pc, #140]	; (8e3c <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x17c>)
    8dae:	681b      	ldr	r3, [r3, #0]
    8db0:	19da      	adds	r2, r3, r7
    8db2:	60b2      	str	r2, [r6, #8]
    8db4:	b2a2      	uxth	r2, r4
    8db6:	fa17 f484 	uxtah	r4, r7, r4
    8dba:	4554      	cmp	r4, sl
    8dbc:	bfd3      	iteet	le
    8dbe:	2300      	movle	r3, #0
    8dc0:	eba8 0707 	subgt.w	r7, r8, r7
    8dc4:	80b7      	strhgt	r7, [r6, #4]
    8dc6:	80b2      	strhle	r2, [r6, #4]
    8dc8:	60f3      	str	r3, [r6, #12]
    8dca:	4648      	mov	r0, r9
    8dcc:	f7fd f962 	bl	6094 <CORE_ExitCritical>
    8dd0:	e79e      	b.n	8d10 <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x50>
    8dd2:	f1a5 0208 	sub.w	r2, r5, #8
    8dd6:	42ba      	cmp	r2, r7
    8dd8:	bf38      	it	cc
    8dda:	f105 0278 	addcc.w	r2, r5, #120	; 0x78
    8dde:	8817      	ldrh	r7, [r2, #0]
    8de0:	f3c7 070c 	ubfx	r7, r7, #0, #13
    8de4:	e7aa      	b.n	8d3c <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x7c>
    8de6:	4b16      	ldr	r3, [pc, #88]	; (8e40 <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x180>)
    8de8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    8dea:	2b00      	cmp	r3, #0
    8dec:	bf0c      	ite	eq
    8dee:	2300      	moveq	r3, #0
    8df0:	2306      	movne	r3, #6
    8df2:	1ae4      	subs	r4, r4, r3
    8df4:	e7cc      	b.n	8d90 <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0xd0>
    8df6:	6c0b      	ldr	r3, [r1, #64]	; 0x40
    8df8:	f108 34ff 	add.w	r4, r8, #4294967295
    8dfc:	1bdb      	subs	r3, r3, r7
    8dfe:	ea48 0404 	orr.w	r4, r8, r4
    8e02:	401c      	ands	r4, r3
    8e04:	4a0f      	ldr	r2, [pc, #60]	; (8e44 <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x184>)
    8e06:	b2a1      	uxth	r1, r4
    8e08:	68d3      	ldr	r3, [r2, #12]
    8e0a:	b224      	sxth	r4, r4
    8e0c:	b951      	cbnz	r1, 8e24 <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x164>
    8e0e:	f3c3 6303 	ubfx	r3, r3, #24, #4
    8e12:	2b03      	cmp	r3, #3
    8e14:	bf0c      	ite	eq
    8e16:	2308      	moveq	r3, #8
    8e18:	2300      	movne	r3, #0
    8e1a:	7033      	strb	r3, [r6, #0]
    8e1c:	6f93      	ldr	r3, [r2, #120]	; 0x78
    8e1e:	8071      	strh	r1, [r6, #2]
    8e20:	0a1b      	lsrs	r3, r3, #8
    8e22:	e7bf      	b.n	8da4 <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0xe4>
    8e24:	2308      	movs	r3, #8
    8e26:	e7f8      	b.n	8e1a <RAILINT_3c133834576f64bd8ce53e3b0fe38f30+0x15a>
    8e28:	20000d70 	.word	0x20000d70
    8e2c:	20000cf0 	.word	0x20000cf0
    8e30:	20000d72 	.word	0x20000d72
    8e34:	20000d74 	.word	0x20000d74
    8e38:	44004000 	.word	0x44004000
    8e3c:	20000ce8 	.word	0x20000ce8
    8e40:	a8004000 	.word	0xa8004000
    8e44:	a8020000 	.word	0xa8020000

00008e48 <RAILINT_37dcaf6b67da0fa3f13a9cf3e2b6a0ca>:
    8e48:	4b05      	ldr	r3, [pc, #20]	; (8e60 <RAILINT_37dcaf6b67da0fa3f13a9cf3e2b6a0ca+0x18>)
    8e4a:	226c      	movs	r2, #108	; 0x6c
    8e4c:	f8d3 014c 	ldr.w	r0, [r3, #332]	; 0x14c
    8e50:	2131      	movs	r1, #49	; 0x31
    8e52:	1c43      	adds	r3, r0, #1
    8e54:	bf0c      	ite	eq
    8e56:	2001      	moveq	r0, #1
    8e58:	f3c0 7080 	ubfxne	r0, r0, #30, #1
    8e5c:	f7fe b940 	b.w	70e0 <RAILINT_205167ae842e22724c3f35c6430eeddb>
    8e60:	0fe08000 	.word	0x0fe08000

00008e64 <RAILINT_349a796a787499e760b79c593a14f353>:
    8e64:	0040      	lsls	r0, r0, #1
    8e66:	b11a      	cbz	r2, 8e70 <RAILINT_349a796a787499e760b79c593a14f353+0xc>
    8e68:	2802      	cmp	r0, #2
    8e6a:	bf94      	ite	ls
    8e6c:	2000      	movls	r0, #0
    8e6e:	3803      	subhi	r0, #3
    8e70:	23fa      	movs	r3, #250	; 0xfa
    8e72:	f001 011f 	and.w	r1, r1, #31
    8e76:	4088      	lsls	r0, r1
    8e78:	4358      	muls	r0, r3
    8e7a:	4b03      	ldr	r3, [pc, #12]	; (8e88 <RAILINT_349a796a787499e760b79c593a14f353+0x24>)
    8e7c:	681b      	ldr	r3, [r3, #0]
    8e7e:	fbb0 f0f3 	udiv	r0, r0, r3
    8e82:	230a      	movs	r3, #10
    8e84:	4358      	muls	r0, r3
    8e86:	4770      	bx	lr
    8e88:	20000d7c 	.word	0x20000d7c

00008e8c <RAILINT_32f52767e5eabc91b1b4f9b9f833a69a>:
    8e8c:	b510      	push	{r4, lr}
    8e8e:	4604      	mov	r4, r0
    8e90:	4608      	mov	r0, r1
    8e92:	210f      	movs	r1, #15
    8e94:	f7ff ffe6 	bl	8e64 <RAILINT_349a796a787499e760b79c593a14f353>
    8e98:	fab4 f384 	clz	r3, r4
    8e9c:	fab0 f180 	clz	r1, r0
    8ea0:	4602      	mov	r2, r0
    8ea2:	1a5b      	subs	r3, r3, r1
    8ea4:	2b00      	cmp	r3, #0
    8ea6:	bfd1      	iteee	le
    8ea8:	200f      	movle	r0, #15
    8eaa:	f1c3 000f 	rsbgt	r0, r3, #15
    8eae:	f003 031f 	andgt.w	r3, r3, #31
    8eb2:	40da      	lsrgt	r2, r3
    8eb4:	42a2      	cmp	r2, r4
    8eb6:	bf88      	it	hi
    8eb8:	f100 30ff 	addhi.w	r0, r0, #4294967295
    8ebc:	bd10      	pop	{r4, pc}
	...

00008ec0 <RAILINT_538e671f17d827f5e8fbb6213721d612>:
    8ec0:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
    8ec4:	b508      	push	{r3, lr}
    8ec6:	4b13      	ldr	r3, [pc, #76]	; (8f14 <RAILINT_538e671f17d827f5e8fbb6213721d612+0x54>)
    8ec8:	f8d3 37fc 	ldr.w	r3, [r3, #2044]	; 0x7fc
    8ecc:	4293      	cmp	r3, r2
    8ece:	d017      	beq.n	8f00 <RAILINT_538e671f17d827f5e8fbb6213721d612+0x40>
    8ed0:	4a11      	ldr	r2, [pc, #68]	; (8f18 <RAILINT_538e671f17d827f5e8fbb6213721d612+0x58>)
    8ed2:	f003 013f 	and.w	r1, r3, #63	; 0x3f
    8ed6:	7011      	strb	r1, [r2, #0]
    8ed8:	f3c3 3203 	ubfx	r2, r3, #12, #4
    8edc:	f3c3 2103 	ubfx	r1, r3, #8, #4
    8ee0:	390f      	subs	r1, #15
    8ee2:	ebc2 1202 	rsb	r2, r2, r2, lsl #4
    8ee6:	440a      	add	r2, r1
    8ee8:	490c      	ldr	r1, [pc, #48]	; (8f1c <RAILINT_538e671f17d827f5e8fbb6213721d612+0x5c>)
    8eea:	700a      	strb	r2, [r1, #0]
    8eec:	f3c3 5203 	ubfx	r2, r3, #20, #4
    8ef0:	f3c3 4303 	ubfx	r3, r3, #16, #4
    8ef4:	ebc2 1202 	rsb	r2, r2, r2, lsl #4
    8ef8:	3b0f      	subs	r3, #15
    8efa:	4413      	add	r3, r2
    8efc:	4a08      	ldr	r2, [pc, #32]	; (8f20 <RAILINT_538e671f17d827f5e8fbb6213721d612+0x60>)
    8efe:	7013      	strb	r3, [r2, #0]
    8f00:	f000 fd0a 	bl	9918 <RAILINT_56a75a549239881c0b0573168dc43aff>
    8f04:	f641 036a 	movw	r3, #6250	; 0x186a
    8f08:	fbb0 f0f3 	udiv	r0, r0, r3
    8f0c:	4b05      	ldr	r3, [pc, #20]	; (8f24 <RAILINT_538e671f17d827f5e8fbb6213721d612+0x64>)
    8f0e:	6018      	str	r0, [r3, #0]
    8f10:	bd08      	pop	{r3, pc}
    8f12:	bf00      	nop
    8f14:	a8020000 	.word	0xa8020000
    8f18:	200001fa 	.word	0x200001fa
    8f1c:	200001fb 	.word	0x200001fb
    8f20:	200001f9 	.word	0x200001f9
    8f24:	20000d7c 	.word	0x20000d7c

00008f28 <RAILINT_1040bf941e847cb582a86b6ad519d354>:
    8f28:	2801      	cmp	r0, #1
    8f2a:	d007      	beq.n	8f3c <RAILINT_1040bf941e847cb582a86b6ad519d354+0x14>
    8f2c:	2802      	cmp	r0, #2
    8f2e:	d002      	beq.n	8f36 <RAILINT_1040bf941e847cb582a86b6ad519d354+0xe>
    8f30:	b130      	cbz	r0, 8f40 <RAILINT_1040bf941e847cb582a86b6ad519d354+0x18>
    8f32:	2000      	movs	r0, #0
    8f34:	4770      	bx	lr
    8f36:	4b03      	ldr	r3, [pc, #12]	; (8f44 <RAILINT_1040bf941e847cb582a86b6ad519d354+0x1c>)
    8f38:	7818      	ldrb	r0, [r3, #0]
    8f3a:	4770      	bx	lr
    8f3c:	4b02      	ldr	r3, [pc, #8]	; (8f48 <RAILINT_1040bf941e847cb582a86b6ad519d354+0x20>)
    8f3e:	e7fb      	b.n	8f38 <RAILINT_1040bf941e847cb582a86b6ad519d354+0x10>
    8f40:	4b02      	ldr	r3, [pc, #8]	; (8f4c <RAILINT_1040bf941e847cb582a86b6ad519d354+0x24>)
    8f42:	e7f9      	b.n	8f38 <RAILINT_1040bf941e847cb582a86b6ad519d354+0x10>
    8f44:	200001fa 	.word	0x200001fa
    8f48:	200001fb 	.word	0x200001fb
    8f4c:	200001f9 	.word	0x200001f9

00008f50 <RAILINT_0253fd9ac1e21acdc9ffa6ba468555a5>:
    8f50:	2300      	movs	r3, #0
    8f52:	b5f0      	push	{r4, r5, r6, r7, lr}
    8f54:	f890 10c0 	ldrb.w	r1, [r0, #192]	; 0xc0
    8f58:	b085      	sub	sp, #20
    8f5a:	4602      	mov	r2, r0
    8f5c:	4608      	mov	r0, r1
    8f5e:	e9cd 3301 	strd	r3, r3, [sp, #4]
    8f62:	f8cd 300b 	str.w	r3, [sp, #11]
    8f66:	f7ff ffdf 	bl	8f28 <RAILINT_1040bf941e847cb582a86b6ad519d354>
    8f6a:	7993      	ldrb	r3, [r2, #6]
    8f6c:	3801      	subs	r0, #1
    8f6e:	2900      	cmp	r1, #0
    8f70:	d040      	beq.n	8ff4 <RAILINT_0253fd9ac1e21acdc9ffa6ba468555a5+0xa4>
    8f72:	2901      	cmp	r1, #1
    8f74:	d13c      	bne.n	8ff0 <RAILINT_0253fd9ac1e21acdc9ffa6ba468555a5+0xa0>
    8f76:	2404      	movs	r4, #4
    8f78:	4619      	mov	r1, r3
    8f7a:	f04f 0c0f 	mov.w	ip, #15
    8f7e:	4e3c      	ldr	r6, [pc, #240]	; (9070 <RAILINT_0253fd9ac1e21acdc9ffa6ba468555a5+0x120>)
    8f80:	eb0d 0504 	add.w	r5, sp, r4
    8f84:	fbb1 f7fc 	udiv	r7, r1, ip
    8f88:	5df7      	ldrb	r7, [r6, r7]
    8f8a:	3c01      	subs	r4, #1
    8f8c:	1bc9      	subs	r1, r1, r7
    8f8e:	b2c9      	uxtb	r1, r1
    8f90:	4281      	cmp	r1, r0
    8f92:	bf88      	it	hi
    8f94:	2100      	movhi	r1, #0
    8f96:	5561      	strb	r1, [r4, r5]
    8f98:	2c00      	cmp	r4, #0
    8f9a:	d1f3      	bne.n	8f84 <RAILINT_0253fd9ac1e21acdc9ffa6ba468555a5+0x34>
    8f9c:	2105      	movs	r1, #5
    8f9e:	f04f 0c0f 	mov.w	ip, #15
    8fa2:	f88d 3008 	strb.w	r3, [sp, #8]
    8fa6:	b2c7      	uxtb	r7, r0
    8fa8:	fbb3 f4fc 	udiv	r4, r3, ip
    8fac:	5d34      	ldrb	r4, [r6, r4]
    8fae:	4423      	add	r3, r4
    8fb0:	b2db      	uxtb	r3, r3
    8fb2:	4283      	cmp	r3, r0
    8fb4:	bf28      	it	cs
    8fb6:	463b      	movcs	r3, r7
    8fb8:	546b      	strb	r3, [r5, r1]
    8fba:	3101      	adds	r1, #1
    8fbc:	290b      	cmp	r1, #11
    8fbe:	d1f3      	bne.n	8fa8 <RAILINT_0253fd9ac1e21acdc9ffa6ba468555a5+0x58>
    8fc0:	462e      	mov	r6, r5
    8fc2:	200f      	movs	r0, #15
    8fc4:	f102 04f0 	add.w	r4, r2, #240	; 0xf0
    8fc8:	f502 728e 	add.w	r2, r2, #284	; 0x11c
    8fcc:	f816 3b01 	ldrb.w	r3, [r6], #1
    8fd0:	fbb3 f1f0 	udiv	r1, r3, r0
    8fd4:	1c4d      	adds	r5, r1, #1
    8fd6:	ebc1 1101 	rsb	r1, r1, r1, lsl #4
    8fda:	1a5b      	subs	r3, r3, r1
    8fdc:	3301      	adds	r3, #1
    8fde:	b2db      	uxtb	r3, r3
    8fe0:	b2ed      	uxtb	r5, r5
    8fe2:	041b      	lsls	r3, r3, #16
    8fe4:	ea43 5305 	orr.w	r3, r3, r5, lsl #20
    8fe8:	f844 3b04 	str.w	r3, [r4], #4
    8fec:	42a2      	cmp	r2, r4
    8fee:	d1ed      	bne.n	8fcc <RAILINT_0253fd9ac1e21acdc9ffa6ba468555a5+0x7c>
    8ff0:	b005      	add	sp, #20
    8ff2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8ff4:	2404      	movs	r4, #4
    8ff6:	4619      	mov	r1, r3
    8ff8:	f04f 0c0f 	mov.w	ip, #15
    8ffc:	4f1d      	ldr	r7, [pc, #116]	; (9074 <RAILINT_0253fd9ac1e21acdc9ffa6ba468555a5+0x124>)
    8ffe:	eb0d 0604 	add.w	r6, sp, r4
    9002:	fbb1 f5fc 	udiv	r5, r1, ip
    9006:	b2ed      	uxtb	r5, r5
    9008:	5d7d      	ldrb	r5, [r7, r5]
    900a:	3c01      	subs	r4, #1
    900c:	1b49      	subs	r1, r1, r5
    900e:	b2c9      	uxtb	r1, r1
    9010:	4281      	cmp	r1, r0
    9012:	bf88      	it	hi
    9014:	2100      	movhi	r1, #0
    9016:	55a1      	strb	r1, [r4, r6]
    9018:	2c00      	cmp	r4, #0
    901a:	d1f2      	bne.n	9002 <RAILINT_0253fd9ac1e21acdc9ffa6ba468555a5+0xb2>
    901c:	2105      	movs	r1, #5
    901e:	f04f 0c0f 	mov.w	ip, #15
    9022:	f88d 3008 	strb.w	r3, [sp, #8]
    9026:	b2c5      	uxtb	r5, r0
    9028:	fbb3 f4fc 	udiv	r4, r3, ip
    902c:	5d3c      	ldrb	r4, [r7, r4]
    902e:	4423      	add	r3, r4
    9030:	b2db      	uxtb	r3, r3
    9032:	4283      	cmp	r3, r0
    9034:	bf28      	it	cs
    9036:	462b      	movcs	r3, r5
    9038:	5473      	strb	r3, [r6, r1]
    903a:	3101      	adds	r1, #1
    903c:	290b      	cmp	r1, #11
    903e:	d1f3      	bne.n	9028 <RAILINT_0253fd9ac1e21acdc9ffa6ba468555a5+0xd8>
    9040:	250f      	movs	r5, #15
    9042:	f102 04f0 	add.w	r4, r2, #240	; 0xf0
    9046:	f502 728e 	add.w	r2, r2, #284	; 0x11c
    904a:	f816 3b01 	ldrb.w	r3, [r6], #1
    904e:	fbb3 f1f5 	udiv	r1, r3, r5
    9052:	1c48      	adds	r0, r1, #1
    9054:	ebc1 1101 	rsb	r1, r1, r1, lsl #4
    9058:	1a5b      	subs	r3, r3, r1
    905a:	3301      	adds	r3, #1
    905c:	b2db      	uxtb	r3, r3
    905e:	b2c0      	uxtb	r0, r0
    9060:	041b      	lsls	r3, r3, #16
    9062:	ea43 5300 	orr.w	r3, r3, r0, lsl #20
    9066:	f844 3b04 	str.w	r3, [r4], #4
    906a:	42a2      	cmp	r2, r4
    906c:	d1ed      	bne.n	904a <RAILINT_0253fd9ac1e21acdc9ffa6ba468555a5+0xfa>
    906e:	e7bf      	b.n	8ff0 <RAILINT_0253fd9ac1e21acdc9ffa6ba468555a5+0xa0>
    9070:	0000bec4 	.word	0x0000bec4
    9074:	0000becb 	.word	0x0000becb

00009078 <RAILINT_08c8419aa71adfff4194c3a91186dc0b>:
    9078:	b538      	push	{r3, r4, r5, lr}
    907a:	4b24      	ldr	r3, [pc, #144]	; (910c <RAILINT_08c8419aa71adfff4194c3a91186dc0b+0x94>)
    907c:	4604      	mov	r4, r0
    907e:	7819      	ldrb	r1, [r3, #0]
    9080:	4a23      	ldr	r2, [pc, #140]	; (9110 <RAILINT_08c8419aa71adfff4194c3a91186dc0b+0x98>)
    9082:	2904      	cmp	r1, #4
    9084:	d102      	bne.n	908c <RAILINT_08c8419aa71adfff4194c3a91186dc0b+0x14>
    9086:	20ff      	movs	r0, #255	; 0xff
    9088:	7010      	strb	r0, [r2, #0]
    908a:	bd38      	pop	{r3, r4, r5, pc}
    908c:	4608      	mov	r0, r1
    908e:	f7ff ff4b 	bl	8f28 <RAILINT_1040bf941e847cb582a86b6ad519d354>
    9092:	42a0      	cmp	r0, r4
    9094:	bf28      	it	cs
    9096:	4620      	movcs	r0, r4
    9098:	7813      	ldrb	r3, [r2, #0]
    909a:	b2c0      	uxtb	r0, r0
    909c:	4283      	cmp	r3, r0
    909e:	d0f4      	beq.n	908a <RAILINT_08c8419aa71adfff4194c3a91186dc0b+0x12>
    90a0:	7010      	strb	r0, [r2, #0]
    90a2:	b108      	cbz	r0, 90a8 <RAILINT_08c8419aa71adfff4194c3a91186dc0b+0x30>
    90a4:	3801      	subs	r0, #1
    90a6:	b2c0      	uxtb	r0, r0
    90a8:	2902      	cmp	r1, #2
    90aa:	d10d      	bne.n	90c8 <RAILINT_08c8419aa71adfff4194c3a91186dc0b+0x50>
    90ac:	f04f 61fc 	mov.w	r1, #132120576	; 0x7e00000
    90b0:	4b18      	ldr	r3, [pc, #96]	; (9114 <RAILINT_08c8419aa71adfff4194c3a91186dc0b+0x9c>)
    90b2:	f8c3 10fc 	str.w	r1, [r3, #252]	; 0xfc
    90b6:	4918      	ldr	r1, [pc, #96]	; (9118 <RAILINT_08c8419aa71adfff4194c3a91186dc0b+0xa0>)
    90b8:	f8d1 30fc 	ldr.w	r3, [r1, #252]	; 0xfc
    90bc:	ea43 5040 	orr.w	r0, r3, r0, lsl #21
    90c0:	f8c1 00fc 	str.w	r0, [r1, #252]	; 0xfc
    90c4:	7810      	ldrb	r0, [r2, #0]
    90c6:	e7e0      	b.n	908a <RAILINT_08c8419aa71adfff4194c3a91186dc0b+0x12>
    90c8:	4b14      	ldr	r3, [pc, #80]	; (911c <RAILINT_08c8419aa71adfff4194c3a91186dc0b+0xa4>)
    90ca:	681b      	ldr	r3, [r3, #0]
    90cc:	b103      	cbz	r3, 90d0 <RAILINT_08c8419aa71adfff4194c3a91186dc0b+0x58>
    90ce:	330c      	adds	r3, #12
    90d0:	4913      	ldr	r1, [pc, #76]	; (9120 <RAILINT_08c8419aa71adfff4194c3a91186dc0b+0xa8>)
    90d2:	33f0      	adds	r3, #240	; 0xf0
    90d4:	f8c1 3fbc 	str.w	r3, [r1, #4028]	; 0xfbc
    90d8:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
    90dc:	4b0d      	ldr	r3, [pc, #52]	; (9114 <RAILINT_08c8419aa71adfff4194c3a91186dc0b+0x9c>)
    90de:	f8c3 1108 	str.w	r1, [r3, #264]	; 0x108
    90e2:	490d      	ldr	r1, [pc, #52]	; (9118 <RAILINT_08c8419aa71adfff4194c3a91186dc0b+0xa0>)
    90e4:	6fcb      	ldr	r3, [r1, #124]	; 0x7c
    90e6:	02db      	lsls	r3, r3, #11
    90e8:	d4ec      	bmi.n	90c4 <RAILINT_08c8419aa71adfff4194c3a91186dc0b+0x4c>
    90ea:	230f      	movs	r3, #15
    90ec:	fbb0 f3f3 	udiv	r3, r0, r3
    90f0:	1c5d      	adds	r5, r3, #1
    90f2:	ebc3 1303 	rsb	r3, r3, r3, lsl #4
    90f6:	1ac3      	subs	r3, r0, r3
    90f8:	3301      	adds	r3, #1
    90fa:	f8d1 4108 	ldr.w	r4, [r1, #264]	; 0x108
    90fe:	041b      	lsls	r3, r3, #16
    9100:	ea43 5305 	orr.w	r3, r3, r5, lsl #20
    9104:	4323      	orrs	r3, r4
    9106:	f8c1 3108 	str.w	r3, [r1, #264]	; 0x108
    910a:	e7db      	b.n	90c4 <RAILINT_08c8419aa71adfff4194c3a91186dc0b+0x4c>
    910c:	200001ea 	.word	0x200001ea
    9110:	200001e8 	.word	0x200001e8
    9114:	a8022000 	.word	0xa8022000
    9118:	a8020000 	.word	0xa8020000
    911c:	20000aa8 	.word	0x20000aa8
    9120:	b0001000 	.word	0xb0001000

00009124 <RAILINT_da84b4d83e32af60304869814f893155>:
    9124:	4b01      	ldr	r3, [pc, #4]	; (912c <RAILINT_da84b4d83e32af60304869814f893155+0x8>)
    9126:	6818      	ldr	r0, [r3, #0]
    9128:	4770      	bx	lr
    912a:	bf00      	nop
    912c:	20000d80 	.word	0x20000d80

00009130 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134>:
    9130:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9134:	f890 90c0 	ldrb.w	r9, [r0, #192]	; 0xc0
    9138:	4680      	mov	r8, r0
    913a:	f8d0 1144 	ldr.w	r1, [r0, #324]	; 0x144
    913e:	f1b9 0f00 	cmp.w	r9, #0
    9142:	d129      	bne.n	9198 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x68>
    9144:	291f      	cmp	r1, #31
    9146:	bf38      	it	cc
    9148:	211f      	movcc	r1, #31
    914a:	3909      	subs	r1, #9
    914c:	4b96      	ldr	r3, [pc, #600]	; (93a8 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x278>)
    914e:	6a1a      	ldr	r2, [r3, #32]
    9150:	f3c2 1282 	ubfx	r2, r2, #6, #3
    9154:	1e93      	subs	r3, r2, #2
    9156:	2b01      	cmp	r3, #1
    9158:	d923      	bls.n	91a2 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x72>
    915a:	1f93      	subs	r3, r2, #6
    915c:	f1d3 0a00 	rsbs	sl, r3, #0
    9160:	eb4a 0a03 	adc.w	sl, sl, r3
    9164:	4c91      	ldr	r4, [pc, #580]	; (93ac <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x27c>)
    9166:	4650      	mov	r0, sl
    9168:	6823      	ldr	r3, [r4, #0]
    916a:	f898 5006 	ldrb.w	r5, [r8, #6]
    916e:	428b      	cmp	r3, r1
    9170:	f8df b260 	ldr.w	fp, [pc, #608]	; 93d4 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x2a4>
    9174:	4b8e      	ldr	r3, [pc, #568]	; (93b0 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x280>)
    9176:	d117      	bne.n	91a8 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x78>
    9178:	781e      	ldrb	r6, [r3, #0]
    917a:	4556      	cmp	r6, sl
    917c:	d114      	bne.n	91a8 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x78>
    917e:	4a8d      	ldr	r2, [pc, #564]	; (93b4 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x284>)
    9180:	7816      	ldrb	r6, [r2, #0]
    9182:	454e      	cmp	r6, r9
    9184:	d110      	bne.n	91a8 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x78>
    9186:	4a8c      	ldr	r2, [pc, #560]	; (93b8 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x288>)
    9188:	7816      	ldrb	r6, [r2, #0]
    918a:	42ae      	cmp	r6, r5
    918c:	d10c      	bne.n	91a8 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x78>
    918e:	f8bb 0004 	ldrh.w	r0, [fp, #4]
    9192:	b003      	add	sp, #12
    9194:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9198:	2903      	cmp	r1, #3
    919a:	bf38      	it	cc
    919c:	2103      	movcc	r1, #3
    919e:	3902      	subs	r1, #2
    91a0:	e7d4      	b.n	914c <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x1c>
    91a2:	f04f 0a01 	mov.w	sl, #1
    91a6:	e7dd      	b.n	9164 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x34>
    91a8:	7018      	strb	r0, [r3, #0]
    91aa:	f89b 0000 	ldrb.w	r0, [fp]
    91ae:	6021      	str	r1, [r4, #0]
    91b0:	f7ff feba 	bl	8f28 <RAILINT_1040bf941e847cb582a86b6ad519d354>
    91b4:	42a8      	cmp	r0, r5
    91b6:	d312      	bcc.n	91de <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0xae>
    91b8:	2d01      	cmp	r5, #1
    91ba:	d814      	bhi.n	91e6 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0xb6>
    91bc:	2500      	movs	r5, #0
    91be:	f1ba 0f00 	cmp.w	sl, #0
    91c2:	d012      	beq.n	91ea <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0xba>
    91c4:	f8d8 5078 	ldr.w	r5, [r8, #120]	; 0x78
    91c8:	b12d      	cbz	r5, 91d6 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0xa6>
    91ca:	682b      	ldr	r3, [r5, #0]
    91cc:	2b08      	cmp	r3, #8
    91ce:	f240 80d7 	bls.w	9380 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x250>
    91d2:	f895 5038 	ldrb.w	r5, [r5, #56]	; 0x38
    91d6:	f1b9 0f00 	cmp.w	r9, #0
    91da:	d110      	bne.n	91fe <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0xce>
    91dc:	e057      	b.n	928e <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x15e>
    91de:	2801      	cmp	r0, #1
    91e0:	d9ec      	bls.n	91bc <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x8c>
    91e2:	1e45      	subs	r5, r0, #1
    91e4:	e7eb      	b.n	91be <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x8e>
    91e6:	3d01      	subs	r5, #1
    91e8:	e7e9      	b.n	91be <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x8e>
    91ea:	f1b9 0f01 	cmp.w	r9, #1
    91ee:	d01f      	beq.n	9230 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x100>
    91f0:	f1b9 0f02 	cmp.w	r9, #2
    91f4:	d003      	beq.n	91fe <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0xce>
    91f6:	f1b9 0f00 	cmp.w	r9, #0
    91fa:	d02a      	beq.n	9252 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x122>
    91fc:	4655      	mov	r5, sl
    91fe:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    9202:	4348      	muls	r0, r1
    9204:	2201      	movs	r2, #1
    9206:	4629      	mov	r1, r5
    9208:	f200 30e7 	addw	r0, r0, #999	; 0x3e7
    920c:	f7ff fe3e 	bl	8e8c <RAILINT_32f52767e5eabc91b1b4f9b9f833a69a>
    9210:	0204      	lsls	r4, r0, #8
    9212:	ea44 1400 	orr.w	r4, r4, r0, lsl #4
    9216:	4601      	mov	r1, r0
    9218:	2201      	movs	r2, #1
    921a:	4304      	orrs	r4, r0
    921c:	4628      	mov	r0, r5
    921e:	f7ff fe21 	bl	8e64 <RAILINT_349a796a787499e760b79c593a14f353>
    9222:	042e      	lsls	r6, r5, #16
    9224:	ea46 2605 	orr.w	r6, r6, r5, lsl #8
    9228:	432e      	orrs	r6, r5
    922a:	f500 65fa 	add.w	r5, r0, #2000	; 0x7d0
    922e:	e071      	b.n	9314 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x1e4>
    9230:	230f      	movs	r3, #15
    9232:	b2ed      	uxtb	r5, r5
    9234:	fbb5 f3f3 	udiv	r3, r5, r3
    9238:	1c58      	adds	r0, r3, #1
    923a:	ebc3 1303 	rsb	r3, r3, r3, lsl #4
    923e:	1aed      	subs	r5, r5, r3
    9240:	3501      	adds	r5, #1
    9242:	b2ed      	uxtb	r5, r5
    9244:	b2c0      	uxtb	r0, r0
    9246:	042d      	lsls	r5, r5, #16
    9248:	ea45 5500 	orr.w	r5, r5, r0, lsl #20
    924c:	f3c5 4507 	ubfx	r5, r5, #16, #8
    9250:	e7d5      	b.n	91fe <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0xce>
    9252:	4c5a      	ldr	r4, [pc, #360]	; (93bc <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x28c>)
    9254:	4b5a      	ldr	r3, [pc, #360]	; (93c0 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x290>)
    9256:	7824      	ldrb	r4, [r4, #0]
    9258:	6818      	ldr	r0, [r3, #0]
    925a:	2c00      	cmp	r4, #0
    925c:	f000 8092 	beq.w	9384 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x254>
    9260:	f1b0 6fa0 	cmp.w	r0, #83886080	; 0x5000000
    9264:	f0c0 808e 	bcc.w	9384 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x254>
    9268:	f8d3 0250 	ldr.w	r0, [r3, #592]	; 0x250
    926c:	3001      	adds	r0, #1
    926e:	f000 8089 	beq.w	9384 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x254>
    9272:	200f      	movs	r0, #15
    9274:	fbb5 f5f0 	udiv	r5, r5, r0
    9278:	1c68      	adds	r0, r5, #1
    927a:	2804      	cmp	r0, #4
    927c:	d870      	bhi.n	9360 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x230>
    927e:	20ff      	movs	r0, #255	; 0xff
    9280:	00ed      	lsls	r5, r5, #3
    9282:	f8d3 3250 	ldr.w	r3, [r3, #592]	; 0x250
    9286:	40a8      	lsls	r0, r5
    9288:	4018      	ands	r0, r3
    928a:	fa20 f505 	lsr.w	r5, r0, r5
    928e:	f44f 777a 	mov.w	r7, #1000	; 0x3e8
    9292:	434f      	muls	r7, r1
    9294:	042e      	lsls	r6, r5, #16
    9296:	f207 37e7 	addw	r7, r7, #999	; 0x3e7
    929a:	f1ba 0f00 	cmp.w	sl, #0
    929e:	d173      	bne.n	9388 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x258>
    92a0:	2029      	movs	r0, #41	; 0x29
    92a2:	2364      	movs	r3, #100	; 0x64
    92a4:	4378      	muls	r0, r7
    92a6:	3d40      	subs	r5, #64	; 0x40
    92a8:	4652      	mov	r2, sl
    92aa:	4629      	mov	r1, r5
    92ac:	fbb0 f0f3 	udiv	r0, r0, r3
    92b0:	f7ff fdec 	bl	8e8c <RAILINT_32f52767e5eabc91b1b4f9b9f833a69a>
    92b4:	4652      	mov	r2, sl
    92b6:	4601      	mov	r1, r0
    92b8:	4604      	mov	r4, r0
    92ba:	4628      	mov	r0, r5
    92bc:	f7ff fdd2 	bl	8e64 <RAILINT_349a796a787499e760b79c593a14f353>
    92c0:	1a3f      	subs	r7, r7, r0
    92c2:	4605      	mov	r5, r0
    92c4:	202a      	movs	r0, #42	; 0x2a
    92c6:	2364      	movs	r3, #100	; 0x64
    92c8:	4378      	muls	r0, r7
    92ca:	2130      	movs	r1, #48	; 0x30
    92cc:	fbb0 f0f3 	udiv	r0, r0, r3
    92d0:	f7ff fddc 	bl	8e8c <RAILINT_32f52767e5eabc91b1b4f9b9f833a69a>
    92d4:	4652      	mov	r2, sl
    92d6:	4601      	mov	r1, r0
    92d8:	9001      	str	r0, [sp, #4]
    92da:	2030      	movs	r0, #48	; 0x30
    92dc:	f7ff fdc2 	bl	8e64 <RAILINT_349a796a787499e760b79c593a14f353>
    92e0:	2201      	movs	r2, #1
    92e2:	4682      	mov	sl, r0
    92e4:	2110      	movs	r1, #16
    92e6:	1a38      	subs	r0, r7, r0
    92e8:	f7ff fdd0 	bl	8e8c <RAILINT_32f52767e5eabc91b1b4f9b9f833a69a>
    92ec:	2201      	movs	r2, #1
    92ee:	4607      	mov	r7, r0
    92f0:	4601      	mov	r1, r0
    92f2:	2010      	movs	r0, #16
    92f4:	f7ff fdb6 	bl	8e64 <RAILINT_349a796a787499e760b79c593a14f353>
    92f8:	9b01      	ldr	r3, [sp, #4]
    92fa:	0224      	lsls	r4, r4, #8
    92fc:	ea44 1403 	orr.w	r4, r4, r3, lsl #4
    9300:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
    9304:	44aa      	add	sl, r5
    9306:	433c      	orrs	r4, r7
    9308:	f046 0610 	orr.w	r6, r6, #16
    930c:	4450      	add	r0, sl
    930e:	4b2d      	ldr	r3, [pc, #180]	; (93c4 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x294>)
    9310:	681d      	ldr	r5, [r3, #0]
    9312:	4405      	add	r5, r0
    9314:	f640 72ff 	movw	r2, #4095	; 0xfff
    9318:	4b2b      	ldr	r3, [pc, #172]	; (93c8 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x298>)
    931a:	4628      	mov	r0, r5
    931c:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
    9320:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
    9324:	f8c3 40c0 	str.w	r4, [r3, #192]	; 0xc0
    9328:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
    932c:	4c27      	ldr	r4, [pc, #156]	; (93cc <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x29c>)
    932e:	f8c3 60c4 	str.w	r6, [r3, #196]	; 0xc4
    9332:	6025      	str	r5, [r4, #0]
    9334:	f000 ff1e 	bl	a174 <RAILINT_06b1ea13261364007801a74aa7e1e357>
    9338:	4b25      	ldr	r3, [pc, #148]	; (93d0 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x2a0>)
    933a:	4240      	negs	r0, r0
    933c:	6618      	str	r0, [r3, #96]	; 0x60
    933e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    9342:	6823      	ldr	r3, [r4, #0]
    9344:	4a1c      	ldr	r2, [pc, #112]	; (93b8 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x288>)
    9346:	fbb3 f3f0 	udiv	r3, r3, r0
    934a:	f8ab 3004 	strh.w	r3, [fp, #4]
    934e:	4b19      	ldr	r3, [pc, #100]	; (93b4 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x284>)
    9350:	fbb5 f0f0 	udiv	r0, r5, r0
    9354:	f883 9000 	strb.w	r9, [r3]
    9358:	f898 3006 	ldrb.w	r3, [r8, #6]
    935c:	7013      	strb	r3, [r2, #0]
    935e:	e718      	b.n	9192 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x62>
    9360:	2808      	cmp	r0, #8
    9362:	f04f 00ff 	mov.w	r0, #255	; 0xff
    9366:	bf95      	itete	ls
    9368:	3d04      	subls	r5, #4
    936a:	3d08      	subhi	r5, #8
    936c:	f8d3 4254 	ldrls.w	r4, [r3, #596]	; 0x254
    9370:	f8d3 4258 	ldrhi.w	r4, [r3, #600]	; 0x258
    9374:	00eb      	lsls	r3, r5, #3
    9376:	fa00 f503 	lsl.w	r5, r0, r3
    937a:	4025      	ands	r5, r4
    937c:	40dd      	lsrs	r5, r3
    937e:	e786      	b.n	928e <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x15e>
    9380:	2500      	movs	r5, #0
    9382:	e728      	b.n	91d6 <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0xa6>
    9384:	25c8      	movs	r5, #200	; 0xc8
    9386:	e782      	b.n	928e <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x15e>
    9388:	2200      	movs	r2, #0
    938a:	4629      	mov	r1, r5
    938c:	4638      	mov	r0, r7
    938e:	f7ff fd7d 	bl	8e8c <RAILINT_32f52767e5eabc91b1b4f9b9f833a69a>
    9392:	4604      	mov	r4, r0
    9394:	4601      	mov	r1, r0
    9396:	2200      	movs	r2, #0
    9398:	4628      	mov	r0, r5
    939a:	0224      	lsls	r4, r4, #8
    939c:	f7ff fd62 	bl	8e64 <RAILINT_349a796a787499e760b79c593a14f353>
    93a0:	f044 0411 	orr.w	r4, r4, #17
    93a4:	e7b3      	b.n	930e <RAILINT_692f9e407ff0da6bb4b5f2aa1969c134+0x1de>
    93a6:	bf00      	nop
    93a8:	a8014000 	.word	0xa8014000
    93ac:	200001e4 	.word	0x200001e4
    93b0:	20000d78 	.word	0x20000d78
    93b4:	200001f1 	.word	0x200001f1
    93b8:	200001f0 	.word	0x200001f0
    93bc:	200001f8 	.word	0x200001f8
    93c0:	0fe08000 	.word	0x0fe08000
    93c4:	200001f4 	.word	0x200001f4
    93c8:	a8016000 	.word	0xa8016000
    93cc:	20000d80 	.word	0x20000d80
    93d0:	b0001f00 	.word	0xb0001f00
    93d4:	200001ea 	.word	0x200001ea

000093d8 <RAILINT_ac4c341889862730c8d820dc51f851c9>:
    93d8:	b538      	push	{r3, r4, r5, lr}
    93da:	4605      	mov	r5, r0
    93dc:	4c31      	ldr	r4, [pc, #196]	; (94a4 <RAILINT_ac4c341889862730c8d820dc51f851c9+0xcc>)
    93de:	f000 fa51 	bl	9884 <RAILINT_ff78d9bb4bfe772063473783474f9dc5>
    93e2:	4b31      	ldr	r3, [pc, #196]	; (94a8 <RAILINT_ac4c341889862730c8d820dc51f851c9+0xd0>)
    93e4:	701d      	strb	r5, [r3, #0]
    93e6:	7823      	ldrb	r3, [r4, #0]
    93e8:	3b01      	subs	r3, #1
    93ea:	2b01      	cmp	r3, #1
    93ec:	d80c      	bhi.n	9408 <RAILINT_ac4c341889862730c8d820dc51f851c9+0x30>
    93ee:	2201      	movs	r2, #1
    93f0:	7c21      	ldrb	r1, [r4, #16]
    93f2:	7be3      	ldrb	r3, [r4, #15]
    93f4:	408a      	lsls	r2, r1
    93f6:	2130      	movs	r1, #48	; 0x30
    93f8:	434b      	muls	r3, r1
    93fa:	f242 0110 	movw	r1, #8208	; 0x2010
    93fe:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
    9402:	f503 3370 	add.w	r3, r3, #245760	; 0x3c000
    9406:	505a      	str	r2, [r3, r1]
    9408:	2200      	movs	r2, #0
    940a:	4b28      	ldr	r3, [pc, #160]	; (94ac <RAILINT_ac4c341889862730c8d820dc51f851c9+0xd4>)
    940c:	f8c3 2484 	str.w	r2, [r3, #1156]	; 0x484
    9410:	2d00      	cmp	r5, #0
    9412:	d03f      	beq.n	9494 <RAILINT_ac4c341889862730c8d820dc51f851c9+0xbc>
    9414:	6863      	ldr	r3, [r4, #4]
    9416:	b39b      	cbz	r3, 9480 <RAILINT_ac4c341889862730c8d820dc51f851c9+0xa8>
    9418:	f000 fa7e 	bl	9918 <RAILINT_56a75a549239881c0b0573168dc43aff>
    941c:	6862      	ldr	r2, [r4, #4]
    941e:	eb00 0352 	add.w	r3, r0, r2, lsr #1
    9422:	fbb3 f3f2 	udiv	r3, r3, r2
    9426:	3b01      	subs	r3, #1
    9428:	021b      	lsls	r3, r3, #8
    942a:	f043 03f8 	orr.w	r3, r3, #248	; 0xf8
    942e:	7822      	ldrb	r2, [r4, #0]
    9430:	2a02      	cmp	r2, #2
    9432:	d027      	beq.n	9484 <RAILINT_ac4c341889862730c8d820dc51f851c9+0xac>
    9434:	2a03      	cmp	r2, #3
    9436:	d029      	beq.n	948c <RAILINT_ac4c341889862730c8d820dc51f851c9+0xb4>
    9438:	2a01      	cmp	r2, #1
    943a:	d12e      	bne.n	949a <RAILINT_ac4c341889862730c8d820dc51f851c9+0xc2>
    943c:	2207      	movs	r2, #7
    943e:	f043 0302 	orr.w	r3, r3, #2
    9442:	f64f 70ff 	movw	r0, #65535	; 0xffff
    9446:	491a      	ldr	r1, [pc, #104]	; (94b0 <RAILINT_ac4c341889862730c8d820dc51f851c9+0xd8>)
    9448:	f8c1 0084 	str.w	r0, [r1, #132]	; 0x84
    944c:	f5a1 5180 	sub.w	r1, r1, #4096	; 0x1000
    9450:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    9454:	4b15      	ldr	r3, [pc, #84]	; (94ac <RAILINT_ac4c341889862730c8d820dc51f851c9+0xd4>)
    9456:	f8c3 2484 	str.w	r2, [r3, #1156]	; 0x484
    945a:	0792      	lsls	r2, r2, #30
    945c:	d509      	bpl.n	9472 <RAILINT_ac4c341889862730c8d820dc51f851c9+0x9a>
    945e:	2201      	movs	r2, #1
    9460:	7c20      	ldrb	r0, [r4, #16]
    9462:	7be1      	ldrb	r1, [r4, #15]
    9464:	4082      	lsls	r2, r0
    9466:	2030      	movs	r0, #48	; 0x30
    9468:	fb00 3301 	mla	r3, r0, r1, r3
    946c:	f241 0110 	movw	r1, #4112	; 0x1010
    9470:	505a      	str	r2, [r3, r1]
    9472:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    9476:	b195      	cbz	r5, 949e <RAILINT_ac4c341889862730c8d820dc51f851c9+0xc6>
    9478:	4a0e      	ldr	r2, [pc, #56]	; (94b4 <RAILINT_ac4c341889862730c8d820dc51f851c9+0xdc>)
    947a:	2000      	movs	r0, #0
    947c:	67d3      	str	r3, [r2, #124]	; 0x7c
    947e:	bd38      	pop	{r3, r4, r5, pc}
    9480:	23f8      	movs	r3, #248	; 0xf8
    9482:	e7d4      	b.n	942e <RAILINT_ac4c341889862730c8d820dc51f851c9+0x56>
    9484:	2206      	movs	r2, #6
    9486:	f043 0301 	orr.w	r3, r3, #1
    948a:	e7da      	b.n	9442 <RAILINT_ac4c341889862730c8d820dc51f851c9+0x6a>
    948c:	2204      	movs	r2, #4
    948e:	f043 0305 	orr.w	r3, r3, #5
    9492:	e7d6      	b.n	9442 <RAILINT_ac4c341889862730c8d820dc51f851c9+0x6a>
    9494:	462a      	mov	r2, r5
    9496:	23f8      	movs	r3, #248	; 0xf8
    9498:	e7d3      	b.n	9442 <RAILINT_ac4c341889862730c8d820dc51f851c9+0x6a>
    949a:	2200      	movs	r2, #0
    949c:	e7d1      	b.n	9442 <RAILINT_ac4c341889862730c8d820dc51f851c9+0x6a>
    949e:	4a06      	ldr	r2, [pc, #24]	; (94b8 <RAILINT_ac4c341889862730c8d820dc51f851c9+0xe0>)
    94a0:	e7eb      	b.n	947a <RAILINT_ac4c341889862730c8d820dc51f851c9+0xa2>
    94a2:	bf00      	nop
    94a4:	20000d88 	.word	0x20000d88
    94a8:	20000d84 	.word	0x20000d84
    94ac:	4003c000 	.word	0x4003c000
    94b0:	a8006000 	.word	0xa8006000
    94b4:	a8021000 	.word	0xa8021000
    94b8:	a8022000 	.word	0xa8022000

000094bc <PTI_AuxdataOutput>:
    94bc:	4b03      	ldr	r3, [pc, #12]	; (94cc <PTI_AuxdataOutput+0x10>)
    94be:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
    94c0:	2b00      	cmp	r3, #0
    94c2:	bfbc      	itt	lt
    94c4:	4b02      	ldrlt	r3, [pc, #8]	; (94d0 <PTI_AuxdataOutput+0x14>)
    94c6:	f8c3 0088 	strlt.w	r0, [r3, #136]	; 0x88
    94ca:	4770      	bx	lr
    94cc:	a8020000 	.word	0xa8020000
    94d0:	a8004000 	.word	0xa8004000

000094d4 <RAILINT_a2bb09bbf0f5a66273c06b6551b0acd9>:
    94d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    94d8:	4b2d      	ldr	r3, [pc, #180]	; (9590 <RAILINT_a2bb09bbf0f5a66273c06b6551b0acd9+0xbc>)
    94da:	4c2e      	ldr	r4, [pc, #184]	; (9594 <RAILINT_a2bb09bbf0f5a66273c06b6551b0acd9+0xc0>)
    94dc:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
    94e0:	60a3      	str	r3, [r4, #8]
    94e2:	f000 fa19 	bl	9918 <RAILINT_56a75a549239881c0b0573168dc43aff>
    94e6:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
    94ea:	fbb0 f6f6 	udiv	r6, r0, r6
    94ee:	4373      	muls	r3, r6
    94f0:	4607      	mov	r7, r0
    94f2:	4829      	ldr	r0, [pc, #164]	; (9598 <RAILINT_a2bb09bbf0f5a66273c06b6551b0acd9+0xc4>)
    94f4:	0e19      	lsrs	r1, r3, #24
    94f6:	021b      	lsls	r3, r3, #8
    94f8:	1818      	adds	r0, r3, r0
    94fa:	4a28      	ldr	r2, [pc, #160]	; (959c <RAILINT_a2bb09bbf0f5a66273c06b6551b0acd9+0xc8>)
    94fc:	f04f 0300 	mov.w	r3, #0
    9500:	f141 0100 	adc.w	r1, r1, #0
    9504:	f002 f94e 	bl	b7a4 <__aeabi_uldivmod>
    9508:	f5a0 7380 	sub.w	r3, r0, #256	; 0x100
    950c:	4605      	mov	r5, r0
    950e:	6323      	str	r3, [r4, #48]	; 0x30
    9510:	b920      	cbnz	r0, 951c <RAILINT_a2bb09bbf0f5a66273c06b6551b0acd9+0x48>
    9512:	2260      	movs	r2, #96	; 0x60
    9514:	212b      	movs	r1, #43	; 0x2b
    9516:	f7fd fde3 	bl	70e0 <RAILINT_205167ae842e22724c3f35c6430eeddb>
    951a:	2501      	movs	r5, #1
    951c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    9520:	f04f 0a00 	mov.w	sl, #0
    9524:	436a      	muls	r2, r5
    9526:	4653      	mov	r3, sl
    9528:	0850      	lsrs	r0, r2, #1
    952a:	0231      	lsls	r1, r6, #8
    952c:	f002 f93a 	bl	b7a4 <__aeabi_uldivmod>
    9530:	4b1b      	ldr	r3, [pc, #108]	; (95a0 <RAILINT_a2bb09bbf0f5a66273c06b6551b0acd9+0xcc>)
    9532:	f5b7 7f7a 	cmp.w	r7, #1000	; 0x3e8
    9536:	6019      	str	r1, [r3, #0]
    9538:	4b1a      	ldr	r3, [pc, #104]	; (95a4 <RAILINT_a2bb09bbf0f5a66273c06b6551b0acd9+0xd0>)
    953a:	ea4f 6805 	mov.w	r8, r5, lsl #24
    953e:	4689      	mov	r9, r1
    9540:	4604      	mov	r4, r0
    9542:	6018      	str	r0, [r3, #0]
    9544:	ea4f 2515 	mov.w	r5, r5, lsr #8
    9548:	d205      	bcs.n	9556 <RAILINT_a2bb09bbf0f5a66273c06b6551b0acd9+0x82>
    954a:	2270      	movs	r2, #112	; 0x70
    954c:	212b      	movs	r1, #43	; 0x2b
    954e:	4650      	mov	r0, sl
    9550:	f7fd fdc6 	bl	70e0 <RAILINT_205167ae842e22724c3f35c6430eeddb>
    9554:	2601      	movs	r6, #1
    9556:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
    955a:	fba8 0801 	umull	r0, r8, r8, r1
    955e:	fb01 8105 	mla	r1, r1, r5, r8
    9562:	0873      	lsrs	r3, r6, #1
    9564:	18c0      	adds	r0, r0, r3
    9566:	f141 0100 	adc.w	r1, r1, #0
    956a:	2300      	movs	r3, #0
    956c:	4632      	mov	r2, r6
    956e:	f002 f919 	bl	b7a4 <__aeabi_uldivmod>
    9572:	4b0d      	ldr	r3, [pc, #52]	; (95a8 <RAILINT_a2bb09bbf0f5a66273c06b6551b0acd9+0xd4>)
    9574:	3402      	adds	r4, #2
    9576:	6019      	str	r1, [r3, #0]
    9578:	4b0c      	ldr	r3, [pc, #48]	; (95ac <RAILINT_a2bb09bbf0f5a66273c06b6551b0acd9+0xd8>)
    957a:	f149 0900 	adc.w	r9, r9, #0
    957e:	08a4      	lsrs	r4, r4, #2
    9580:	6018      	str	r0, [r3, #0]
    9582:	ea44 7489 	orr.w	r4, r4, r9, lsl #30
    9586:	4b03      	ldr	r3, [pc, #12]	; (9594 <RAILINT_a2bb09bbf0f5a66273c06b6551b0acd9+0xc0>)
    9588:	3c01      	subs	r4, #1
    958a:	639c      	str	r4, [r3, #56]	; 0x38
    958c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    9590:	00011102 	.word	0x00011102
    9594:	a801c000 	.word	0xa801c000
    9598:	0007a120 	.word	0x0007a120
    959c:	000f4240 	.word	0x000f4240
    95a0:	20000db0 	.word	0x20000db0
    95a4:	20000dac 	.word	0x20000dac
    95a8:	20000da8 	.word	0x20000da8
    95ac:	20000da4 	.word	0x20000da4

000095b0 <RAILINT_2867cf1f7327fd002fccf5d8ded311be>:
    95b0:	2210      	movs	r2, #16
    95b2:	4b04      	ldr	r3, [pc, #16]	; (95c4 <RAILINT_2867cf1f7327fd002fccf5d8ded311be+0x14>)
    95b4:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
    95b8:	605a      	str	r2, [r3, #4]
    95ba:	2201      	movs	r2, #1
    95bc:	4b02      	ldr	r3, [pc, #8]	; (95c8 <RAILINT_2867cf1f7327fd002fccf5d8ded311be+0x18>)
    95be:	60da      	str	r2, [r3, #12]
    95c0:	4770      	bx	lr
    95c2:	bf00      	nop
    95c4:	e000e100 	.word	0xe000e100
    95c8:	a801c000 	.word	0xa801c000

000095cc <RAILINT_4f93cdd7aecf168775f2a95c9141aec8>:
    95cc:	4b05      	ldr	r3, [pc, #20]	; (95e4 <RAILINT_4f93cdd7aecf168775f2a95c9141aec8+0x18>)
    95ce:	0102      	lsls	r2, r0, #4
    95d0:	4413      	add	r3, r2
    95d2:	2201      	movs	r2, #1
    95d4:	601a      	str	r2, [r3, #0]
    95d6:	f44f 7380 	mov.w	r3, #256	; 0x100
    95da:	fa03 f000 	lsl.w	r0, r3, r0
    95de:	4b02      	ldr	r3, [pc, #8]	; (95e8 <RAILINT_4f93cdd7aecf168775f2a95c9141aec8+0x1c>)
    95e0:	6658      	str	r0, [r3, #100]	; 0x64
    95e2:	4770      	bx	lr
    95e4:	a801e100 	.word	0xa801e100
    95e8:	a801e000 	.word	0xa801e000

000095ec <RAILINT_bda0c15173302986042c4866e7e8cb7e>:
    95ec:	4b03      	ldr	r3, [pc, #12]	; (95fc <RAILINT_bda0c15173302986042c4866e7e8cb7e+0x10>)
    95ee:	3010      	adds	r0, #16
    95f0:	0100      	lsls	r0, r0, #4
    95f2:	5818      	ldr	r0, [r3, r0]
    95f4:	f000 0001 	and.w	r0, r0, #1
    95f8:	4770      	bx	lr
    95fa:	bf00      	nop
    95fc:	a801c000 	.word	0xa801c000

00009600 <RAILINT_6fba69fb8464276fb40686c982612f36>:
    9600:	4b04      	ldr	r3, [pc, #16]	; (9614 <RAILINT_6fba69fb8464276fb40686c982612f36+0x14>)
    9602:	f001 71f0 	and.w	r1, r1, #31457280	; 0x1e00000
    9606:	3010      	adds	r0, #16
    9608:	f041 0103 	orr.w	r1, r1, #3
    960c:	0100      	lsls	r0, r0, #4
    960e:	5019      	str	r1, [r3, r0]
    9610:	4770      	bx	lr
    9612:	bf00      	nop
    9614:	a801c000 	.word	0xa801c000

00009618 <RAILINT_1619961c7de909eb2db91f9777cf84c9>:
    9618:	b538      	push	{r3, r4, r5, lr}
    961a:	f7fc fd3e 	bl	609a <CORE_EnterAtomic>
    961e:	4b08      	ldr	r3, [pc, #32]	; (9640 <RAILINT_1619961c7de909eb2db91f9777cf84c9+0x28>)
    9620:	4a08      	ldr	r2, [pc, #32]	; (9644 <RAILINT_1619961c7de909eb2db91f9777cf84c9+0x2c>)
    9622:	6a1d      	ldr	r5, [r3, #32]
    9624:	7d54      	ldrb	r4, [r2, #21]
    9626:	6e5a      	ldr	r2, [r3, #100]	; 0x64
    9628:	b2e4      	uxtb	r4, r4
    962a:	0752      	lsls	r2, r2, #29
    962c:	bf44      	itt	mi
    962e:	6a1d      	ldrmi	r5, [r3, #32]
    9630:	3401      	addmi	r4, #1
    9632:	f7fc fd36 	bl	60a2 <CORE_ExitAtomic>
    9636:	4628      	mov	r0, r5
    9638:	f004 0103 	and.w	r1, r4, #3
    963c:	bd38      	pop	{r3, r4, r5, pc}
    963e:	bf00      	nop
    9640:	a801c000 	.word	0xa801c000
    9644:	20000e1c 	.word	0x20000e1c

00009648 <RAILINT_91acd8a0b3b22b251b18aeabdb4a57f7>:
    9648:	b508      	push	{r3, lr}
    964a:	2022      	movs	r0, #34	; 0x22
    964c:	f7ff ff36 	bl	94bc <PTI_AuxdataOutput>
    9650:	f44f 2280 	mov.w	r2, #262144	; 0x40000
    9654:	4b01      	ldr	r3, [pc, #4]	; (965c <RAILINT_91acd8a0b3b22b251b18aeabdb4a57f7+0x14>)
    9656:	60da      	str	r2, [r3, #12]
    9658:	bd08      	pop	{r3, pc}
    965a:	bf00      	nop
    965c:	a801c000 	.word	0xa801c000

00009660 <RAILINT_3d752c35229134eb0acd91db488d7c4c>:
    9660:	4b06      	ldr	r3, [pc, #24]	; (967c <RAILINT_3d752c35229134eb0acd91db488d7c4c+0x1c>)
    9662:	681b      	ldr	r3, [r3, #0]
    9664:	4343      	muls	r3, r0
    9666:	eb03 7181 	add.w	r1, r3, r1, lsl #30
    966a:	4b05      	ldr	r3, [pc, #20]	; (9680 <RAILINT_3d752c35229134eb0acd91db488d7c4c+0x20>)
    966c:	681b      	ldr	r3, [r3, #0]
    966e:	fba3 3000 	umull	r3, r0, r3, r0
    9672:	f113 4300 	adds.w	r3, r3, #2147483648	; 0x80000000
    9676:	eb41 0000 	adc.w	r0, r1, r0
    967a:	4770      	bx	lr
    967c:	20000da8 	.word	0x20000da8
    9680:	20000da4 	.word	0x20000da4

00009684 <RAILINT_9eb58bc3bfde122d3a99681151a64444>:
    9684:	b508      	push	{r3, lr}
    9686:	f7ff ffc7 	bl	9618 <RAILINT_1619961c7de909eb2db91f9777cf84c9>
    968a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    968e:	f7ff bfe7 	b.w	9660 <RAILINT_3d752c35229134eb0acd91db488d7c4c>

00009692 <RAILINT_34bce41ab8660dd545debb2103a67a60>:
    9692:	b510      	push	{r4, lr}
    9694:	4604      	mov	r4, r0
    9696:	f7ff ffbf 	bl	9618 <RAILINT_1619961c7de909eb2db91f9777cf84c9>
    969a:	4284      	cmp	r4, r0
    969c:	bf88      	it	hi
    969e:	f101 31ff 	addhi.w	r1, r1, #4294967295
    96a2:	4620      	mov	r0, r4
    96a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    96a8:	f001 0103 	and.w	r1, r1, #3
    96ac:	f7ff bfd8 	b.w	9660 <RAILINT_3d752c35229134eb0acd91db488d7c4c>

000096b0 <RAILINT_91df45e96a2874f76867d6f26ae534a0>:
    96b0:	4a0c      	ldr	r2, [pc, #48]	; (96e4 <RAILINT_91df45e96a2874f76867d6f26ae534a0+0x34>)
    96b2:	f020 4340 	bic.w	r3, r0, #3221225472	; 0xc0000000
    96b6:	4601      	mov	r1, r0
    96b8:	b510      	push	{r4, lr}
    96ba:	2000      	movs	r0, #0
    96bc:	6814      	ldr	r4, [r2, #0]
    96be:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
    96c2:	fbe4 2003 	umlal	r2, r0, r4, r3
    96c6:	4a08      	ldr	r2, [pc, #32]	; (96e8 <RAILINT_91df45e96a2874f76867d6f26ae534a0+0x38>)
    96c8:	0f89      	lsrs	r1, r1, #30
    96ca:	6812      	ldr	r2, [r2, #0]
    96cc:	fb02 0003 	mla	r0, r2, r3, r0
    96d0:	4b06      	ldr	r3, [pc, #24]	; (96ec <RAILINT_91df45e96a2874f76867d6f26ae534a0+0x3c>)
    96d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    96d4:	4298      	cmp	r0, r3
    96d6:	d904      	bls.n	96e2 <RAILINT_91df45e96a2874f76867d6f26ae534a0+0x32>
    96d8:	3301      	adds	r3, #1
    96da:	3101      	adds	r1, #1
    96dc:	1ac0      	subs	r0, r0, r3
    96de:	f001 0103 	and.w	r1, r1, #3
    96e2:	bd10      	pop	{r4, pc}
    96e4:	20000dac 	.word	0x20000dac
    96e8:	20000db0 	.word	0x20000db0
    96ec:	a801c000 	.word	0xa801c000

000096f0 <RAILINT_880ea347ba5a380aeb65b9c33560ef79>:
    96f0:	b538      	push	{r3, r4, r5, lr}
    96f2:	4604      	mov	r4, r0
    96f4:	f7ff ffc6 	bl	9684 <RAILINT_9eb58bc3bfde122d3a99681151a64444>
    96f8:	4605      	mov	r5, r0
    96fa:	f7ff ffc3 	bl	9684 <RAILINT_9eb58bc3bfde122d3a99681151a64444>
    96fe:	1b43      	subs	r3, r0, r5
    9700:	42a3      	cmp	r3, r4
    9702:	d3fa      	bcc.n	96fa <RAILINT_880ea347ba5a380aeb65b9c33560ef79+0xa>
    9704:	bd38      	pop	{r3, r4, r5, pc}
	...

00009708 <RAILINT_7eef505a2ab2bf9ba8257b9a73e538f4>:
    9708:	b508      	push	{r3, lr}
    970a:	4b06      	ldr	r3, [pc, #24]	; (9724 <RAILINT_7eef505a2ab2bf9ba8257b9a73e538f4+0x1c>)
    970c:	f04f 4030 	mov.w	r0, #2952790016	; 0xb0000000
    9710:	681a      	ldr	r2, [r3, #0]
    9712:	4905      	ldr	r1, [pc, #20]	; (9728 <RAILINT_7eef505a2ab2bf9ba8257b9a73e538f4+0x20>)
    9714:	0092      	lsls	r2, r2, #2
    9716:	f002 f9d5 	bl	bac4 <memcpy>
    971a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    971e:	f000 beab 	b.w	a478 <RAILINT_9743c96ef075be688881e5d1e5667476>
    9722:	bf00      	nop
    9724:	0000d7c8 	.word	0x0000d7c8
    9728:	0000bee8 	.word	0x0000bee8

0000972c <RAILINT_2e07a6872d92c4b3e3c2fd6af0b0470f>:
    972c:	b570      	push	{r4, r5, r6, lr}
    972e:	680c      	ldr	r4, [r1, #0]
    9730:	1c65      	adds	r5, r4, #1
    9732:	d103      	bne.n	973c <RAILINT_2e07a6872d92c4b3e3c2fd6af0b0470f+0x10>
    9734:	2300      	movs	r3, #0
    9736:	6003      	str	r3, [r0, #0]
    9738:	2301      	movs	r3, #1
    973a:	e013      	b.n	9764 <RAILINT_2e07a6872d92c4b3e3c2fd6af0b0470f+0x38>
    973c:	f3c4 6602 	ubfx	r6, r4, #24, #3
    9740:	429e      	cmp	r6, r3
    9742:	f3c4 4507 	ubfx	r5, r4, #16, #8
    9746:	d10f      	bne.n	9768 <RAILINT_2e07a6872d92c4b3e3c2fd6af0b0470f+0x3c>
    9748:	b2a4      	uxth	r4, r4
    974a:	4294      	cmp	r4, r2
    974c:	d80c      	bhi.n	9768 <RAILINT_2e07a6872d92c4b3e3c2fd6af0b0470f+0x3c>
    974e:	eb04 0685 	add.w	r6, r4, r5, lsl #2
    9752:	42b2      	cmp	r2, r6
    9754:	d208      	bcs.n	9768 <RAILINT_2e07a6872d92c4b3e3c2fd6af0b0470f+0x3c>
    9756:	1b13      	subs	r3, r2, r4
    9758:	f023 0303 	bic.w	r3, r3, #3
    975c:	18ca      	adds	r2, r1, r3
    975e:	6853      	ldr	r3, [r2, #4]
    9760:	6003      	str	r3, [r0, #0]
    9762:	2300      	movs	r3, #0
    9764:	7103      	strb	r3, [r0, #4]
    9766:	bd70      	pop	{r4, r5, r6, pc}
    9768:	3501      	adds	r5, #1
    976a:	eb01 0185 	add.w	r1, r1, r5, lsl #2
    976e:	e7de      	b.n	972e <RAILINT_2e07a6872d92c4b3e3c2fd6af0b0470f+0x2>

00009770 <RAILINT_3d92125e045a72c8ec8f5b006f79d436>:
    9770:	4b04      	ldr	r3, [pc, #16]	; (9784 <RAILINT_3d92125e045a72c8ec8f5b006f79d436+0x14>)
    9772:	f3c0 6201 	ubfx	r2, r0, #24, #2
    9776:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
    977a:	b280      	uxth	r0, r0
    977c:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    9780:	4770      	bx	lr
    9782:	bf00      	nop
    9784:	0000bed8 	.word	0x0000bed8

00009788 <RAILINT_c174cd7e27ebfe1b2de47ff269c167ee>:
    9788:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    978a:	460c      	mov	r4, r1
    978c:	b28a      	uxth	r2, r1
    978e:	0c09      	lsrs	r1, r1, #16
    9790:	f5b1 4f28 	cmp.w	r1, #43008	; 0xa800
    9794:	4606      	mov	r6, r0
    9796:	460b      	mov	r3, r1
    9798:	d012      	beq.n	97c0 <RAILINT_c174cd7e27ebfe1b2de47ff269c167ee+0x38>
    979a:	f64a 0001 	movw	r0, #43009	; 0xa801
    979e:	4281      	cmp	r1, r0
    97a0:	d010      	beq.n	97c4 <RAILINT_c174cd7e27ebfe1b2de47ff269c167ee+0x3c>
    97a2:	f64a 0102 	movw	r1, #43010	; 0xa802
    97a6:	428b      	cmp	r3, r1
    97a8:	d00e      	beq.n	97c8 <RAILINT_c174cd7e27ebfe1b2de47ff269c167ee+0x40>
    97aa:	f5b3 4f30 	cmp.w	r3, #45056	; 0xb000
    97ae:	bf0c      	ite	eq
    97b0:	2503      	moveq	r5, #3
    97b2:	2504      	movne	r5, #4
    97b4:	6f73      	ldr	r3, [r6, #116]	; 0x74
    97b6:	b94b      	cbnz	r3, 97cc <RAILINT_c174cd7e27ebfe1b2de47ff269c167ee+0x44>
    97b8:	6f33      	ldr	r3, [r6, #112]	; 0x70
    97ba:	b9bb      	cbnz	r3, 97ec <RAILINT_c174cd7e27ebfe1b2de47ff269c167ee+0x64>
    97bc:	6820      	ldr	r0, [r4, #0]
    97be:	e013      	b.n	97e8 <RAILINT_c174cd7e27ebfe1b2de47ff269c167ee+0x60>
    97c0:	2500      	movs	r5, #0
    97c2:	e7f7      	b.n	97b4 <RAILINT_c174cd7e27ebfe1b2de47ff269c167ee+0x2c>
    97c4:	2501      	movs	r5, #1
    97c6:	e7f5      	b.n	97b4 <RAILINT_c174cd7e27ebfe1b2de47ff269c167ee+0x2c>
    97c8:	2502      	movs	r5, #2
    97ca:	e7f3      	b.n	97b4 <RAILINT_c174cd7e27ebfe1b2de47ff269c167ee+0x2c>
    97cc:	6819      	ldr	r1, [r3, #0]
    97ce:	2900      	cmp	r1, #0
    97d0:	d0f2      	beq.n	97b8 <RAILINT_c174cd7e27ebfe1b2de47ff269c167ee+0x30>
    97d2:	462b      	mov	r3, r5
    97d4:	a802      	add	r0, sp, #8
    97d6:	9201      	str	r2, [sp, #4]
    97d8:	f7ff ffa8 	bl	972c <RAILINT_2e07a6872d92c4b3e3c2fd6af0b0470f>
    97dc:	f89d 300c 	ldrb.w	r3, [sp, #12]
    97e0:	9802      	ldr	r0, [sp, #8]
    97e2:	9a01      	ldr	r2, [sp, #4]
    97e4:	2b00      	cmp	r3, #0
    97e6:	d1e7      	bne.n	97b8 <RAILINT_c174cd7e27ebfe1b2de47ff269c167ee+0x30>
    97e8:	b004      	add	sp, #16
    97ea:	bd70      	pop	{r4, r5, r6, pc}
    97ec:	6819      	ldr	r1, [r3, #0]
    97ee:	2900      	cmp	r1, #0
    97f0:	d0e4      	beq.n	97bc <RAILINT_c174cd7e27ebfe1b2de47ff269c167ee+0x34>
    97f2:	462b      	mov	r3, r5
    97f4:	a802      	add	r0, sp, #8
    97f6:	f7ff ff99 	bl	972c <RAILINT_2e07a6872d92c4b3e3c2fd6af0b0470f>
    97fa:	f89d 300c 	ldrb.w	r3, [sp, #12]
    97fe:	9802      	ldr	r0, [sp, #8]
    9800:	2b00      	cmp	r3, #0
    9802:	d1db      	bne.n	97bc <RAILINT_c174cd7e27ebfe1b2de47ff269c167ee+0x34>
    9804:	e7f0      	b.n	97e8 <RAILINT_c174cd7e27ebfe1b2de47ff269c167ee+0x60>
	...

00009808 <RAILINT_2d55024751d647dfef36f5f548d0f2cb>:
    9808:	b507      	push	{r0, r1, r2, lr}
    980a:	a801      	add	r0, sp, #4
    980c:	f7fc fd40 	bl	6290 <SYSTEM_ChipRevisionGet>
    9810:	2248      	movs	r2, #72	; 0x48
    9812:	4b07      	ldr	r3, [pc, #28]	; (9830 <RAILINT_2d55024751d647dfef36f5f548d0f2cb+0x28>)
    9814:	655a      	str	r2, [r3, #84]	; 0x54
    9816:	4a07      	ldr	r2, [pc, #28]	; (9834 <RAILINT_2d55024751d647dfef36f5f548d0f2cb+0x2c>)
    9818:	f8d2 30d4 	ldr.w	r3, [r2, #212]	; 0xd4
    981c:	f423 33fc 	bic.w	r3, r3, #129024	; 0x1f800
    9820:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
    9824:	4b04      	ldr	r3, [pc, #16]	; (9838 <RAILINT_2d55024751d647dfef36f5f548d0f2cb+0x30>)
    9826:	681b      	ldr	r3, [r3, #0]
    9828:	b003      	add	sp, #12
    982a:	f85d fb04 	ldr.w	pc, [sp], #4
    982e:	bf00      	nop
    9830:	a8018000 	.word	0xa8018000
    9834:	a8020000 	.word	0xa8020000
    9838:	b0002000 	.word	0xb0002000

0000983c <RAILINT_0a958662e0f9b48ba3742030a3e4e70c>:
    983c:	2200      	movs	r2, #0
    983e:	2101      	movs	r1, #1
    9840:	4b0c      	ldr	r3, [pc, #48]	; (9874 <RAILINT_0a958662e0f9b48ba3742030a3e4e70c+0x38>)
    9842:	b510      	push	{r4, lr}
    9844:	671a      	str	r2, [r3, #112]	; 0x70
    9846:	675a      	str	r2, [r3, #116]	; 0x74
    9848:	679a      	str	r2, [r3, #120]	; 0x78
    984a:	4a0b      	ldr	r2, [pc, #44]	; (9878 <RAILINT_0a958662e0f9b48ba3742030a3e4e70c+0x3c>)
    984c:	6151      	str	r1, [r2, #20]
    984e:	68da      	ldr	r2, [r3, #12]
    9850:	f012 6f70 	tst.w	r2, #251658240	; 0xf000000
    9854:	d1fb      	bne.n	984e <RAILINT_0a958662e0f9b48ba3742030a3e4e70c+0x12>
    9856:	f04f 4230 	mov.w	r2, #2952790016	; 0xb0000000
    985a:	2401      	movs	r4, #1
    985c:	665a      	str	r2, [r3, #100]	; 0x64
    985e:	f502 52fc 	add.w	r2, r2, #8064	; 0x1f80
    9862:	3214      	adds	r2, #20
    9864:	669c      	str	r4, [r3, #104]	; 0x68
    9866:	64da      	str	r2, [r3, #76]	; 0x4c
    9868:	4b04      	ldr	r3, [pc, #16]	; (987c <RAILINT_0a958662e0f9b48ba3742030a3e4e70c+0x40>)
    986a:	681b      	ldr	r3, [r3, #0]
    986c:	4798      	blx	r3
    986e:	4b04      	ldr	r3, [pc, #16]	; (9880 <RAILINT_0a958662e0f9b48ba3742030a3e4e70c+0x44>)
    9870:	615c      	str	r4, [r3, #20]
    9872:	bd10      	pop	{r4, pc}
    9874:	a8020000 	.word	0xa8020000
    9878:	a8021000 	.word	0xa8021000
    987c:	200001fc 	.word	0x200001fc
    9880:	a8022000 	.word	0xa8022000

00009884 <RAILINT_ff78d9bb4bfe772063473783474f9dc5>:
    9884:	2301      	movs	r3, #1
    9886:	4a0f      	ldr	r2, [pc, #60]	; (98c4 <RAILINT_ff78d9bb4bfe772063473783474f9dc5+0x40>)
    9888:	490f      	ldr	r1, [pc, #60]	; (98c8 <RAILINT_ff78d9bb4bfe772063473783474f9dc5+0x44>)
    988a:	f8c2 3280 	str.w	r3, [r2, #640]	; 0x280
    988e:	6a8a      	ldr	r2, [r1, #40]	; 0x28
    9890:	f022 0202 	bic.w	r2, r2, #2
    9894:	628a      	str	r2, [r1, #40]	; 0x28
    9896:	4a0d      	ldr	r2, [pc, #52]	; (98cc <RAILINT_ff78d9bb4bfe772063473783474f9dc5+0x48>)
    9898:	6053      	str	r3, [r2, #4]
    989a:	4a0d      	ldr	r2, [pc, #52]	; (98d0 <RAILINT_ff78d9bb4bfe772063473783474f9dc5+0x4c>)
    989c:	6053      	str	r3, [r2, #4]
    989e:	4a0d      	ldr	r2, [pc, #52]	; (98d4 <RAILINT_ff78d9bb4bfe772063473783474f9dc5+0x50>)
    98a0:	6053      	str	r3, [r2, #4]
    98a2:	f5a2 4280 	sub.w	r2, r2, #16384	; 0x4000
    98a6:	6053      	str	r3, [r2, #4]
    98a8:	f5a2 4240 	sub.w	r2, r2, #49152	; 0xc000
    98ac:	6053      	str	r3, [r2, #4]
    98ae:	f502 32c0 	add.w	r2, r2, #98304	; 0x18000
    98b2:	6053      	str	r3, [r2, #4]
    98b4:	f502 4280 	add.w	r2, r2, #16384	; 0x4000
    98b8:	6053      	str	r3, [r2, #4]
    98ba:	f5a2 4200 	sub.w	r2, r2, #32768	; 0x8000
    98be:	6053      	str	r3, [r2, #4]
    98c0:	4770      	bx	lr
    98c2:	bf00      	nop
    98c4:	40008000 	.word	0x40008000
    98c8:	4000c000 	.word	0x4000c000
    98cc:	a800c000 	.word	0xa800c000
    98d0:	44004000 	.word	0x44004000
    98d4:	a8014000 	.word	0xa8014000

000098d8 <RAILINT_83b3e2e99c8f4d3fd0b62943447c7cff>:
    98d8:	b508      	push	{r3, lr}
    98da:	f7ff ffd3 	bl	9884 <RAILINT_ff78d9bb4bfe772063473783474f9dc5>
    98de:	f7ff ff93 	bl	9808 <RAILINT_2d55024751d647dfef36f5f548d0f2cb>
    98e2:	2203      	movs	r2, #3
    98e4:	4b0a      	ldr	r3, [pc, #40]	; (9910 <RAILINT_83b3e2e99c8f4d3fd0b62943447c7cff+0x38>)
    98e6:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
    98ea:	4a0a      	ldr	r2, [pc, #40]	; (9914 <RAILINT_83b3e2e99c8f4d3fd0b62943447c7cff+0x3c>)
    98ec:	f503 4330 	add.w	r3, r3, #45056	; 0xb000
    98f0:	67da      	str	r2, [r3, #124]	; 0x7c
    98f2:	2201      	movs	r2, #1
    98f4:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
    98f8:	67da      	str	r2, [r3, #124]	; 0x7c
    98fa:	f44f 7260 	mov.w	r2, #896	; 0x380
    98fe:	615a      	str	r2, [r3, #20]
    9900:	f44f 7200 	mov.w	r2, #512	; 0x200
    9904:	67da      	str	r2, [r3, #124]	; 0x7c
    9906:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    990a:	f7fe beed 	b.w	86e8 <RAILINT_7c4474e9c252fd93501bbf7d6298f3d3>
    990e:	bf00      	nop
    9910:	a8015000 	.word	0xa8015000
    9914:	00f00800 	.word	0x00f00800

00009918 <RAILINT_56a75a549239881c0b0573168dc43aff>:
    9918:	f7fc beb4 	b.w	6684 <SystemHFXOClockGet>

0000991c <RAILINT_0db83bf7a6ec6ad175f2b3bb6bb8465a>:
    991c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9920:	4604      	mov	r4, r0
    9922:	b085      	sub	sp, #20
    9924:	9000      	str	r0, [sp, #0]
    9926:	460e      	mov	r6, r1
    9928:	f856 5b04 	ldr.w	r5, [r6], #4
    992c:	1c6b      	adds	r3, r5, #1
    992e:	d106      	bne.n	993e <RAILINT_0db83bf7a6ec6ad175f2b3bb6bb8465a+0x22>
    9930:	9b00      	ldr	r3, [sp, #0]
    9932:	6025      	str	r5, [r4, #0]
    9934:	1ae0      	subs	r0, r4, r3
    9936:	1080      	asrs	r0, r0, #2
    9938:	b005      	add	sp, #20
    993a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    993e:	ea5f 7b15 	movs.w	fp, r5, lsr #28
    9942:	bf18      	it	ne
    9944:	2101      	movne	r1, #1
    9946:	4628      	mov	r0, r5
    9948:	bf08      	it	eq
    994a:	f3c5 4107 	ubfxeq	r1, r5, #16, #8
    994e:	f7ff ff0f 	bl	9770 <RAILINT_3d92125e045a72c8ec8f5b006f79d436>
    9952:	ea4f 09c1 	mov.w	r9, r1, lsl #3
    9956:	4b2b      	ldr	r3, [pc, #172]	; (9a04 <RAILINT_0db83bf7a6ec6ad175f2b3bb6bb8465a+0xe8>)
    9958:	f109 0204 	add.w	r2, r9, #4
    995c:	4422      	add	r2, r4
    995e:	429a      	cmp	r2, r3
    9960:	4680      	mov	r8, r0
    9962:	d218      	bcs.n	9996 <RAILINT_0db83bf7a6ec6ad175f2b3bb6bb8465a+0x7a>
    9964:	f3c5 6201 	ubfx	r2, r5, #24, #2
    9968:	2507      	movs	r5, #7
    996a:	46b2      	mov	sl, r6
    996c:	008b      	lsls	r3, r1, #2
    996e:	9301      	str	r3, [sp, #4]
    9970:	eb08 0381 	add.w	r3, r8, r1, lsl #2
    9974:	40d5      	lsrs	r5, r2
    9976:	9302      	str	r3, [sp, #8]
    9978:	f10b 33ff 	add.w	r3, fp, #4294967295
    997c:	f005 0501 	and.w	r5, r5, #1
    9980:	f104 0708 	add.w	r7, r4, #8
    9984:	9303      	str	r3, [sp, #12]
    9986:	9b02      	ldr	r3, [sp, #8]
    9988:	4598      	cmp	r8, r3
    998a:	d109      	bne.n	99a0 <RAILINT_0db83bf7a6ec6ad175f2b3bb6bb8465a+0x84>
    998c:	9b01      	ldr	r3, [sp, #4]
    998e:	444c      	add	r4, r9
    9990:	4433      	add	r3, r6
    9992:	4619      	mov	r1, r3
    9994:	e7c7      	b.n	9926 <RAILINT_0db83bf7a6ec6ad175f2b3bb6bb8465a+0xa>
    9996:	4b1b      	ldr	r3, [pc, #108]	; (9a04 <RAILINT_0db83bf7a6ec6ad175f2b3bb6bb8465a+0xe8>)
    9998:	429c      	cmp	r4, r3
    999a:	d8e3      	bhi.n	9964 <RAILINT_0db83bf7a6ec6ad175f2b3bb6bb8465a+0x48>
    999c:	2000      	movs	r0, #0
    999e:	e7cb      	b.n	9938 <RAILINT_0db83bf7a6ec6ad175f2b3bb6bb8465a+0x1c>
    99a0:	9b03      	ldr	r3, [sp, #12]
    99a2:	2b06      	cmp	r3, #6
    99a4:	d80b      	bhi.n	99be <RAILINT_0db83bf7a6ec6ad175f2b3bb6bb8465a+0xa2>
    99a6:	e8df f003 	tbb	[pc, r3]
    99aa:	0423      	.short	0x0423
    99ac:	230c040c 	.word	0x230c040c
    99b0:	04          	.byte	0x04
    99b1:	00          	.byte	0x00
    99b2:	f240 42a7 	movw	r2, #1191	; 0x4a7
    99b6:	2132      	movs	r1, #50	; 0x32
    99b8:	2000      	movs	r0, #0
    99ba:	f7fd fb91 	bl	70e0 <RAILINT_205167ae842e22724c3f35c6430eeddb>
    99be:	2200      	movs	r2, #0
    99c0:	e007      	b.n	99d2 <RAILINT_0db83bf7a6ec6ad175f2b3bb6bb8465a+0xb6>
    99c2:	f240 42ac 	movw	r2, #1196	; 0x4ac
    99c6:	2132      	movs	r1, #50	; 0x32
    99c8:	4628      	mov	r0, r5
    99ca:	f7fd fb89 	bl	70e0 <RAILINT_205167ae842e22724c3f35c6430eeddb>
    99ce:	f44f 5280 	mov.w	r2, #4096	; 0x1000
    99d2:	4442      	add	r2, r8
    99d4:	f847 2c08 	str.w	r2, [r7, #-8]
    99d8:	f85a 2b04 	ldr.w	r2, [sl], #4
    99dc:	f1bb 0f01 	cmp.w	fp, #1
    99e0:	bf08      	it	eq
    99e2:	43d2      	mvneq	r2, r2
    99e4:	f108 0804 	add.w	r8, r8, #4
    99e8:	f847 2c04 	str.w	r2, [r7, #-4]
    99ec:	3708      	adds	r7, #8
    99ee:	e7ca      	b.n	9986 <RAILINT_0db83bf7a6ec6ad175f2b3bb6bb8465a+0x6a>
    99f0:	f240 42b5 	movw	r2, #1205	; 0x4b5
    99f4:	2132      	movs	r1, #50	; 0x32
    99f6:	4628      	mov	r0, r5
    99f8:	f7fd fb72 	bl	70e0 <RAILINT_205167ae842e22724c3f35c6430eeddb>
    99fc:	f44f 5200 	mov.w	r2, #8192	; 0x2000
    9a00:	e7e7      	b.n	99d2 <RAILINT_0db83bf7a6ec6ad175f2b3bb6bb8465a+0xb6>
    9a02:	bf00      	nop
    9a04:	b0003000 	.word	0xb0003000

00009a08 <RAILINT_171f424fc160b143d72e8b724c33f1c6>:
    9a08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    9a0c:	4605      	mov	r5, r0
    9a0e:	b310      	cbz	r0, 9a56 <RAILINT_171f424fc160b143d72e8b724c33f1c6+0x4e>
    9a10:	2400      	movs	r4, #0
    9a12:	4a17      	ldr	r2, [pc, #92]	; (9a70 <RAILINT_171f424fc160b143d72e8b724c33f1c6+0x68>)
    9a14:	4917      	ldr	r1, [pc, #92]	; (9a74 <RAILINT_171f424fc160b143d72e8b724c33f1c6+0x6c>)
    9a16:	4626      	mov	r6, r4
    9a18:	4690      	mov	r8, r2
    9a1a:	460f      	mov	r7, r1
    9a1c:	f852 3b04 	ldr.w	r3, [r2], #4
    9a20:	b9db      	cbnz	r3, 9a5a <RAILINT_171f424fc160b143d72e8b724c33f1c6+0x52>
    9a22:	00b0      	lsls	r0, r6, #2
    9a24:	f100 4030 	add.w	r0, r0, #2952790016	; 0xb0000000
    9a28:	4629      	mov	r1, r5
    9a2a:	f500 5001 	add.w	r0, r0, #8256	; 0x2040
    9a2e:	f7ff ff75 	bl	991c <RAILINT_0db83bf7a6ec6ad175f2b3bb6bb8465a>
    9a32:	4603      	mov	r3, r0
    9a34:	b948      	cbnz	r0, 9a4a <RAILINT_171f424fc160b143d72e8b724c33f1c6+0x42>
    9a36:	f240 521f 	movw	r2, #1311	; 0x51f
    9a3a:	2136      	movs	r1, #54	; 0x36
    9a3c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    9a40:	f7fd bb4e 	b.w	70e0 <RAILINT_205167ae842e22724c3f35c6430eeddb>
    9a44:	f831 6b02 	ldrh.w	r6, [r1], #2
    9a48:	e7e8      	b.n	9a1c <RAILINT_171f424fc160b143d72e8b724c33f1c6+0x14>
    9a4a:	4433      	add	r3, r6
    9a4c:	3301      	adds	r3, #1
    9a4e:	f848 5024 	str.w	r5, [r8, r4, lsl #2]
    9a52:	f827 3014 	strh.w	r3, [r7, r4, lsl #1]
    9a56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    9a5a:	42ab      	cmp	r3, r5
    9a5c:	d0fb      	beq.n	9a56 <RAILINT_171f424fc160b143d72e8b724c33f1c6+0x4e>
    9a5e:	3401      	adds	r4, #1
    9a60:	2c0c      	cmp	r4, #12
    9a62:	d1ef      	bne.n	9a44 <RAILINT_171f424fc160b143d72e8b724c33f1c6+0x3c>
    9a64:	f240 522d 	movw	r2, #1325	; 0x52d
    9a68:	2136      	movs	r1, #54	; 0x36
    9a6a:	2000      	movs	r0, #0
    9a6c:	e7e6      	b.n	9a3c <RAILINT_171f424fc160b143d72e8b724c33f1c6+0x34>
    9a6e:	bf00      	nop
    9a70:	20000db4 	.word	0x20000db4
    9a74:	20000de4 	.word	0x20000de4

00009a78 <RAILINT_cd65c06e3b1af867d6257be45870f13b>:
    9a78:	b570      	push	{r4, r5, r6, lr}
    9a7a:	4604      	mov	r4, r0
    9a7c:	b1b8      	cbz	r0, 9aae <RAILINT_cd65c06e3b1af867d6257be45870f13b+0x36>
    9a7e:	b1e9      	cbz	r1, 9abc <RAILINT_cd65c06e3b1af867d6257be45870f13b+0x44>
    9a80:	2200      	movs	r2, #0
    9a82:	4613      	mov	r3, r2
    9a84:	492c      	ldr	r1, [pc, #176]	; (9b38 <RAILINT_cd65c06e3b1af867d6257be45870f13b+0xc0>)
    9a86:	482d      	ldr	r0, [pc, #180]	; (9b3c <RAILINT_cd65c06e3b1af867d6257be45870f13b+0xc4>)
    9a88:	f851 5b04 	ldr.w	r5, [r1], #4
    9a8c:	42a5      	cmp	r5, r4
    9a8e:	d112      	bne.n	9ab6 <RAILINT_cd65c06e3b1af867d6257be45870f13b+0x3e>
    9a90:	492b      	ldr	r1, [pc, #172]	; (9b40 <RAILINT_cd65c06e3b1af867d6257be45870f13b+0xc8>)
    9a92:	688a      	ldr	r2, [r1, #8]
    9a94:	0692      	lsls	r2, r2, #26
    9a96:	d4fc      	bmi.n	9a92 <RAILINT_cd65c06e3b1af867d6257be45870f13b+0x1a>
    9a98:	009b      	lsls	r3, r3, #2
    9a9a:	4a2a      	ldr	r2, [pc, #168]	; (9b44 <RAILINT_cd65c06e3b1af867d6257be45870f13b+0xcc>)
    9a9c:	f103 4330 	add.w	r3, r3, #2952790016	; 0xb0000000
    9aa0:	f503 5301 	add.w	r3, r3, #8256	; 0x2040
    9aa4:	f8c2 30a8 	str.w	r3, [r2, #168]	; 0xa8
    9aa8:	2220      	movs	r2, #32
    9aaa:	4b27      	ldr	r3, [pc, #156]	; (9b48 <RAILINT_cd65c06e3b1af867d6257be45870f13b+0xd0>)
    9aac:	609a      	str	r2, [r3, #8]
    9aae:	bd70      	pop	{r4, r5, r6, pc}
    9ab0:	f830 3b02 	ldrh.w	r3, [r0], #2
    9ab4:	e7e8      	b.n	9a88 <RAILINT_cd65c06e3b1af867d6257be45870f13b+0x10>
    9ab6:	3201      	adds	r2, #1
    9ab8:	2a0c      	cmp	r2, #12
    9aba:	d1f9      	bne.n	9ab0 <RAILINT_cd65c06e3b1af867d6257be45870f13b+0x38>
    9abc:	2501      	movs	r5, #1
    9abe:	e017      	b.n	9af0 <RAILINT_cd65c06e3b1af867d6257be45870f13b+0x78>
    9ac0:	f843 0b04 	str.w	r0, [r3], #4
    9ac4:	e024      	b.n	9b10 <RAILINT_cd65c06e3b1af867d6257be45870f13b+0x98>
    9ac6:	0f09      	lsrs	r1, r1, #28
    9ac8:	6860      	ldr	r0, [r4, #4]
    9aca:	3408      	adds	r4, #8
    9acc:	2907      	cmp	r1, #7
    9ace:	d80f      	bhi.n	9af0 <RAILINT_cd65c06e3b1af867d6257be45870f13b+0x78>
    9ad0:	e8df f001 	tbb	[pc, r1]
    9ad4:	2708040a 	.word	0x2708040a
    9ad8:	2d2a250c 	.word	0x2d2a250c
    9adc:	43c0      	mvns	r0, r0
    9ade:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
    9ae2:	e001      	b.n	9ae8 <RAILINT_cd65c06e3b1af867d6257be45870f13b+0x70>
    9ae4:	681a      	ldr	r2, [r3, #0]
    9ae6:	4050      	eors	r0, r2
    9ae8:	6018      	str	r0, [r3, #0]
    9aea:	e001      	b.n	9af0 <RAILINT_cd65c06e3b1af867d6257be45870f13b+0x78>
    9aec:	f7ff fe00 	bl	96f0 <RAILINT_880ea347ba5a380aeb65b9c33560ef79>
    9af0:	6821      	ldr	r1, [r4, #0]
    9af2:	1c4b      	adds	r3, r1, #1
    9af4:	d0db      	beq.n	9aae <RAILINT_cd65c06e3b1af867d6257be45870f13b+0x36>
    9af6:	4608      	mov	r0, r1
    9af8:	f7ff fe3a 	bl	9770 <RAILINT_3d92125e045a72c8ec8f5b006f79d436>
    9afc:	0c0e      	lsrs	r6, r1, #16
    9afe:	f016 0ffe 	tst.w	r6, #254	; 0xfe
    9b02:	4603      	mov	r3, r0
    9b04:	d0df      	beq.n	9ac6 <RAILINT_cd65c06e3b1af867d6257be45870f13b+0x4e>
    9b06:	4621      	mov	r1, r4
    9b08:	b2f6      	uxtb	r6, r6
    9b0a:	00b2      	lsls	r2, r6, #2
    9b0c:	eb00 0686 	add.w	r6, r0, r6, lsl #2
    9b10:	42b3      	cmp	r3, r6
    9b12:	f851 0f04 	ldr.w	r0, [r1, #4]!
    9b16:	d1d3      	bne.n	9ac0 <RAILINT_cd65c06e3b1af867d6257be45870f13b+0x48>
    9b18:	1d13      	adds	r3, r2, #4
    9b1a:	441c      	add	r4, r3
    9b1c:	e7e8      	b.n	9af0 <RAILINT_cd65c06e3b1af867d6257be45870f13b+0x78>
    9b1e:	fa05 f000 	lsl.w	r0, r5, r0
    9b22:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
    9b26:	e7df      	b.n	9ae8 <RAILINT_cd65c06e3b1af867d6257be45870f13b+0x70>
    9b28:	fa05 f000 	lsl.w	r0, r5, r0
    9b2c:	e7d7      	b.n	9ade <RAILINT_cd65c06e3b1af867d6257be45870f13b+0x66>
    9b2e:	681a      	ldr	r2, [r3, #0]
    9b30:	ea30 0202 	bics.w	r2, r0, r2
    9b34:	d1fb      	bne.n	9b2e <RAILINT_cd65c06e3b1af867d6257be45870f13b+0xb6>
    9b36:	e7db      	b.n	9af0 <RAILINT_cd65c06e3b1af867d6257be45870f13b+0x78>
    9b38:	20000db4 	.word	0x20000db4
    9b3c:	20000de4 	.word	0x20000de4
    9b40:	a8020000 	.word	0xa8020000
    9b44:	b0001e00 	.word	0xb0001e00
    9b48:	a8021000 	.word	0xa8021000

00009b4c <RAILINT_85395b01c0ad26d73deed4fa79fbb56f>:
    9b4c:	b508      	push	{r3, lr}
    9b4e:	f7fc fd99 	bl	6684 <SystemHFXOClockGet>
    9b52:	4b06      	ldr	r3, [pc, #24]	; (9b6c <RAILINT_85395b01c0ad26d73deed4fa79fbb56f+0x20>)
    9b54:	4602      	mov	r2, r0
    9b56:	6d9b      	ldr	r3, [r3, #88]	; 0x58
    9b58:	b298      	uxth	r0, r3
    9b5a:	b128      	cbz	r0, 9b68 <RAILINT_85395b01c0ad26d73deed4fa79fbb56f+0x1c>
    9b5c:	f3c3 4307 	ubfx	r3, r3, #16, #8
    9b60:	08d2      	lsrs	r2, r2, #3
    9b62:	4353      	muls	r3, r2
    9b64:	fbb3 f0f0 	udiv	r0, r3, r0
    9b68:	bd08      	pop	{r3, pc}
    9b6a:	bf00      	nop
    9b6c:	a8014000 	.word	0xa8014000

00009b70 <RAILINT_98702195dd5df205b66d73f7f1b701b5>:
    9b70:	4b06      	ldr	r3, [pc, #24]	; (9b8c <RAILINT_98702195dd5df205b66d73f7f1b701b5+0x1c>)
    9b72:	68db      	ldr	r3, [r3, #12]
    9b74:	f3c3 6303 	ubfx	r3, r3, #24, #4
    9b78:	4298      	cmp	r0, r3
    9b7a:	d106      	bne.n	9b8a <RAILINT_98702195dd5df205b66d73f7f1b701b5+0x1a>
    9b7c:	4804      	ldr	r0, [pc, #16]	; (9b90 <RAILINT_98702195dd5df205b66d73f7f1b701b5+0x20>)
    9b7e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
    9b80:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
    9b84:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
    9b88:	62c2      	str	r2, [r0, #44]	; 0x2c
    9b8a:	4770      	bx	lr
    9b8c:	a8020000 	.word	0xa8020000
    9b90:	b0001f00 	.word	0xb0001f00

00009b94 <RAILINT_1bc89bb9191442fba8e0eefadd7115db>:
    9b94:	b510      	push	{r4, lr}
    9b96:	4604      	mov	r4, r0
    9b98:	f7ff ffd8 	bl	9b4c <RAILINT_85395b01c0ad26d73deed4fa79fbb56f>
    9b9c:	4a0f      	ldr	r2, [pc, #60]	; (9bdc <RAILINT_1bc89bb9191442fba8e0eefadd7115db+0x48>)
    9b9e:	f8d2 3138 	ldr.w	r3, [r2, #312]	; 0x138
    9ba2:	041b      	lsls	r3, r3, #16
    9ba4:	4b0e      	ldr	r3, [pc, #56]	; (9be0 <RAILINT_1bc89bb9191442fba8e0eefadd7115db+0x4c>)
    9ba6:	bf48      	it	mi
    9ba8:	0840      	lsrmi	r0, r0, #1
    9baa:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    9bac:	f403 53c0 	and.w	r3, r3, #6144	; 0x1800
    9bb0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
    9bb4:	bf0a      	itet	eq
    9bb6:	6b93      	ldreq	r3, [r2, #56]	; 0x38
    9bb8:	f3c4 1301 	ubfxne	r3, r4, #4, #2
    9bbc:	f3c3 6341 	ubfxeq	r3, r3, #25, #2
    9bc0:	2b01      	cmp	r3, #1
    9bc2:	d002      	beq.n	9bca <RAILINT_1bc89bb9191442fba8e0eefadd7115db+0x36>
    9bc4:	2b02      	cmp	r3, #2
    9bc6:	d002      	beq.n	9bce <RAILINT_1bc89bb9191442fba8e0eefadd7115db+0x3a>
    9bc8:	bd10      	pop	{r4, pc}
    9bca:	0840      	lsrs	r0, r0, #1
    9bcc:	e7fc      	b.n	9bc8 <RAILINT_1bc89bb9191442fba8e0eefadd7115db+0x34>
    9bce:	f3c4 24c4 	ubfx	r4, r4, #11, #5
    9bd2:	3401      	adds	r4, #1
    9bd4:	fbb0 f0f4 	udiv	r0, r0, r4
    9bd8:	e7f6      	b.n	9bc8 <RAILINT_1bc89bb9191442fba8e0eefadd7115db+0x34>
    9bda:	bf00      	nop
    9bdc:	a8014000 	.word	0xa8014000
    9be0:	a8004000 	.word	0xa8004000

00009be4 <RAILINT_3d99cbb66750f16ad038aa09d2dbf23c>:
    9be4:	f000 0330 	and.w	r3, r0, #48	; 0x30
    9be8:	2b20      	cmp	r3, #32
    9bea:	b510      	push	{r4, lr}
    9bec:	d113      	bne.n	9c16 <RAILINT_3d99cbb66750f16ad038aa09d2dbf23c+0x32>
    9bee:	f410 2fe0 	tst.w	r0, #458752	; 0x70000
    9bf2:	f3c0 4302 	ubfx	r3, r0, #16, #3
    9bf6:	bf1c      	itt	ne
    9bf8:	f3c0 22c4 	ubfxne	r2, r0, #11, #5
    9bfc:	fbb2 f3f3 	udivne	r3, r2, r3
    9c00:	f410 1fc0 	tst.w	r0, #1572864	; 0x180000
    9c04:	bf18      	it	ne
    9c06:	005b      	lslne	r3, r3, #1
    9c08:	2b05      	cmp	r3, #5
    9c0a:	d80d      	bhi.n	9c28 <RAILINT_3d99cbb66750f16ad038aa09d2dbf23c+0x44>
    9c0c:	085c      	lsrs	r4, r3, #1
    9c0e:	f7ff ffc1 	bl	9b94 <RAILINT_1bc89bb9191442fba8e0eefadd7115db>
    9c12:	4360      	muls	r0, r4
    9c14:	bd10      	pop	{r4, pc}
    9c16:	f3c0 1382 	ubfx	r3, r0, #6, #3
    9c1a:	2b01      	cmp	r3, #1
    9c1c:	d006      	beq.n	9c2c <RAILINT_3d99cbb66750f16ad038aa09d2dbf23c+0x48>
    9c1e:	2b04      	cmp	r3, #4
    9c20:	bf14      	ite	ne
    9c22:	2401      	movne	r4, #1
    9c24:	2402      	moveq	r4, #2
    9c26:	e7f2      	b.n	9c0e <RAILINT_3d99cbb66750f16ad038aa09d2dbf23c+0x2a>
    9c28:	2404      	movs	r4, #4
    9c2a:	e7f0      	b.n	9c0e <RAILINT_3d99cbb66750f16ad038aa09d2dbf23c+0x2a>
    9c2c:	2402      	movs	r4, #2
    9c2e:	e7ee      	b.n	9c0e <RAILINT_3d99cbb66750f16ad038aa09d2dbf23c+0x2a>

00009c30 <RAILINT_0f8f345c59ce02114959a6bf3fac0981>:
    9c30:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9c34:	4605      	mov	r5, r0
    9c36:	f7ff fd25 	bl	9684 <RAILINT_9eb58bc3bfde122d3a99681151a64444>
    9c3a:	2600      	movs	r6, #0
    9c3c:	4680      	mov	r8, r0
    9c3e:	f8df b09c 	ldr.w	fp, [pc, #156]	; 9cdc <RAILINT_0f8f345c59ce02114959a6bf3fac0981+0xac>
    9c42:	f7fc fa23 	bl	608c <CORE_EnterCritical>
    9c46:	4b22      	ldr	r3, [pc, #136]	; (9cd0 <RAILINT_0f8f345c59ce02114959a6bf3fac0981+0xa0>)
    9c48:	4682      	mov	sl, r0
    9c4a:	68d9      	ldr	r1, [r3, #12]
    9c4c:	f3c1 6303 	ubfx	r3, r1, #24, #4
    9c50:	1e9f      	subs	r7, r3, #2
    9c52:	2b01      	cmp	r3, #1
    9c54:	b2ff      	uxtb	r7, r7
    9c56:	d028      	beq.n	9caa <RAILINT_0f8f345c59ce02114959a6bf3fac0981+0x7a>
    9c58:	2b05      	cmp	r3, #5
    9c5a:	d028      	beq.n	9cae <RAILINT_0f8f345c59ce02114959a6bf3fac0981+0x7e>
    9c5c:	f1a3 010b 	sub.w	r1, r3, #11
    9c60:	f1d1 0900 	rsbs	r9, r1, #0
    9c64:	eb49 0901 	adc.w	r9, r9, r1
    9c68:	2f01      	cmp	r7, #1
    9c6a:	d822      	bhi.n	9cb2 <RAILINT_0f8f345c59ce02114959a6bf3fac0981+0x82>
    9c6c:	4b19      	ldr	r3, [pc, #100]	; (9cd4 <RAILINT_0f8f345c59ce02114959a6bf3fac0981+0xa4>)
    9c6e:	6919      	ldr	r1, [r3, #16]
    9c70:	f3c1 1489 	ubfx	r4, r1, #6, #10
    9c74:	040a      	lsls	r2, r1, #16
    9c76:	bf48      	it	mi
    9c78:	ea44 040b 	orrmi.w	r4, r4, fp
    9c7c:	b224      	sxth	r4, r4
    9c7e:	1c6b      	adds	r3, r5, #1
    9c80:	d003      	beq.n	9c8a <RAILINT_0f8f345c59ce02114959a6bf3fac0981+0x5a>
    9c82:	f7ff fcff 	bl	9684 <RAILINT_9eb58bc3bfde122d3a99681151a64444>
    9c86:	eba0 0608 	sub.w	r6, r0, r8
    9c8a:	4650      	mov	r0, sl
    9c8c:	f7fc fa02 	bl	6094 <CORE_ExitCritical>
    9c90:	f514 7f00 	cmn.w	r4, #512	; 0x200
    9c94:	d114      	bne.n	9cc0 <RAILINT_0f8f345c59ce02114959a6bf3fac0981+0x90>
    9c96:	2f01      	cmp	r7, #1
    9c98:	d902      	bls.n	9ca0 <RAILINT_0f8f345c59ce02114959a6bf3fac0981+0x70>
    9c9a:	f1b9 0f00 	cmp.w	r9, #0
    9c9e:	d001      	beq.n	9ca4 <RAILINT_0f8f345c59ce02114959a6bf3fac0981+0x74>
    9ca0:	42ae      	cmp	r6, r5
    9ca2:	d3ce      	bcc.n	9c42 <RAILINT_0f8f345c59ce02114959a6bf3fac0981+0x12>
    9ca4:	4620      	mov	r0, r4
    9ca6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9caa:	4699      	mov	r9, r3
    9cac:	e7dc      	b.n	9c68 <RAILINT_0f8f345c59ce02114959a6bf3fac0981+0x38>
    9cae:	f04f 0901 	mov.w	r9, #1
    9cb2:	4c09      	ldr	r4, [pc, #36]	; (9cd8 <RAILINT_0f8f345c59ce02114959a6bf3fac0981+0xa8>)
    9cb4:	e7e3      	b.n	9c7e <RAILINT_0f8f345c59ce02114959a6bf3fac0981+0x4e>
    9cb6:	2c51      	cmp	r4, #81	; 0x51
    9cb8:	bfa8      	it	ge
    9cba:	f44f 74fe 	movge.w	r4, #508	; 0x1fc
    9cbe:	e7f1      	b.n	9ca4 <RAILINT_0f8f345c59ce02114959a6bf3fac0981+0x74>
    9cc0:	3cc8      	subs	r4, #200	; 0xc8
    9cc2:	b224      	sxth	r4, r4
    9cc4:	f514 7f00 	cmn.w	r4, #512	; 0x200
    9cc8:	dcf5      	bgt.n	9cb6 <RAILINT_0f8f345c59ce02114959a6bf3fac0981+0x86>
    9cca:	f46f 74ff 	mvn.w	r4, #510	; 0x1fe
    9cce:	e7e9      	b.n	9ca4 <RAILINT_0f8f345c59ce02114959a6bf3fac0981+0x74>
    9cd0:	a8020000 	.word	0xa8020000
    9cd4:	a800c000 	.word	0xa800c000
    9cd8:	fffffe00 	.word	0xfffffe00
    9cdc:	fffffc00 	.word	0xfffffc00

00009ce0 <RAILINT_12973c63ce9f157526b71bd49da4eecd>:
    9ce0:	4908      	ldr	r1, [pc, #32]	; (9d04 <RAILINT_12973c63ce9f157526b71bd49da4eecd+0x24>)
    9ce2:	b510      	push	{r4, lr}
    9ce4:	f8d1 309c 	ldr.w	r3, [r1, #156]	; 0x9c
    9ce8:	b140      	cbz	r0, 9cfc <RAILINT_12973c63ce9f157526b71bd49da4eecd+0x1c>
    9cea:	461c      	mov	r4, r3
    9cec:	68ca      	ldr	r2, [r1, #12]
    9cee:	f8d1 309c 	ldr.w	r3, [r1, #156]	; 0x9c
    9cf2:	429c      	cmp	r4, r3
    9cf4:	d1f9      	bne.n	9cea <RAILINT_12973c63ce9f157526b71bd49da4eecd+0xa>
    9cf6:	f3c2 6203 	ubfx	r2, r2, #24, #4
    9cfa:	7002      	strb	r2, [r0, #0]
    9cfc:	f003 000f 	and.w	r0, r3, #15
    9d00:	bd10      	pop	{r4, pc}
    9d02:	bf00      	nop
    9d04:	a8020000 	.word	0xa8020000

00009d08 <RAILINT_e37c2f8c4e95a72e70099c8f3fa2cfe4>:
    9d08:	f64f 0104 	movw	r1, #63492	; 0xf804
    9d0c:	f64f 0205 	movw	r2, #63493	; 0xf805
    9d10:	4b04      	ldr	r3, [pc, #16]	; (9d24 <RAILINT_e37c2f8c4e95a72e70099c8f3fa2cfe4+0x1c>)
    9d12:	2001      	movs	r0, #1
    9d14:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    9d16:	b29b      	uxth	r3, r3
    9d18:	428b      	cmp	r3, r1
    9d1a:	bf08      	it	eq
    9d1c:	4613      	moveq	r3, r2
    9d1e:	4a02      	ldr	r2, [pc, #8]	; (9d28 <RAILINT_e37c2f8c4e95a72e70099c8f3fa2cfe4+0x20>)
    9d20:	6613      	str	r3, [r2, #96]	; 0x60
    9d22:	4770      	bx	lr
    9d24:	0fe08000 	.word	0x0fe08000
    9d28:	a801c000 	.word	0xa801c000

00009d2c <PRORTC_IRQHandlerOverride>:
    9d2c:	f04f 4328 	mov.w	r3, #2818572288	; 0xa8000000
    9d30:	6959      	ldr	r1, [r3, #20]
    9d32:	699a      	ldr	r2, [r3, #24]
    9d34:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
    9d38:	400a      	ands	r2, r1
    9d3a:	615a      	str	r2, [r3, #20]
    9d3c:	4770      	bx	lr
	...

00009d40 <PRORTC_IRQHandler>:
    9d40:	b508      	push	{r3, lr}
    9d42:	f7ff fff3 	bl	9d2c <PRORTC_IRQHandlerOverride>
    9d46:	4b04      	ldr	r3, [pc, #16]	; (9d58 <PRORTC_IRQHandler+0x18>)
    9d48:	7b5b      	ldrb	r3, [r3, #13]
    9d4a:	1c9a      	adds	r2, r3, #2
    9d4c:	2301      	movs	r3, #1
    9d4e:	4093      	lsls	r3, r2
    9d50:	4a02      	ldr	r2, [pc, #8]	; (9d5c <PRORTC_IRQHandler+0x1c>)
    9d52:	6153      	str	r3, [r2, #20]
    9d54:	bd08      	pop	{r3, pc}
    9d56:	bf00      	nop
    9d58:	20000e1c 	.word	0x20000e1c
    9d5c:	48002000 	.word	0x48002000

00009d60 <RAILINT_f26e766b4223f258d2a3acd050099dec>:
    9d60:	f04f 0c00 	mov.w	ip, #0
    9d64:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9d68:	fba2 ab01 	umull	sl, fp, r2, r1
    9d6c:	4ea8      	ldr	r6, [pc, #672]	; (a010 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x2b0>)
    9d6e:	f8df e2d0 	ldr.w	lr, [pc, #720]	; a040 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x2e0>
    9d72:	eb1a 0606 	adds.w	r6, sl, r6
    9d76:	461f      	mov	r7, r3
    9d78:	f16b 0300 	sbc.w	r3, fp, #0
    9d7c:	45b6      	cmp	lr, r6
    9d7e:	eb7c 0303 	sbcs.w	r3, ip, r3
    9d82:	d208      	bcs.n	9d96 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x36>
    9d84:	f44f 72ec 	mov.w	r2, #472	; 0x1d8
    9d88:	210e      	movs	r1, #14
    9d8a:	4660      	mov	r0, ip
    9d8c:	f7fd f9a8 	bl	70e0 <RAILINT_205167ae842e22724c3f35c6430eeddb>
    9d90:	2002      	movs	r0, #2
    9d92:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9d96:	f8d0 8078 	ldr.w	r8, [r0, #120]	; 0x78
    9d9a:	460c      	mov	r4, r1
    9d9c:	4615      	mov	r5, r2
    9d9e:	f1b8 0f00 	cmp.w	r8, #0
    9da2:	d004      	beq.n	9dae <RAILINT_f26e766b4223f258d2a3acd050099dec+0x4e>
    9da4:	f8d8 3000 	ldr.w	r3, [r8]
    9da8:	2b03      	cmp	r3, #3
    9daa:	f200 80ea 	bhi.w	9f82 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x222>
    9dae:	4b99      	ldr	r3, [pc, #612]	; (a014 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x2b4>)
    9db0:	4a99      	ldr	r2, [pc, #612]	; (a018 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x2b8>)
    9db2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    9db4:	f8d2 20ec 	ldr.w	r2, [r2, #236]	; 0xec
    9db8:	4998      	ldr	r1, [pc, #608]	; (a01c <RAILINT_f26e766b4223f258d2a3acd050099dec+0x2bc>)
    9dba:	0050      	lsls	r0, r2, #1
    9dbc:	4a96      	ldr	r2, [pc, #600]	; (a018 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x2b8>)
    9dbe:	f3c3 0314 	ubfx	r3, r3, #0, #21
    9dc2:	6e12      	ldr	r2, [r2, #96]	; 0x60
    9dc4:	bf48      	it	mi
    9dc6:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
    9dca:	f8d1 80fc 	ldr.w	r8, [r1, #252]	; 0xfc
    9dce:	0751      	lsls	r1, r2, #29
    9dd0:	bf4e      	itee	mi
    9dd2:	f44f 0940 	movmi.w	r9, #12582912	; 0xc00000
    9dd6:	ea4f 5982 	movpl.w	r9, r2, lsl #22
    9dda:	f009 79e0 	andpl.w	r9, r9, #29360128	; 0x1c00000
    9dde:	ea43 6345 	orr.w	r3, r3, r5, lsl #25
    9de2:	ea43 0909 	orr.w	r9, r3, r9
    9de6:	f7fc fc4d 	bl	6684 <SystemHFXOClockGet>
    9dea:	2d01      	cmp	r5, #1
    9dec:	4606      	mov	r6, r0
    9dee:	d1cf      	bne.n	9d90 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x30>
    9df0:	2800      	cmp	r0, #0
    9df2:	d0cd      	beq.n	9d90 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x30>
    9df4:	4b8a      	ldr	r3, [pc, #552]	; (a020 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x2c0>)
    9df6:	601c      	str	r4, [r3, #0]
    9df8:	4b8a      	ldr	r3, [pc, #552]	; (a024 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x2c4>)
    9dfa:	4298      	cmp	r0, r3
    9dfc:	f000 80d0 	beq.w	9fa0 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x240>
    9e00:	2500      	movs	r5, #0
    9e02:	ea4f 41cb 	mov.w	r1, fp, lsl #19
    9e06:	4632      	mov	r2, r6
    9e08:	462b      	mov	r3, r5
    9e0a:	ea41 315a 	orr.w	r1, r1, sl, lsr #13
    9e0e:	ea4f 40ca 	mov.w	r0, sl, lsl #19
    9e12:	f001 fcc7 	bl	b7a4 <__aeabi_uldivmod>
    9e16:	f3c9 0313 	ubfx	r3, r9, #0, #20
    9e1a:	fba3 2606 	umull	r2, r6, r3, r6
    9e1e:	fb03 6505 	mla	r5, r3, r5, r6
    9e22:	0cd6      	lsrs	r6, r2, #19
    9e24:	ea46 3645 	orr.w	r6, r6, r5, lsl #13
    9e28:	f419 1f80 	tst.w	r9, #1048576	; 0x100000
    9e2c:	bf08      	it	eq
    9e2e:	4276      	negeq	r6, r6
    9e30:	4b7d      	ldr	r3, [pc, #500]	; (a028 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x2c8>)
    9e32:	4d7e      	ldr	r5, [pc, #504]	; (a02c <RAILINT_f26e766b4223f258d2a3acd050099dec+0x2cc>)
    9e34:	4434      	add	r4, r6
    9e36:	6038      	str	r0, [r7, #0]
    9e38:	601e      	str	r6, [r3, #0]
    9e3a:	602c      	str	r4, [r5, #0]
    9e3c:	f1b8 0f00 	cmp.w	r8, #0
    9e40:	f000 80b8 	beq.w	9fb4 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x254>
    9e44:	2300      	movs	r3, #0
    9e46:	497a      	ldr	r1, [pc, #488]	; (a030 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x2d0>)
    9e48:	f3c9 5281 	ubfx	r2, r9, #22, #2
    9e4c:	5c8a      	ldrb	r2, [r1, r2]
    9e4e:	4619      	mov	r1, r3
    9e50:	f019 7f80 	tst.w	r9, #16777216	; 0x1000000
    9e54:	bf18      	it	ne
    9e56:	0864      	lsrne	r4, r4, #1
    9e58:	2e00      	cmp	r6, #0
    9e5a:	bfb8      	it	lt
    9e5c:	4276      	neglt	r6, r6
    9e5e:	0692      	lsls	r2, r2, #26
    9e60:	0860      	lsrs	r0, r4, #1
    9e62:	fbc2 0106 	smlal	r0, r1, r2, r6
    9e66:	4622      	mov	r2, r4
    9e68:	f001 fc9c 	bl	b7a4 <__aeabi_uldivmod>
    9e6c:	f419 1f00 	tst.w	r9, #2097152	; 0x200000
    9e70:	f3c0 0013 	ubfx	r0, r0, #0, #20
    9e74:	f8d8 1018 	ldr.w	r1, [r8, #24]
    9e78:	6078      	str	r0, [r7, #4]
    9e7a:	bf0c      	ite	eq
    9e7c:	f240 1007 	movweq	r0, #263	; 0x107
    9e80:	20c4      	movne	r0, #196	; 0xc4
    9e82:	4b6c      	ldr	r3, [pc, #432]	; (a034 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x2d4>)
    9e84:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
    9e88:	fba3 6304 	umull	r6, r3, r3, r4
    9e8c:	095b      	lsrs	r3, r3, #5
    9e8e:	fb00 f303 	mul.w	r3, r0, r3
    9e92:	fbb3 f3f1 	udiv	r3, r3, r1
    9e96:	fb03 f202 	mul.w	r2, r3, r2
    9e9a:	32fa      	adds	r2, #250	; 0xfa
    9e9c:	fba4 0600 	umull	r0, r6, r4, r0
    9ea0:	fba2 2101 	umull	r2, r1, r2, r1
    9ea4:	4282      	cmp	r2, r0
    9ea6:	eb71 0206 	sbcs.w	r2, r1, r6
    9eaa:	bf38      	it	cc
    9eac:	3301      	addcc	r3, #1
    9eae:	b2db      	uxtb	r3, r3
    9eb0:	f443 6e00 	orr.w	lr, r3, #2048	; 0x800
    9eb4:	f8c7 e008 	str.w	lr, [r7, #8]
    9eb8:	2b00      	cmp	r3, #0
    9eba:	d079      	beq.n	9fb0 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x250>
    9ebc:	fab4 f284 	clz	r2, r4
    9ec0:	f8d8 101c 	ldr.w	r1, [r8, #28]
    9ec4:	2a0e      	cmp	r2, #14
    9ec6:	fba3 0601 	umull	r0, r6, r3, r1
    9eca:	dd75      	ble.n	9fb8 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x258>
    9ecc:	03e2      	lsls	r2, r4, #15
    9ece:	2e00      	cmp	r6, #0
    9ed0:	f040 808a 	bne.w	9fe8 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x288>
    9ed4:	fbb2 f2f0 	udiv	r2, r2, r0
    9ed8:	0050      	lsls	r0, r2, #1
    9eda:	fb00 3003 	mla	r0, r0, r3, r3
    9ede:	fba1 c600 	umull	ip, r6, r1, r0
    9ee2:	ea4f 4804 	mov.w	r8, r4, lsl #16
    9ee6:	45e0      	cmp	r8, ip
    9ee8:	ea4f 4414 	mov.w	r4, r4, lsr #16
    9eec:	eb74 0606 	sbcs.w	r6, r4, r6
    9ef0:	d309      	bcc.n	9f06 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x1a6>
    9ef2:	005b      	lsls	r3, r3, #1
    9ef4:	4418      	add	r0, r3
    9ef6:	fba1 c600 	umull	ip, r6, r1, r0
    9efa:	45e0      	cmp	r8, ip
    9efc:	eb74 0606 	sbcs.w	r6, r4, r6
    9f00:	f102 0201 	add.w	r2, r2, #1
    9f04:	d2f6      	bcs.n	9ef4 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x194>
    9f06:	f3c2 020e 	ubfx	r2, r2, #0, #15
    9f0a:	ea4e 3202 	orr.w	r2, lr, r2, lsl #12
    9f0e:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
    9f12:	60ba      	str	r2, [r7, #8]
    9f14:	f7fc fbb6 	bl	6684 <SystemHFXOClockGet>
    9f18:	682c      	ldr	r4, [r5, #0]
    9f1a:	fab4 f384 	clz	r3, r4
    9f1e:	f1d3 0302 	rsbs	r3, r3, #2
    9f22:	bf58      	it	pl
    9f24:	40dc      	lsrpl	r4, r3
    9f26:	4b44      	ldr	r3, [pc, #272]	; (a038 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x2d8>)
    9f28:	429c      	cmp	r4, r3
    9f2a:	bf88      	it	hi
    9f2c:	0864      	lsrhi	r4, r4, #1
    9f2e:	2800      	cmp	r0, #0
    9f30:	d065      	beq.n	9ffe <RAILINT_f26e766b4223f258d2a3acd050099dec+0x29e>
    9f32:	fbb4 f3f0 	udiv	r3, r4, r0
    9f36:	2164      	movs	r1, #100	; 0x64
    9f38:	fb00 4213 	mls	r2, r0, r3, r4
    9f3c:	fb01 f202 	mul.w	r2, r1, r2
    9f40:	4290      	cmp	r0, r2
    9f42:	d862      	bhi.n	a00a <RAILINT_f26e766b4223f258d2a3acd050099dec+0x2aa>
    9f44:	1e5a      	subs	r2, r3, #1
    9f46:	0852      	lsrs	r2, r2, #1
    9f48:	085b      	lsrs	r3, r3, #1
    9f4a:	3b01      	subs	r3, #1
    9f4c:	0212      	lsls	r2, r2, #8
    9f4e:	ea42 1303 	orr.w	r3, r2, r3, lsl #4
    9f52:	60fb      	str	r3, [r7, #12]
    9f54:	f7fc fb66 	bl	6624 <SystemSYSCLKGet>
    9f58:	2800      	cmp	r0, #0
    9f5a:	d048      	beq.n	9fee <RAILINT_f26e766b4223f258d2a3acd050099dec+0x28e>
    9f5c:	fbb4 f3f0 	udiv	r3, r4, r0
    9f60:	2164      	movs	r1, #100	; 0x64
    9f62:	fb00 4413 	mls	r4, r0, r3, r4
    9f66:	fb01 f404 	mul.w	r4, r1, r4
    9f6a:	42a0      	cmp	r0, r4
    9f6c:	d845      	bhi.n	9ffa <RAILINT_f26e766b4223f258d2a3acd050099dec+0x29a>
    9f6e:	1e5a      	subs	r2, r3, #1
    9f70:	0852      	lsrs	r2, r2, #1
    9f72:	085b      	lsrs	r3, r3, #1
    9f74:	3b01      	subs	r3, #1
    9f76:	0212      	lsls	r2, r2, #8
    9f78:	ea42 1303 	orr.w	r3, r2, r3, lsl #4
    9f7c:	2000      	movs	r0, #0
    9f7e:	613b      	str	r3, [r7, #16]
    9f80:	e707      	b.n	9d92 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x32>
    9f82:	2b04      	cmp	r3, #4
    9f84:	f8d8 9028 	ldr.w	r9, [r8, #40]	; 0x28
    9f88:	f47f af2d 	bne.w	9de6 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x86>
    9f8c:	f019 7f80 	tst.w	r9, #16777216	; 0x1000000
    9f90:	bf0c      	ite	eq
    9f92:	f009 73e0 	andeq.w	r3, r9, #29360128	; 0x1c00000
    9f96:	f44f 0340 	movne.w	r3, #12582912	; 0xc00000
    9f9a:	f029 79e0 	bic.w	r9, r9, #29360128	; 0x1c00000
    9f9e:	e720      	b.n	9de2 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x82>
    9fa0:	4926      	ldr	r1, [pc, #152]	; (a03c <RAILINT_f26e766b4223f258d2a3acd050099dec+0x2dc>)
    9fa2:	2500      	movs	r5, #0
    9fa4:	fbaa a001 	umull	sl, r0, sl, r1
    9fa8:	fb01 000b 	mla	r0, r1, fp, r0
    9fac:	0980      	lsrs	r0, r0, #6
    9fae:	e732      	b.n	9e16 <RAILINT_f26e766b4223f258d2a3acd050099dec+0xb6>
    9fb0:	2001      	movs	r0, #1
    9fb2:	e6ee      	b.n	9d92 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x32>
    9fb4:	4640      	mov	r0, r8
    9fb6:	e6ec      	b.n	9d92 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x32>
    9fb8:	f1c2 0c0f 	rsb	ip, r2, #15
    9fbc:	f102 0811 	add.w	r8, r2, #17
    9fc0:	fa06 f808 	lsl.w	r8, r6, r8
    9fc4:	fa20 f00c 	lsr.w	r0, r0, ip
    9fc8:	ea40 0008 	orr.w	r0, r0, r8
    9fcc:	f1ac 0820 	sub.w	r8, ip, #32
    9fd0:	fa26 f808 	lsr.w	r8, r6, r8
    9fd4:	ea40 0008 	orr.w	r0, r0, r8
    9fd8:	fa26 f60c 	lsr.w	r6, r6, ip
    9fdc:	3001      	adds	r0, #1
    9fde:	fa04 f202 	lsl.w	r2, r4, r2
    9fe2:	f146 0600 	adc.w	r6, r6, #0
    9fe6:	e772      	b.n	9ece <RAILINT_f26e766b4223f258d2a3acd050099dec+0x16e>
    9fe8:	4618      	mov	r0, r3
    9fea:	2200      	movs	r2, #0
    9fec:	e777      	b.n	9ede <RAILINT_f26e766b4223f258d2a3acd050099dec+0x17e>
    9fee:	f240 32ae 	movw	r2, #942	; 0x3ae
    9ff2:	212b      	movs	r1, #43	; 0x2b
    9ff4:	f7fd f874 	bl	70e0 <RAILINT_205167ae842e22724c3f35c6430eeddb>
    9ff8:	4623      	mov	r3, r4
    9ffa:	3b01      	subs	r3, #1
    9ffc:	e7b7      	b.n	9f6e <RAILINT_f26e766b4223f258d2a3acd050099dec+0x20e>
    9ffe:	f240 328b 	movw	r2, #907	; 0x38b
    a002:	212b      	movs	r1, #43	; 0x2b
    a004:	f7fd f86c 	bl	70e0 <RAILINT_205167ae842e22724c3f35c6430eeddb>
    a008:	4623      	mov	r3, r4
    a00a:	3b01      	subs	r3, #1
    a00c:	e79a      	b.n	9f44 <RAILINT_f26e766b4223f258d2a3acd050099dec+0x1e4>
    a00e:	bf00      	nop
    a010:	88ca6c00 	.word	0x88ca6c00
    a014:	a8018000 	.word	0xa8018000
    a018:	a8014000 	.word	0xa8014000
    a01c:	b0001f00 	.word	0xb0001f00
    a020:	20000e04 	.word	0x20000e04
    a024:	0249f000 	.word	0x0249f000
    a028:	20000dfc 	.word	0x20000dfc
    a02c:	20000e00 	.word	0x20000e00
    a030:	0000bee0 	.word	0x0000bee0
    a034:	10624dd3 	.word	0x10624dd3
    a038:	2540be3f 	.word	0x2540be3f
    a03c:	dfb23b0a 	.word	0xdfb23b0a
    a040:	4a817c80 	.word	0x4a817c80

0000a044 <RAILINT_40f50b01b0acf65296da94a1cd4ce85b>:
    a044:	b510      	push	{r4, lr}
    a046:	4604      	mov	r4, r0
    a048:	b086      	sub	sp, #24
    a04a:	b949      	cbnz	r1, a060 <RAILINT_40f50b01b0acf65296da94a1cd4ce85b+0x1c>
    a04c:	4b1f      	ldr	r3, [pc, #124]	; (a0cc <RAILINT_40f50b01b0acf65296da94a1cd4ce85b+0x88>)
    a04e:	6818      	ldr	r0, [r3, #0]
    a050:	b100      	cbz	r0, a054 <RAILINT_40f50b01b0acf65296da94a1cd4ce85b+0x10>
    a052:	300c      	adds	r0, #12
    a054:	6821      	ldr	r1, [r4, #0]
    a056:	79a2      	ldrb	r2, [r4, #6]
    a058:	ab01      	add	r3, sp, #4
    a05a:	f7ff fe81 	bl	9d60 <RAILINT_f26e766b4223f258d2a3acd050099dec>
    a05e:	a901      	add	r1, sp, #4
    a060:	4b1b      	ldr	r3, [pc, #108]	; (a0d0 <RAILINT_40f50b01b0acf65296da94a1cd4ce85b+0x8c>)
    a062:	680a      	ldr	r2, [r1, #0]
    a064:	635a      	str	r2, [r3, #52]	; 0x34
    a066:	4b1b      	ldr	r3, [pc, #108]	; (a0d4 <RAILINT_40f50b01b0acf65296da94a1cd4ce85b+0x90>)
    a068:	f8d3 30fc 	ldr.w	r3, [r3, #252]	; 0xfc
    a06c:	b333      	cbz	r3, a0bc <RAILINT_40f50b01b0acf65296da94a1cd4ce85b+0x78>
    a06e:	684b      	ldr	r3, [r1, #4]
    a070:	b143      	cbz	r3, a084 <RAILINT_40f50b01b0acf65296da94a1cd4ce85b+0x40>
    a072:	4b19      	ldr	r3, [pc, #100]	; (a0d8 <RAILINT_40f50b01b0acf65296da94a1cd4ce85b+0x94>)
    a074:	4a19      	ldr	r2, [pc, #100]	; (a0dc <RAILINT_40f50b01b0acf65296da94a1cd4ce85b+0x98>)
    a076:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
    a07a:	684a      	ldr	r2, [r1, #4]
    a07c:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
    a080:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
    a084:	688b      	ldr	r3, [r1, #8]
    a086:	b143      	cbz	r3, a09a <RAILINT_40f50b01b0acf65296da94a1cd4ce85b+0x56>
    a088:	4b13      	ldr	r3, [pc, #76]	; (a0d8 <RAILINT_40f50b01b0acf65296da94a1cd4ce85b+0x94>)
    a08a:	4a15      	ldr	r2, [pc, #84]	; (a0e0 <RAILINT_40f50b01b0acf65296da94a1cd4ce85b+0x9c>)
    a08c:	f8c3 20ec 	str.w	r2, [r3, #236]	; 0xec
    a090:	688a      	ldr	r2, [r1, #8]
    a092:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
    a096:	f8c3 20ec 	str.w	r2, [r3, #236]	; 0xec
    a09a:	4a12      	ldr	r2, [pc, #72]	; (a0e4 <RAILINT_40f50b01b0acf65296da94a1cd4ce85b+0xa0>)
    a09c:	68c8      	ldr	r0, [r1, #12]
    a09e:	f8d2 3164 	ldr.w	r3, [r2, #356]	; 0x164
    a0a2:	f423 63ee 	bic.w	r3, r3, #1904	; 0x770
    a0a6:	4303      	orrs	r3, r0
    a0a8:	f8c2 3164 	str.w	r3, [r2, #356]	; 0x164
    a0ac:	f8d2 315c 	ldr.w	r3, [r2, #348]	; 0x15c
    a0b0:	6909      	ldr	r1, [r1, #16]
    a0b2:	f423 63ee 	bic.w	r3, r3, #1904	; 0x770
    a0b6:	430b      	orrs	r3, r1
    a0b8:	f8c2 315c 	str.w	r3, [r2, #348]	; 0x15c
    a0bc:	2000      	movs	r0, #0
    a0be:	88a2      	ldrh	r2, [r4, #4]
    a0c0:	4b03      	ldr	r3, [pc, #12]	; (a0d0 <RAILINT_40f50b01b0acf65296da94a1cd4ce85b+0x8c>)
    a0c2:	641a      	str	r2, [r3, #64]	; 0x40
    a0c4:	6458      	str	r0, [r3, #68]	; 0x44
    a0c6:	b006      	add	sp, #24
    a0c8:	bd10      	pop	{r4, pc}
    a0ca:	bf00      	nop
    a0cc:	20000aa8 	.word	0x20000aa8
    a0d0:	a8018000 	.word	0xa8018000
    a0d4:	b0001f00 	.word	0xb0001f00
    a0d8:	a8016000 	.word	0xa8016000
    a0dc:	000fffff 	.word	0x000fffff
    a0e0:	0ffff8ff 	.word	0x0ffff8ff
    a0e4:	a8020000 	.word	0xa8020000

0000a0e8 <RAILINT_ffff6fd8b93bee8f8f3297dc48915167>:
    a0e8:	2003      	movs	r0, #3
    a0ea:	4770      	bx	lr

0000a0ec <RAILINT_2079853137a39b9d404b4228d973f1ee>:
    a0ec:	2305      	movs	r3, #5
    a0ee:	4a05      	ldr	r2, [pc, #20]	; (a104 <RAILINT_2079853137a39b9d404b4228d973f1ee+0x18>)
    a0f0:	8753      	strh	r3, [r2, #58]	; 0x3a
    a0f2:	f892 3039 	ldrb.w	r3, [r2, #57]	; 0x39
    a0f6:	f003 0301 	and.w	r3, r3, #1
    a0fa:	f063 0373 	orn	r3, r3, #115	; 0x73
    a0fe:	f882 3039 	strb.w	r3, [r2, #57]	; 0x39
    a102:	4770      	bx	lr
    a104:	b0001f00 	.word	0xb0001f00

0000a108 <RAILINT_d0ad23c1600b008713957f4fe5ac160e>:
    a108:	b508      	push	{r3, lr}
    a10a:	4815      	ldr	r0, [pc, #84]	; (a160 <RAILINT_d0ad23c1600b008713957f4fe5ac160e+0x58>)
    a10c:	f7ff fad0 	bl	96b0 <RAILINT_91df45e96a2874f76867d6f26ae534a0>
    a110:	4b14      	ldr	r3, [pc, #80]	; (a164 <RAILINT_d0ad23c1600b008713957f4fe5ac160e+0x5c>)
    a112:	f8d3 0138 	ldr.w	r0, [r3, #312]	; 0x138
    a116:	f5a3 3380 	sub.w	r3, r3, #65536	; 0x10000
    a11a:	68da      	ldr	r2, [r3, #12]
    a11c:	f400 4000 	and.w	r0, r0, #32768	; 0x8000
    a120:	02d2      	lsls	r2, r2, #11
    a122:	d41a      	bmi.n	a15a <RAILINT_d0ad23c1600b008713957f4fe5ac160e+0x52>
    a124:	4a10      	ldr	r2, [pc, #64]	; (a168 <RAILINT_d0ad23c1600b008713957f4fe5ac160e+0x60>)
    a126:	6892      	ldr	r2, [r2, #8]
    a128:	f8d3 10bc 	ldr.w	r1, [r3, #188]	; 0xbc
    a12c:	f3c2 0281 	ubfx	r2, r2, #2, #2
    a130:	f411 6380 	ands.w	r3, r1, #1024	; 0x400
    a134:	f102 0201 	add.w	r2, r2, #1
    a138:	b2c9      	uxtb	r1, r1
    a13a:	bf18      	it	ne
    a13c:	00d3      	lslne	r3, r2, #3
    a13e:	29ff      	cmp	r1, #255	; 0xff
    a140:	d006      	beq.n	a150 <RAILINT_d0ad23c1600b008713957f4fe5ac160e+0x48>
    a142:	490a      	ldr	r1, [pc, #40]	; (a16c <RAILINT_d0ad23c1600b008713957f4fe5ac160e+0x64>)
    a144:	f8d1 10c0 	ldr.w	r1, [r1, #192]	; 0xc0
    a148:	0549      	lsls	r1, r1, #21
    a14a:	d501      	bpl.n	a150 <RAILINT_d0ad23c1600b008713957f4fe5ac160e+0x48>
    a14c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
    a150:	b100      	cbz	r0, a154 <RAILINT_d0ad23c1600b008713957f4fe5ac160e+0x4c>
    a152:	3303      	adds	r3, #3
    a154:	4a06      	ldr	r2, [pc, #24]	; (a170 <RAILINT_d0ad23c1600b008713957f4fe5ac160e+0x68>)
    a156:	66d3      	str	r3, [r2, #108]	; 0x6c
    a158:	bd08      	pop	{r3, pc}
    a15a:	2300      	movs	r3, #0
    a15c:	e7f8      	b.n	a150 <RAILINT_d0ad23c1600b008713957f4fe5ac160e+0x48>
    a15e:	bf00      	nop
    a160:	000f4240 	.word	0x000f4240
    a164:	a8014000 	.word	0xa8014000
    a168:	a8010000 	.word	0xa8010000
    a16c:	a8004000 	.word	0xa8004000
    a170:	b0001f00 	.word	0xb0001f00

0000a174 <RAILINT_06b1ea13261364007801a74aa7e1e357>:
    a174:	4b08      	ldr	r3, [pc, #32]	; (a198 <RAILINT_06b1ea13261364007801a74aa7e1e357+0x24>)
    a176:	17c1      	asrs	r1, r0, #31
    a178:	681a      	ldr	r2, [r3, #0]
    a17a:	fba2 0300 	umull	r0, r3, r2, r0
    a17e:	fb02 3301 	mla	r3, r2, r1, r3
    a182:	f110 7080 	adds.w	r0, r0, #16777216	; 0x1000000
    a186:	f143 0300 	adc.w	r3, r3, #0
    a18a:	0e40      	lsrs	r0, r0, #25
    a18c:	ea40 10c3 	orr.w	r0, r0, r3, lsl #7
    a190:	3880      	subs	r0, #128	; 0x80
    a192:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
    a196:	4770      	bx	lr
    a198:	20000e08 	.word	0x20000e08

0000a19c <RAILINT_4baddb3f7581dff171ab25f7b0ebdad3>:
    a19c:	2207      	movs	r2, #7
    a19e:	4b16      	ldr	r3, [pc, #88]	; (a1f8 <RAILINT_4baddb3f7581dff171ab25f7b0ebdad3+0x5c>)
    a1a0:	b570      	push	{r4, r5, r6, lr}
    a1a2:	66da      	str	r2, [r3, #108]	; 0x6c
    a1a4:	f7ff fbb8 	bl	9918 <RAILINT_56a75a549239881c0b0573168dc43aff>
    a1a8:	4b14      	ldr	r3, [pc, #80]	; (a1fc <RAILINT_4baddb3f7581dff171ab25f7b0ebdad3+0x60>)
    a1aa:	08c4      	lsrs	r4, r0, #3
    a1ac:	0b01      	lsrs	r1, r0, #12
    a1ae:	4605      	mov	r5, r0
    a1b0:	05e0      	lsls	r0, r4, #23
    a1b2:	18c0      	adds	r0, r0, r3
    a1b4:	4a12      	ldr	r2, [pc, #72]	; (a200 <RAILINT_4baddb3f7581dff171ab25f7b0ebdad3+0x64>)
    a1b6:	f141 0100 	adc.w	r1, r1, #0
    a1ba:	2300      	movs	r3, #0
    a1bc:	f001 faf2 	bl	b7a4 <__aeabi_uldivmod>
    a1c0:	4b10      	ldr	r3, [pc, #64]	; (a204 <RAILINT_4baddb3f7581dff171ab25f7b0ebdad3+0x68>)
    a1c2:	4e11      	ldr	r6, [pc, #68]	; (a208 <RAILINT_4baddb3f7581dff171ab25f7b0ebdad3+0x6c>)
    a1c4:	6018      	str	r0, [r3, #0]
    a1c6:	f64e 2060 	movw	r0, #60000	; 0xea60
    a1ca:	f7ff ffd3 	bl	a174 <RAILINT_06b1ea13261364007801a74aa7e1e357>
    a1ce:	4240      	negs	r0, r0
    a1d0:	f8c6 0090 	str.w	r0, [r6, #144]	; 0x90
    a1d4:	480d      	ldr	r0, [pc, #52]	; (a20c <RAILINT_4baddb3f7581dff171ab25f7b0ebdad3+0x70>)
    a1d6:	f7ff fa6b 	bl	96b0 <RAILINT_91df45e96a2874f76867d6f26ae534a0>
    a1da:	4602      	mov	r2, r0
    a1dc:	b158      	cbz	r0, a1f6 <RAILINT_4baddb3f7581dff171ab25f7b0ebdad3+0x5a>
    a1de:	01e3      	lsls	r3, r4, #7
    a1e0:	0850      	lsrs	r0, r2, #1
    a1e2:	1818      	adds	r0, r3, r0
    a1e4:	ea4f 7115 	mov.w	r1, r5, lsr #28
    a1e8:	f04f 0300 	mov.w	r3, #0
    a1ec:	f141 0100 	adc.w	r1, r1, #0
    a1f0:	f001 fad8 	bl	b7a4 <__aeabi_uldivmod>
    a1f4:	66b0      	str	r0, [r6, #104]	; 0x68
    a1f6:	bd70      	pop	{r4, r5, r6, pc}
    a1f8:	a8020000 	.word	0xa8020000
    a1fc:	000ee6b2 	.word	0x000ee6b2
    a200:	001dcd65 	.word	0x001dcd65
    a204:	20000e08 	.word	0x20000e08
    a208:	b0001f00 	.word	0xb0001f00
    a20c:	000f4240 	.word	0x000f4240

0000a210 <RAILINT_43ae21a22b6204273e89e527a423910e>:
    a210:	b130      	cbz	r0, a220 <RAILINT_43ae21a22b6204273e89e527a423910e+0x10>
    a212:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    a216:	4358      	muls	r0, r3
    a218:	f6a0 50ac 	subw	r0, r0, #3500	; 0xdac
    a21c:	f7ff bfaa 	b.w	a174 <RAILINT_06b1ea13261364007801a74aa7e1e357>
    a220:	f64e 2060 	movw	r0, #60000	; 0xea60
    a224:	e7fa      	b.n	a21c <RAILINT_43ae21a22b6204273e89e527a423910e+0xc>
	...

0000a228 <RAILINT_aeea5e1f09f1c2b4f097efecd921db8d>:
    a228:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    a22c:	460c      	mov	r4, r1
    a22e:	4606      	mov	r6, r0
    a230:	2800      	cmp	r0, #0
    a232:	f000 8082 	beq.w	a33a <RAILINT_aeea5e1f09f1c2b4f097efecd921db8d+0x112>
    a236:	f011 0504 	ands.w	r5, r1, #4
    a23a:	d044      	beq.n	a2c6 <RAILINT_aeea5e1f09f1c2b4f097efecd921db8d+0x9e>
    a23c:	69c0      	ldr	r0, [r0, #28]
    a23e:	2800      	cmp	r0, #0
    a240:	d07d      	beq.n	a33e <RAILINT_aeea5e1f09f1c2b4f097efecd921db8d+0x116>
    a242:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    a246:	4358      	muls	r0, r3
    a248:	68b3      	ldr	r3, [r6, #8]
    a24a:	f6a0 50ac 	subw	r0, r0, #3500	; 0xdac
    a24e:	1ac0      	subs	r0, r0, r3
    a250:	f7ff ff90 	bl	a174 <RAILINT_06b1ea13261364007801a74aa7e1e357>
    a254:	4b41      	ldr	r3, [pc, #260]	; (a35c <RAILINT_aeea5e1f09f1c2b4f097efecd921db8d+0x134>)
    a256:	f8c3 0080 	str.w	r0, [r3, #128]	; 0x80
    a25a:	8d30      	ldrh	r0, [r6, #40]	; 0x28
    a25c:	2800      	cmp	r0, #0
    a25e:	d071      	beq.n	a344 <RAILINT_aeea5e1f09f1c2b4f097efecd921db8d+0x11c>
    a260:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    a264:	4358      	muls	r0, r3
    a266:	68b3      	ldr	r3, [r6, #8]
    a268:	f6a0 50ac 	subw	r0, r0, #3500	; 0xdac
    a26c:	1ac0      	subs	r0, r0, r3
    a26e:	f7ff ff81 	bl	a174 <RAILINT_06b1ea13261364007801a74aa7e1e357>
    a272:	4b3a      	ldr	r3, [pc, #232]	; (a35c <RAILINT_aeea5e1f09f1c2b4f097efecd921db8d+0x134>)
    a274:	6798      	str	r0, [r3, #120]	; 0x78
    a276:	69b3      	ldr	r3, [r6, #24]
    a278:	2b00      	cmp	r3, #0
    a27a:	d066      	beq.n	a34a <RAILINT_aeea5e1f09f1c2b4f097efecd921db8d+0x122>
    a27c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    a280:	4353      	muls	r3, r2
    a282:	68b2      	ldr	r2, [r6, #8]
    a284:	f6a3 53ac 	subw	r3, r3, #3500	; 0xdac
    a288:	1a9b      	subs	r3, r3, r2
    a28a:	6872      	ldr	r2, [r6, #4]
    a28c:	1a9b      	subs	r3, r3, r2
    a28e:	4a34      	ldr	r2, [pc, #208]	; (a360 <RAILINT_aeea5e1f09f1c2b4f097efecd921db8d+0x138>)
    a290:	17d8      	asrs	r0, r3, #31
    a292:	6811      	ldr	r1, [r2, #0]
    a294:	4f31      	ldr	r7, [pc, #196]	; (a35c <RAILINT_aeea5e1f09f1c2b4f097efecd921db8d+0x134>)
    a296:	fba1 3203 	umull	r3, r2, r1, r3
    a29a:	fb01 2200 	mla	r2, r1, r0, r2
    a29e:	f113 7380 	adds.w	r3, r3, #16777216	; 0x1000000
    a2a2:	f142 0200 	adc.w	r2, r2, #0
    a2a6:	0e5b      	lsrs	r3, r3, #25
    a2a8:	ea43 13c2 	orr.w	r3, r3, r2, lsl #7
    a2ac:	3b80      	subs	r3, #128	; 0x80
    a2ae:	67fb      	str	r3, [r7, #124]	; 0x7c
    a2b0:	667b      	str	r3, [r7, #100]	; 0x64
    a2b2:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
    a2b6:	f7fe ff35 	bl	9124 <RAILINT_da84b4d83e32af60304869814f893155>
    a2ba:	4601      	mov	r1, r0
    a2bc:	4640      	mov	r0, r8
    a2be:	f7ff ffa7 	bl	a210 <RAILINT_43ae21a22b6204273e89e527a423910e>
    a2c2:	f8c7 008c 	str.w	r0, [r7, #140]	; 0x8c
    a2c6:	07a3      	lsls	r3, r4, #30
    a2c8:	d51d      	bpl.n	a306 <RAILINT_aeea5e1f09f1c2b4f097efecd921db8d+0xde>
    a2ca:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    a2ce:	6933      	ldr	r3, [r6, #16]
    a2d0:	4358      	muls	r0, r3
    a2d2:	b123      	cbz	r3, a2de <RAILINT_aeea5e1f09f1c2b4f097efecd921db8d+0xb6>
    a2d4:	6833      	ldr	r3, [r6, #0]
    a2d6:	f503 531c 	add.w	r3, r3, #9984	; 0x2700
    a2da:	3310      	adds	r3, #16
    a2dc:	4418      	add	r0, r3
    a2de:	f7ff ff49 	bl	a174 <RAILINT_06b1ea13261364007801a74aa7e1e357>
    a2e2:	4b1e      	ldr	r3, [pc, #120]	; (a35c <RAILINT_aeea5e1f09f1c2b4f097efecd921db8d+0x134>)
    a2e4:	f8c3 0088 	str.w	r0, [r3, #136]	; 0x88
    a2e8:	6a33      	ldr	r3, [r6, #32]
    a2ea:	b38b      	cbz	r3, a350 <RAILINT_aeea5e1f09f1c2b4f097efecd921db8d+0x128>
    a2ec:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    a2f0:	68b0      	ldr	r0, [r6, #8]
    a2f2:	fb02 0003 	mla	r0, r2, r3, r0
    a2f6:	f5a0 5003 	sub.w	r0, r0, #8384	; 0x20c0
    a2fa:	3810      	subs	r0, #16
    a2fc:	f7ff ff3a 	bl	a174 <RAILINT_06b1ea13261364007801a74aa7e1e357>
    a300:	4b16      	ldr	r3, [pc, #88]	; (a35c <RAILINT_aeea5e1f09f1c2b4f097efecd921db8d+0x134>)
    a302:	f8c3 0084 	str.w	r0, [r3, #132]	; 0x84
    a306:	b1c5      	cbz	r5, a33a <RAILINT_aeea5e1f09f1c2b4f097efecd921db8d+0x112>
    a308:	6970      	ldr	r0, [r6, #20]
    a30a:	b320      	cbz	r0, a356 <RAILINT_aeea5e1f09f1c2b4f097efecd921db8d+0x12e>
    a30c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    a310:	4358      	muls	r0, r3
    a312:	f5a0 5003 	sub.w	r0, r0, #8384	; 0x20c0
    a316:	3810      	subs	r0, #16
    a318:	f7ff ff2c 	bl	a174 <RAILINT_06b1ea13261364007801a74aa7e1e357>
    a31c:	4c0f      	ldr	r4, [pc, #60]	; (a35c <RAILINT_aeea5e1f09f1c2b4f097efecd921db8d+0x134>)
    a31e:	6720      	str	r0, [r4, #112]	; 0x70
    a320:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    a324:	68f3      	ldr	r3, [r6, #12]
    a326:	4358      	muls	r0, r3
    a328:	b123      	cbz	r3, a334 <RAILINT_aeea5e1f09f1c2b4f097efecd921db8d+0x10c>
    a32a:	6833      	ldr	r3, [r6, #0]
    a32c:	f503 531c 	add.w	r3, r3, #9984	; 0x2700
    a330:	3310      	adds	r3, #16
    a332:	4418      	add	r0, r3
    a334:	f7ff ff1e 	bl	a174 <RAILINT_06b1ea13261364007801a74aa7e1e357>
    a338:	6760      	str	r0, [r4, #116]	; 0x74
    a33a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    a33e:	f64e 2060 	movw	r0, #60000	; 0xea60
    a342:	e785      	b.n	a250 <RAILINT_aeea5e1f09f1c2b4f097efecd921db8d+0x28>
    a344:	f64e 2060 	movw	r0, #60000	; 0xea60
    a348:	e791      	b.n	a26e <RAILINT_aeea5e1f09f1c2b4f097efecd921db8d+0x46>
    a34a:	f64e 2360 	movw	r3, #60000	; 0xea60
    a34e:	e79e      	b.n	a28e <RAILINT_aeea5e1f09f1c2b4f097efecd921db8d+0x66>
    a350:	f247 5030 	movw	r0, #30000	; 0x7530
    a354:	e7d2      	b.n	a2fc <RAILINT_aeea5e1f09f1c2b4f097efecd921db8d+0xd4>
    a356:	f247 5030 	movw	r0, #30000	; 0x7530
    a35a:	e7dd      	b.n	a318 <RAILINT_aeea5e1f09f1c2b4f097efecd921db8d+0xf0>
    a35c:	b0001f00 	.word	0xb0001f00
    a360:	20000e08 	.word	0x20000e08

0000a364 <RAILINT_dd1d5ca16feea694e6fc546b7f2eb6df>:
    a364:	b193      	cbz	r3, a38c <RAILINT_dd1d5ca16feea694e6fc546b7f2eb6df+0x28>
    a366:	4b0b      	ldr	r3, [pc, #44]	; (a394 <RAILINT_dd1d5ca16feea694e6fc546b7f2eb6df+0x30>)
    a368:	0089      	lsls	r1, r1, #2
    a36a:	4298      	cmp	r0, r3
    a36c:	480a      	ldr	r0, [pc, #40]	; (a398 <RAILINT_dd1d5ca16feea694e6fc546b7f2eb6df+0x34>)
    a36e:	bf08      	it	eq
    a370:	0092      	lsleq	r2, r2, #2
    a372:	4411      	add	r1, r2
    a374:	2214      	movs	r2, #20
    a376:	fbb0 f2f2 	udiv	r2, r0, r2
    a37a:	4b08      	ldr	r3, [pc, #32]	; (a39c <RAILINT_dd1d5ca16feea694e6fc546b7f2eb6df+0x38>)
    a37c:	fb03 2101 	mla	r1, r3, r1, r2
    a380:	230a      	movs	r3, #10
    a382:	fbb0 f0f3 	udiv	r0, r0, r3
    a386:	fbb1 f0f0 	udiv	r0, r1, r0
    a38a:	e001      	b.n	a390 <RAILINT_dd1d5ca16feea694e6fc546b7f2eb6df+0x2c>
    a38c:	2800      	cmp	r0, #0
    a38e:	d1f0      	bne.n	a372 <RAILINT_dd1d5ca16feea694e6fc546b7f2eb6df+0xe>
    a390:	4770      	bx	lr
    a392:	bf00      	nop
    a394:	0001e848 	.word	0x0001e848
    a398:	0007a120 	.word	0x0007a120
    a39c:	000186a0 	.word	0x000186a0

0000a3a0 <RAILINT_0ab27645a606deaf2cb9a3b11860eb15>:
    a3a0:	b980      	cbnz	r0, a3c4 <RAILINT_0ab27645a606deaf2cb9a3b11860eb15+0x24>
    a3a2:	f242 7110 	movw	r1, #10000	; 0x2710
    a3a6:	4a0a      	ldr	r2, [pc, #40]	; (a3d0 <RAILINT_0ab27645a606deaf2cb9a3b11860eb15+0x30>)
    a3a8:	6e50      	ldr	r0, [r2, #100]	; 0x64
    a3aa:	f3c0 1301 	ubfx	r3, r0, #4, #2
    a3ae:	0c00      	lsrs	r0, r0, #16
    a3b0:	fb03 0300 	mla	r3, r3, r0, r0
    a3b4:	428b      	cmp	r3, r1
    a3b6:	d807      	bhi.n	a3c8 <RAILINT_0ab27645a606deaf2cb9a3b11860eb15+0x28>
    a3b8:	6a50      	ldr	r0, [r2, #36]	; 0x24
    a3ba:	f000 001f 	and.w	r0, r0, #31
    a3be:	3001      	adds	r0, #1
    a3c0:	4418      	add	r0, r3
    a3c2:	4770      	bx	lr
    a3c4:	202f      	movs	r0, #47	; 0x2f
    a3c6:	4770      	bx	lr
    a3c8:	f04f 30ff 	mov.w	r0, #4294967295
    a3cc:	4770      	bx	lr
    a3ce:	bf00      	nop
    a3d0:	a8014000 	.word	0xa8014000

0000a3d4 <RAILINT_41ffa61618f37d2827bd6e01cc6c61f5>:
    a3d4:	b538      	push	{r3, r4, r5, lr}
    a3d6:	4605      	mov	r5, r0
    a3d8:	460c      	mov	r4, r1
    a3da:	b1c9      	cbz	r1, a410 <RAILINT_41ffa61618f37d2827bd6e01cc6c61f5+0x3c>
    a3dc:	798b      	ldrb	r3, [r1, #6]
    a3de:	b1bb      	cbz	r3, a410 <RAILINT_41ffa61618f37d2827bd6e01cc6c61f5+0x3c>
    a3e0:	3b01      	subs	r3, #1
    a3e2:	2b06      	cmp	r3, #6
    a3e4:	d80d      	bhi.n	a402 <RAILINT_41ffa61618f37d2827bd6e01cc6c61f5+0x2e>
    a3e6:	e8df f003 	tbb	[pc, r3]
    a3ea:	0423      	.short	0x0423
    a3ec:	251e1c06 	.word	0x251e1c06
    a3f0:	23          	.byte	0x23
    a3f1:	00          	.byte	0x00
    a3f2:	2303      	movs	r3, #3
    a3f4:	718b      	strb	r3, [r1, #6]
    a3f6:	2000      	movs	r0, #0
    a3f8:	f7ff ffd2 	bl	a3a0 <RAILINT_0ab27645a606deaf2cb9a3b11860eb15>
    a3fc:	1c43      	adds	r3, r0, #1
    a3fe:	4601      	mov	r1, r0
    a400:	d107      	bne.n	a412 <RAILINT_41ffa61618f37d2827bd6e01cc6c61f5+0x3e>
    a402:	2000      	movs	r0, #0
    a404:	71a0      	strb	r0, [r4, #6]
    a406:	79a3      	ldrb	r3, [r4, #6]
    a408:	b113      	cbz	r3, a410 <RAILINT_41ffa61618f37d2827bd6e01cc6c61f5+0x3c>
    a40a:	6823      	ldr	r3, [r4, #0]
    a40c:	4418      	add	r0, r3
    a40e:	6020      	str	r0, [r4, #0]
    a410:	bd38      	pop	{r3, r4, r5, pc}
    a412:	2300      	movs	r3, #0
    a414:	88a2      	ldrh	r2, [r4, #4]
    a416:	00d2      	lsls	r2, r2, #3
    a418:	4628      	mov	r0, r5
    a41a:	f7ff ffa3 	bl	a364 <RAILINT_dd1d5ca16feea694e6fc546b7f2eb6df>
    a41e:	4240      	negs	r0, r0
    a420:	e7f1      	b.n	a406 <RAILINT_41ffa61618f37d2827bd6e01cc6c61f5+0x32>
    a422:	2305      	movs	r3, #5
    a424:	718b      	strb	r3, [r1, #6]
    a426:	2300      	movs	r3, #0
    a428:	88a2      	ldrh	r2, [r4, #4]
    a42a:	4619      	mov	r1, r3
    a42c:	00d2      	lsls	r2, r2, #3
    a42e:	e7f3      	b.n	a418 <RAILINT_41ffa61618f37d2827bd6e01cc6c61f5+0x44>
    a430:	2306      	movs	r3, #6
    a432:	718b      	strb	r3, [r1, #6]
    a434:	2000      	movs	r0, #0
    a436:	e7e6      	b.n	a406 <RAILINT_41ffa61618f37d2827bd6e01cc6c61f5+0x32>

0000a438 <RAILINT_80090d97c419b275ef1f41db6daa21d4>:
    a438:	b570      	push	{r4, r5, r6, lr}
    a43a:	4604      	mov	r4, r0
    a43c:	4608      	mov	r0, r1
    a43e:	4616      	mov	r6, r2
    a440:	f7ff f927 	bl	9692 <RAILINT_34bce41ab8660dd545debb2103a67a60>
    a444:	4605      	mov	r5, r0
    a446:	4620      	mov	r0, r4
    a448:	f7fe f8f0 	bl	862c <RAILINT_e27525372891c9e702a563a1b4973f45>
    a44c:	b160      	cbz	r0, a468 <RAILINT_80090d97c419b275ef1f41db6daa21d4+0x30>
    a44e:	b14e      	cbz	r6, a464 <RAILINT_80090d97c419b275ef1f41db6daa21d4+0x2c>
    a450:	4b07      	ldr	r3, [pc, #28]	; (a470 <RAILINT_80090d97c419b275ef1f41db6daa21d4+0x38>)
    a452:	685b      	ldr	r3, [r3, #4]
    a454:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    a458:	f503 73fa 	add.w	r3, r3, #500	; 0x1f4
    a45c:	fbb3 f0f0 	udiv	r0, r3, r0
    a460:	1a28      	subs	r0, r5, r0
    a462:	bd70      	pop	{r4, r5, r6, pc}
    a464:	4b03      	ldr	r3, [pc, #12]	; (a474 <RAILINT_80090d97c419b275ef1f41db6daa21d4+0x3c>)
    a466:	e7f4      	b.n	a452 <RAILINT_80090d97c419b275ef1f41db6daa21d4+0x1a>
    a468:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
    a46c:	e7f2      	b.n	a454 <RAILINT_80090d97c419b275ef1f41db6daa21d4+0x1c>
    a46e:	bf00      	nop
    a470:	0000beac 	.word	0x0000beac
    a474:	0000beb8 	.word	0x0000beb8

0000a478 <RAILINT_9743c96ef075be688881e5d1e5667476>:
    a478:	b570      	push	{r4, r5, r6, lr}
    a47a:	b088      	sub	sp, #32
    a47c:	466d      	mov	r5, sp
    a47e:	4c11      	ldr	r4, [pc, #68]	; (a4c4 <RAILINT_9743c96ef075be688881e5d1e5667476+0x4c>)
    a480:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
    a482:	c50f      	stmia	r5!, {r0, r1, r2, r3}
    a484:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
    a488:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
    a48c:	22e0      	movs	r2, #224	; 0xe0
    a48e:	2100      	movs	r1, #0
    a490:	480d      	ldr	r0, [pc, #52]	; (a4c8 <RAILINT_9743c96ef075be688881e5d1e5667476+0x50>)
    a492:	f001 fb24 	bl	bade <memset>
    a496:	2284      	movs	r2, #132	; 0x84
    a498:	2100      	movs	r1, #0
    a49a:	480c      	ldr	r0, [pc, #48]	; (a4cc <RAILINT_9743c96ef075be688881e5d1e5667476+0x54>)
    a49c:	f001 fb1f 	bl	bade <memset>
    a4a0:	4b0b      	ldr	r3, [pc, #44]	; (a4d0 <RAILINT_9743c96ef075be688881e5d1e5667476+0x58>)
    a4a2:	4a0c      	ldr	r2, [pc, #48]	; (a4d4 <RAILINT_9743c96ef075be688881e5d1e5667476+0x5c>)
    a4a4:	629a      	str	r2, [r3, #40]	; 0x28
    a4a6:	f7ff fe21 	bl	a0ec <RAILINT_2079853137a39b9d404b4228d973f1ee>
    a4aa:	4b0b      	ldr	r3, [pc, #44]	; (a4d8 <RAILINT_9743c96ef075be688881e5d1e5667476+0x60>)
    a4ac:	781b      	ldrb	r3, [r3, #0]
    a4ae:	b13b      	cbz	r3, a4c0 <RAILINT_9743c96ef075be688881e5d1e5667476+0x48>
    a4b0:	466d      	mov	r5, sp
    a4b2:	4e04      	ldr	r6, [pc, #16]	; (a4c4 <RAILINT_9743c96ef075be688881e5d1e5667476+0x4c>)
    a4b4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    a4b6:	c60f      	stmia	r6!, {r0, r1, r2, r3}
    a4b8:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
    a4bc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
    a4c0:	b008      	add	sp, #32
    a4c2:	bd70      	pop	{r4, r5, r6, pc}
    a4c4:	b0001fc0 	.word	0xb0001fc0
    a4c8:	b0001f20 	.word	0xb0001f20
    a4cc:	b0001e9c 	.word	0xb0001e9c
    a4d0:	b0001f00 	.word	0xb0001f00
    a4d4:	11111110 	.word	0x11111110
    a4d8:	20000d79 	.word	0x20000d79

0000a4dc <RAILINT_e5849823b21bf651f5d87f5e741d2a12>:
    a4dc:	4b0a      	ldr	r3, [pc, #40]	; (a508 <RAILINT_e5849823b21bf651f5d87f5e741d2a12+0x2c>)
    a4de:	7819      	ldrb	r1, [r3, #0]
    a4e0:	f001 02ff 	and.w	r2, r1, #255	; 0xff
    a4e4:	b129      	cbz	r1, a4f2 <RAILINT_e5849823b21bf651f5d87f5e741d2a12+0x16>
    a4e6:	2100      	movs	r1, #0
    a4e8:	7019      	strb	r1, [r3, #0]
    a4ea:	4908      	ldr	r1, [pc, #32]	; (a50c <RAILINT_e5849823b21bf651f5d87f5e741d2a12+0x30>)
    a4ec:	0292      	lsls	r2, r2, #10
    a4ee:	f8c1 20b4 	str.w	r2, [r1, #180]	; 0xb4
    a4f2:	7859      	ldrb	r1, [r3, #1]
    a4f4:	f001 02ff 	and.w	r2, r1, #255	; 0xff
    a4f8:	b129      	cbz	r1, a506 <RAILINT_e5849823b21bf651f5d87f5e741d2a12+0x2a>
    a4fa:	2100      	movs	r1, #0
    a4fc:	7059      	strb	r1, [r3, #1]
    a4fe:	0293      	lsls	r3, r2, #10
    a500:	4a02      	ldr	r2, [pc, #8]	; (a50c <RAILINT_e5849823b21bf651f5d87f5e741d2a12+0x30>)
    a502:	f8c2 30b8 	str.w	r3, [r2, #184]	; 0xb8
    a506:	4770      	bx	lr
    a508:	20000e37 	.word	0x20000e37
    a50c:	a8005000 	.word	0xa8005000

0000a510 <RAILINT_2c4dd48bdd23e67e66c47cfdf845d67c>:
    a510:	b508      	push	{r3, lr}
    a512:	f7fb fdbb 	bl	608c <CORE_EnterCritical>
    a516:	4b0e      	ldr	r3, [pc, #56]	; (a550 <RAILINT_2c4dd48bdd23e67e66c47cfdf845d67c+0x40>)
    a518:	781b      	ldrb	r3, [r3, #0]
    a51a:	b993      	cbnz	r3, a542 <RAILINT_2c4dd48bdd23e67e66c47cfdf845d67c+0x32>
    a51c:	4a0d      	ldr	r2, [pc, #52]	; (a554 <RAILINT_2c4dd48bdd23e67e66c47cfdf845d67c+0x44>)
    a51e:	6812      	ldr	r2, [r2, #0]
    a520:	f412 3f84 	tst.w	r2, #67584	; 0x10800
    a524:	d10d      	bne.n	a542 <RAILINT_2c4dd48bdd23e67e66c47cfdf845d67c+0x32>
    a526:	2210      	movs	r2, #16
    a528:	4b0b      	ldr	r3, [pc, #44]	; (a558 <RAILINT_2c4dd48bdd23e67e66c47cfdf845d67c+0x48>)
    a52a:	67da      	str	r2, [r3, #124]	; 0x7c
    a52c:	4b09      	ldr	r3, [pc, #36]	; (a554 <RAILINT_2c4dd48bdd23e67e66c47cfdf845d67c+0x44>)
    a52e:	681b      	ldr	r3, [r3, #0]
    a530:	05db      	lsls	r3, r3, #23
    a532:	d40b      	bmi.n	a54c <RAILINT_2c4dd48bdd23e67e66c47cfdf845d67c+0x3c>
    a534:	4b08      	ldr	r3, [pc, #32]	; (a558 <RAILINT_2c4dd48bdd23e67e66c47cfdf845d67c+0x48>)
    a536:	2220      	movs	r2, #32
    a538:	67da      	str	r2, [r3, #124]	; 0x7c
    a53a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    a53e:	f7fb bda9 	b.w	6094 <CORE_ExitCritical>
    a542:	2110      	movs	r1, #16
    a544:	4a05      	ldr	r2, [pc, #20]	; (a55c <RAILINT_2c4dd48bdd23e67e66c47cfdf845d67c+0x4c>)
    a546:	67d1      	str	r1, [r2, #124]	; 0x7c
    a548:	2b00      	cmp	r3, #0
    a54a:	d0ef      	beq.n	a52c <RAILINT_2c4dd48bdd23e67e66c47cfdf845d67c+0x1c>
    a54c:	4b03      	ldr	r3, [pc, #12]	; (a55c <RAILINT_2c4dd48bdd23e67e66c47cfdf845d67c+0x4c>)
    a54e:	e7f2      	b.n	a536 <RAILINT_2c4dd48bdd23e67e66c47cfdf845d67c+0x26>
    a550:	20000e19 	.word	0x20000e19
    a554:	20000e10 	.word	0x20000e10
    a558:	a8022000 	.word	0xa8022000
    a55c:	a8021000 	.word	0xa8021000

0000a560 <RAILINT_6d8967e14ffa5fbb64f5f8549fa17b5c>:
    a560:	2200      	movs	r2, #0
    a562:	4b04      	ldr	r3, [pc, #16]	; (a574 <RAILINT_6d8967e14ffa5fbb64f5f8549fa17b5c+0x14>)
    a564:	701a      	strb	r2, [r3, #0]
    a566:	4b04      	ldr	r3, [pc, #16]	; (a578 <RAILINT_6d8967e14ffa5fbb64f5f8549fa17b5c+0x18>)
    a568:	7819      	ldrb	r1, [r3, #0]
    a56a:	b111      	cbz	r1, a572 <RAILINT_6d8967e14ffa5fbb64f5f8549fa17b5c+0x12>
    a56c:	701a      	strb	r2, [r3, #0]
    a56e:	f7ff bfcf 	b.w	a510 <RAILINT_2c4dd48bdd23e67e66c47cfdf845d67c>
    a572:	4770      	bx	lr
    a574:	20000e1a 	.word	0x20000e1a
    a578:	20000e19 	.word	0x20000e19

0000a57c <RAILINT_ef38b49f1deb3f763f4f0e2ae372d117>:
    a57c:	b510      	push	{r4, lr}
    a57e:	f7fb fd85 	bl	608c <CORE_EnterCritical>
    a582:	210e      	movs	r1, #14
    a584:	4604      	mov	r4, r0
    a586:	2003      	movs	r0, #3
    a588:	f7ff faf2 	bl	9b70 <RAILINT_98702195dd5df205b66d73f7f1b701b5>
    a58c:	f240 2201 	movw	r2, #513	; 0x201
    a590:	4b03      	ldr	r3, [pc, #12]	; (a5a0 <RAILINT_ef38b49f1deb3f763f4f0e2ae372d117+0x24>)
    a592:	4620      	mov	r0, r4
    a594:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    a598:	62da      	str	r2, [r3, #44]	; 0x2c
    a59a:	f7fb bd7b 	b.w	6094 <CORE_ExitCritical>
    a59e:	bf00      	nop
    a5a0:	a8004000 	.word	0xa8004000

0000a5a4 <RAILINT_1f111261e83374ea84a9c5469ceac557>:
    a5a4:	b508      	push	{r3, lr}
    a5a6:	2103      	movs	r1, #3
    a5a8:	2009      	movs	r0, #9
    a5aa:	f7ff fae1 	bl	9b70 <RAILINT_98702195dd5df205b66d73f7f1b701b5>
    a5ae:	2220      	movs	r2, #32
    a5b0:	4b01      	ldr	r3, [pc, #4]	; (a5b8 <RAILINT_1f111261e83374ea84a9c5469ceac557+0x14>)
    a5b2:	611a      	str	r2, [r3, #16]
    a5b4:	bd08      	pop	{r3, pc}
    a5b6:	bf00      	nop
    a5b8:	a8020000 	.word	0xa8020000

0000a5bc <RAILINT_c34bfa9af18e68c24adf7137035e88f0>:
    a5bc:	b508      	push	{r3, lr}
    a5be:	f7fb fd65 	bl	608c <CORE_EnterCritical>
    a5c2:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
    a5c6:	4b22      	ldr	r3, [pc, #136]	; (a650 <RAILINT_c34bfa9af18e68c24adf7137035e88f0+0x94>)
    a5c8:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    a5cc:	f3bf 8f4f 	dsb	sy
    a5d0:	f3bf 8f6f 	isb	sy
    a5d4:	2201      	movs	r2, #1
    a5d6:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    a5da:	f3bf 8f4f 	dsb	sy
    a5de:	f3bf 8f6f 	isb	sy
    a5e2:	2202      	movs	r2, #2
    a5e4:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    a5e8:	f3bf 8f4f 	dsb	sy
    a5ec:	f3bf 8f6f 	isb	sy
    a5f0:	2204      	movs	r2, #4
    a5f2:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    a5f6:	f3bf 8f4f 	dsb	sy
    a5fa:	f3bf 8f6f 	isb	sy
    a5fe:	2208      	movs	r2, #8
    a600:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    a604:	f3bf 8f4f 	dsb	sy
    a608:	f3bf 8f6f 	isb	sy
    a60c:	2210      	movs	r2, #16
    a60e:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    a612:	f3bf 8f4f 	dsb	sy
    a616:	f3bf 8f6f 	isb	sy
    a61a:	2220      	movs	r2, #32
    a61c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    a620:	f3bf 8f4f 	dsb	sy
    a624:	f3bf 8f6f 	isb	sy
    a628:	2240      	movs	r2, #64	; 0x40
    a62a:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    a62e:	f3bf 8f4f 	dsb	sy
    a632:	f3bf 8f6f 	isb	sy
    a636:	f44f 7280 	mov.w	r2, #256	; 0x100
    a63a:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    a63e:	f3bf 8f4f 	dsb	sy
    a642:	f3bf 8f6f 	isb	sy
    a646:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    a64a:	f7fb bd23 	b.w	6094 <CORE_ExitCritical>
    a64e:	bf00      	nop
    a650:	e000e100 	.word	0xe000e100

0000a654 <RAILINT_978af8e4393fb6ecb4e92f5256373899>:
    a654:	2301      	movs	r3, #1
    a656:	b570      	push	{r4, r5, r6, lr}
    a658:	4c07      	ldr	r4, [pc, #28]	; (a678 <RAILINT_978af8e4393fb6ecb4e92f5256373899+0x24>)
    a65a:	7023      	strb	r3, [r4, #0]
    a65c:	4b07      	ldr	r3, [pc, #28]	; (a67c <RAILINT_978af8e4393fb6ecb4e92f5256373899+0x28>)
    a65e:	681e      	ldr	r6, [r3, #0]
    a660:	4b07      	ldr	r3, [pc, #28]	; (a680 <RAILINT_978af8e4393fb6ecb4e92f5256373899+0x2c>)
    a662:	4032      	ands	r2, r6
    a664:	e9d3 5300 	ldrd	r5, r3, [r3]
    a668:	4019      	ands	r1, r3
    a66a:	4028      	ands	r0, r5
    a66c:	f7fc ff54 	bl	7518 <RAILINT_2c0c7ba0065447faa0ab7205349f5d73>
    a670:	2300      	movs	r3, #0
    a672:	7023      	strb	r3, [r4, #0]
    a674:	bd70      	pop	{r4, r5, r6, pc}
    a676:	bf00      	nop
    a678:	20000e18 	.word	0x20000e18
    a67c:	20000e0c 	.word	0x20000e0c
    a680:	20000e10 	.word	0x20000e10

0000a684 <RAILINT_e56520736dccfc6b4febe00b533ea27a>:
    a684:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a688:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
    a68c:	ea03 0801 	and.w	r8, r3, r1
    a690:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    a692:	4606      	mov	r6, r0
    a694:	460d      	mov	r5, r1
    a696:	ea02 0900 	and.w	r9, r2, r0
    a69a:	ea03 0a0b 	and.w	sl, r3, fp
    a69e:	f1bb 0f00 	cmp.w	fp, #0
    a6a2:	f040 8168 	bne.w	a976 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x2f2>
    a6a6:	1f03      	subs	r3, r0, #4
    a6a8:	430b      	orrs	r3, r1
    a6aa:	f000 812d 	beq.w	a908 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x284>
    a6ae:	2805      	cmp	r0, #5
    a6b0:	f171 0300 	sbcs.w	r3, r1, #0
    a6b4:	f080 80fe 	bcs.w	a8b4 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x230>
    a6b8:	ea50 0301 	orrs.w	r3, r0, r1
    a6bc:	f000 8180 	beq.w	a9c0 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x33c>
    a6c0:	1e43      	subs	r3, r0, #1
    a6c2:	430b      	orrs	r3, r1
    a6c4:	f000 813c 	beq.w	a940 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x2bc>
    a6c8:	f7ff ff78 	bl	a5bc <RAILINT_c34bfa9af18e68c24adf7137035e88f0>
    a6cc:	4bbd      	ldr	r3, [pc, #756]	; (a9c4 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x340>)
    a6ce:	e9d3 4700 	ldrd	r4, r7, [r3]
    a6d2:	ea27 0705 	bic.w	r7, r7, r5
    a6d6:	ea24 0406 	bic.w	r4, r4, r6
    a6da:	ea44 0409 	orr.w	r4, r4, r9
    a6de:	ea47 0708 	orr.w	r7, r7, r8
    a6e2:	e9c3 4700 	strd	r4, r7, [r3]
    a6e6:	4bb8      	ldr	r3, [pc, #736]	; (a9c8 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x344>)
    a6e8:	f8df 8334 	ldr.w	r8, [pc, #820]	; aa20 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x39c>
    a6ec:	681e      	ldr	r6, [r3, #0]
    a6ee:	ea26 060b 	bic.w	r6, r6, fp
    a6f2:	ea46 060a 	orr.w	r6, r6, sl
    a6f6:	601e      	str	r6, [r3, #0]
    a6f8:	f7ff ff0a 	bl	a510 <RAILINT_2c4dd48bdd23e67e66c47cfdf845d67c>
    a6fc:	f014 4f2a 	tst.w	r4, #2852126720	; 0xaa000000
    a700:	bf14      	ite	ne
    a702:	f248 0302 	movwne	r3, #32770	; 0x8002
    a706:	f44f 4300 	moveq.w	r3, #32768	; 0x8000
    a70a:	07b2      	lsls	r2, r6, #30
    a70c:	4aaf      	ldr	r2, [pc, #700]	; (a9cc <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x348>)
    a70e:	48b0      	ldr	r0, [pc, #704]	; (a9d0 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x34c>)
    a710:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
    a712:	bf48      	it	mi
    a714:	f443 5300 	orrmi.w	r3, r3, #8192	; 0x2000
    a718:	ea83 0102 	eor.w	r1, r3, r2
    a71c:	ea22 0203 	bic.w	r2, r2, r3
    a720:	66c2      	str	r2, [r0, #108]	; 0x6c
    a722:	4aac      	ldr	r2, [pc, #688]	; (a9d4 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x350>)
    a724:	400b      	ands	r3, r1
    a726:	0365      	lsls	r5, r4, #13
    a728:	6681      	str	r1, [r0, #104]	; 0x68
    a72a:	66d3      	str	r3, [r2, #108]	; 0x6c
    a72c:	f404 2380 	and.w	r3, r4, #262144	; 0x40000
    a730:	bf48      	it	mi
    a732:	f44f 5380 	movmi.w	r3, #4096	; 0x1000
    a736:	0320      	lsls	r0, r4, #12
    a738:	bf48      	it	mi
    a73a:	f443 7380 	orrmi.w	r3, r3, #256	; 0x100
    a73e:	06e1      	lsls	r1, r4, #27
    a740:	bf48      	it	mi
    a742:	f443 5300 	orrmi.w	r3, r3, #8192	; 0x2000
    a746:	06a2      	lsls	r2, r4, #26
    a748:	4aa3      	ldr	r2, [pc, #652]	; (a9d8 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x354>)
    a74a:	bf48      	it	mi
    a74c:	f443 7300 	orrmi.w	r3, r3, #512	; 0x200
    a750:	0665      	lsls	r5, r4, #25
    a752:	f8d2 220c 	ldr.w	r2, [r2, #524]	; 0x20c
    a756:	bf48      	it	mi
    a758:	f443 6380 	orrmi.w	r3, r3, #1024	; 0x400
    a75c:	0620      	lsls	r0, r4, #24
    a75e:	bf48      	it	mi
    a760:	f443 6300 	orrmi.w	r3, r3, #2048	; 0x800
    a764:	489d      	ldr	r0, [pc, #628]	; (a9dc <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x358>)
    a766:	ea83 0102 	eor.w	r1, r3, r2
    a76a:	ea22 0203 	bic.w	r2, r2, r3
    a76e:	f8c0 220c 	str.w	r2, [r0, #524]	; 0x20c
    a772:	400b      	ands	r3, r1
    a774:	f8c0 1208 	str.w	r1, [r0, #520]	; 0x208
    a778:	05b9      	lsls	r1, r7, #22
    a77a:	f407 7500 	and.w	r5, r7, #512	; 0x200
    a77e:	bf48      	it	mi
    a780:	f44f 2580 	movmi.w	r5, #262144	; 0x40000
    a784:	4a96      	ldr	r2, [pc, #600]	; (a9e0 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x35c>)
    a786:	f8c2 320c 	str.w	r3, [r2, #524]	; 0x20c
    a78a:	04e2      	lsls	r2, r4, #19
    a78c:	bf48      	it	mi
    a78e:	f445 3580 	orrmi.w	r5, r5, #65536	; 0x10000
    a792:	03a3      	lsls	r3, r4, #14
    a794:	bf48      	it	mi
    a796:	f445 1580 	orrmi.w	r5, r5, #1048576	; 0x100000
    a79a:	07a0      	lsls	r0, r4, #30
    a79c:	bf48      	it	mi
    a79e:	f445 1500 	orrmi.w	r5, r5, #2097152	; 0x200000
    a7a2:	f414 1f00 	tst.w	r4, #2097152	; 0x200000
    a7a6:	d008      	beq.n	a7ba <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x136>
    a7a8:	f8d8 0000 	ldr.w	r0, [r8]
    a7ac:	b100      	cbz	r0, a7b0 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x12c>
    a7ae:	300c      	adds	r0, #12
    a7b0:	f000 fff5 	bl	b79e <RAILINT_2d5876683a764801ac6ee9a13c687c8d>
    a7b4:	b908      	cbnz	r0, a7ba <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x136>
    a7b6:	f445 2500 	orr.w	r5, r5, #524288	; 0x80000
    a7ba:	02e1      	lsls	r1, r4, #11
    a7bc:	bf48      	it	mi
    a7be:	f445 3500 	orrmi.w	r5, r5, #131072	; 0x20000
    a7c2:	06fa      	lsls	r2, r7, #27
    a7c4:	bf48      	it	mi
    a7c6:	f445 0580 	orrmi.w	r5, r5, #4194304	; 0x400000
    a7ca:	0773      	lsls	r3, r6, #29
    a7cc:	4b85      	ldr	r3, [pc, #532]	; (a9e4 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x360>)
    a7ce:	bf48      	it	mi
    a7d0:	f045 0504 	orrmi.w	r5, r5, #4
    a7d4:	6a1a      	ldr	r2, [r3, #32]
    a7d6:	4984      	ldr	r1, [pc, #528]	; (a9e8 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x364>)
    a7d8:	ea85 0302 	eor.w	r3, r5, r2
    a7dc:	f023 0301 	bic.w	r3, r3, #1
    a7e0:	401a      	ands	r2, r3
    a7e2:	620a      	str	r2, [r1, #32]
    a7e4:	401d      	ands	r5, r3
    a7e6:	61cb      	str	r3, [r1, #28]
    a7e8:	4a80      	ldr	r2, [pc, #512]	; (a9ec <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x368>)
    a7ea:	4b81      	ldr	r3, [pc, #516]	; (a9f0 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x36c>)
    a7ec:	f016 0f01 	tst.w	r6, #1
    a7f0:	621d      	str	r5, [r3, #32]
    a7f2:	4b80      	ldr	r3, [pc, #512]	; (a9f4 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x370>)
    a7f4:	bf18      	it	ne
    a7f6:	4613      	movne	r3, r2
    a7f8:	4a7f      	ldr	r2, [pc, #508]	; (a9f8 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x374>)
    a7fa:	077d      	lsls	r5, r7, #29
    a7fc:	6f12      	ldr	r2, [r2, #112]	; 0x70
    a7fe:	bf48      	it	mi
    a800:	f043 6300 	orrmi.w	r3, r3, #134217728	; 0x8000000
    a804:	487d      	ldr	r0, [pc, #500]	; (a9fc <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x378>)
    a806:	ea83 0102 	eor.w	r1, r3, r2
    a80a:	ea22 0203 	bic.w	r2, r2, r3
    a80e:	6702      	str	r2, [r0, #112]	; 0x70
    a810:	4a7b      	ldr	r2, [pc, #492]	; (aa00 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x37c>)
    a812:	400b      	ands	r3, r1
    a814:	6641      	str	r1, [r0, #100]	; 0x64
    a816:	6713      	str	r3, [r2, #112]	; 0x70
    a818:	f5a2 3288 	sub.w	r2, r2, #69632	; 0x11000
    a81c:	6c52      	ldr	r2, [r2, #68]	; 0x44
    a81e:	f004 0301 	and.w	r3, r4, #1
    a822:	ea83 0102 	eor.w	r1, r3, r2
    a826:	f5a0 3080 	sub.w	r0, r0, #65536	; 0x10000
    a82a:	ea22 0203 	bic.w	r2, r2, r3
    a82e:	6442      	str	r2, [r0, #68]	; 0x44
    a830:	4a74      	ldr	r2, [pc, #464]	; (aa04 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x380>)
    a832:	400b      	ands	r3, r1
    a834:	6381      	str	r1, [r0, #56]	; 0x38
    a836:	0220      	lsls	r0, r4, #8
    a838:	6453      	str	r3, [r2, #68]	; 0x44
    a83a:	bf48      	it	mi
    a83c:	4b72      	ldrmi	r3, [pc, #456]	; (aa08 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x384>)
    a83e:	f8d8 2000 	ldr.w	r2, [r8]
    a842:	bf58      	it	pl
    a844:	4b71      	ldrpl	r3, [pc, #452]	; (aa0c <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x388>)
    a846:	0761      	lsls	r1, r4, #29
    a848:	bf48      	it	mi
    a84a:	f443 6380 	orrmi.w	r3, r3, #1024	; 0x400
    a84e:	2a00      	cmp	r2, #0
    a850:	f000 80b3 	beq.w	a9ba <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x336>
    a854:	f892 20e5 	ldrb.w	r2, [r2, #229]	; 0xe5
    a858:	b122      	cbz	r2, a864 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x1e0>
    a85a:	f414 6fc0 	tst.w	r4, #1536	; 0x600
    a85e:	bf18      	it	ne
    a860:	f443 7380 	orrne.w	r3, r3, #256	; 0x100
    a864:	0732      	lsls	r2, r6, #28
    a866:	4a6a      	ldr	r2, [pc, #424]	; (aa10 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x38c>)
    a868:	bf48      	it	mi
    a86a:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
    a86e:	f8d2 10ec 	ldr.w	r1, [r2, #236]	; 0xec
    a872:	4868      	ldr	r0, [pc, #416]	; (aa14 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x390>)
    a874:	ea83 0201 	eor.w	r2, r3, r1
    a878:	f422 22a0 	bic.w	r2, r2, #327680	; 0x50000
    a87c:	4011      	ands	r1, r2
    a87e:	4013      	ands	r3, r2
    a880:	f8c0 10ec 	str.w	r1, [r0, #236]	; 0xec
    a884:	f8c0 20e0 	str.w	r2, [r0, #224]	; 0xe0
    a888:	4a63      	ldr	r2, [pc, #396]	; (aa18 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x394>)
    a88a:	f8c2 30ec 	str.w	r3, [r2, #236]	; 0xec
    a88e:	f7fb fbfd 	bl	608c <CORE_EnterCritical>
    a892:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
    a896:	4b61      	ldr	r3, [pc, #388]	; (aa1c <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x398>)
    a898:	601a      	str	r2, [r3, #0]
    a89a:	2201      	movs	r2, #1
    a89c:	605a      	str	r2, [r3, #4]
    a89e:	2204      	movs	r2, #4
    a8a0:	605a      	str	r2, [r3, #4]
    a8a2:	2208      	movs	r2, #8
    a8a4:	605a      	str	r2, [r3, #4]
    a8a6:	2210      	movs	r2, #16
    a8a8:	605a      	str	r2, [r3, #4]
    a8aa:	2220      	movs	r2, #32
    a8ac:	605a      	str	r2, [r3, #4]
    a8ae:	2240      	movs	r2, #64	; 0x40
    a8b0:	605a      	str	r2, [r3, #4]
    a8b2:	e03f      	b.n	a934 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x2b0>
    a8b4:	f5a0 6380 	sub.w	r3, r0, #1024	; 0x400
    a8b8:	430b      	orrs	r3, r1
    a8ba:	d006      	beq.n	a8ca <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x246>
    a8bc:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
    a8c0:	f5a3 7300 	sub.w	r3, r3, #512	; 0x200
    a8c4:	430b      	orrs	r3, r1
    a8c6:	f47f aeff 	bne.w	a6c8 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x44>
    a8ca:	f7fb fbdf 	bl	608c <CORE_EnterCritical>
    a8ce:	4b3d      	ldr	r3, [pc, #244]	; (a9c4 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x340>)
    a8d0:	e9d3 4100 	ldrd	r4, r1, [r3]
    a8d4:	ea24 0406 	bic.w	r4, r4, r6
    a8d8:	ea21 0105 	bic.w	r1, r1, r5
    a8dc:	ea44 0409 	orr.w	r4, r4, r9
    a8e0:	ea41 0108 	orr.w	r1, r1, r8
    a8e4:	e9c3 4100 	strd	r4, r1, [r3]
    a8e8:	4b4d      	ldr	r3, [pc, #308]	; (aa20 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x39c>)
    a8ea:	681b      	ldr	r3, [r3, #0]
    a8ec:	2b00      	cmp	r3, #0
    a8ee:	d061      	beq.n	a9b4 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x330>
    a8f0:	f893 30e5 	ldrb.w	r3, [r3, #229]	; 0xe5
    a8f4:	b313      	cbz	r3, a93c <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x2b8>
    a8f6:	f414 6fc0 	tst.w	r4, #1536	; 0x600
    a8fa:	d01f      	beq.n	a93c <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x2b8>
    a8fc:	4b46      	ldr	r3, [pc, #280]	; (aa18 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x394>)
    a8fe:	f44f 7280 	mov.w	r2, #256	; 0x100
    a902:	f8c3 20ec 	str.w	r2, [r3, #236]	; 0xec
    a906:	e015      	b.n	a934 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x2b0>
    a908:	f7fb fbc0 	bl	608c <CORE_EnterCritical>
    a90c:	4a2d      	ldr	r2, [pc, #180]	; (a9c4 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x340>)
    a90e:	e9d2 3100 	ldrd	r3, r1, [r2]
    a912:	f023 0304 	bic.w	r3, r3, #4
    a916:	ea43 0309 	orr.w	r3, r3, r9
    a91a:	ea41 0108 	orr.w	r1, r1, r8
    a91e:	e9c2 3100 	strd	r3, r1, [r2]
    a922:	ea59 0308 	orrs.w	r3, r9, r8
    a926:	f44f 6380 	mov.w	r3, #1024	; 0x400
    a92a:	bf14      	ite	ne
    a92c:	4a3a      	ldrne	r2, [pc, #232]	; (aa18 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x394>)
    a92e:	4a39      	ldreq	r2, [pc, #228]	; (aa14 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x390>)
    a930:	f8c2 30ec 	str.w	r3, [r2, #236]	; 0xec
    a934:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a938:	f7fb bbac 	b.w	6094 <CORE_ExitCritical>
    a93c:	4b35      	ldr	r3, [pc, #212]	; (aa14 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x390>)
    a93e:	e7de      	b.n	a8fe <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x27a>
    a940:	f7fb fba4 	bl	608c <CORE_EnterCritical>
    a944:	4a1f      	ldr	r2, [pc, #124]	; (a9c4 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x340>)
    a946:	e9d2 3100 	ldrd	r3, r1, [r2]
    a94a:	f023 0301 	bic.w	r3, r3, #1
    a94e:	ea43 0309 	orr.w	r3, r3, r9
    a952:	ea41 0108 	orr.w	r1, r1, r8
    a956:	e9c2 3100 	strd	r3, r1, [r2]
    a95a:	ea59 0308 	orrs.w	r3, r9, r8
    a95e:	f04f 0301 	mov.w	r3, #1
    a962:	4a30      	ldr	r2, [pc, #192]	; (aa24 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x3a0>)
    a964:	bf1b      	ittet	ne
    a966:	6393      	strne	r3, [r2, #56]	; 0x38
    a968:	f5a2 5280 	subne.w	r2, r2, #4096	; 0x1000
    a96c:	6453      	streq	r3, [r2, #68]	; 0x44
    a96e:	6453      	strne	r3, [r2, #68]	; 0x44
    a970:	bf08      	it	eq
    a972:	6393      	streq	r3, [r2, #56]	; 0x38
    a974:	e7de      	b.n	a934 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x2b0>
    a976:	ea50 0301 	orrs.w	r3, r0, r1
    a97a:	f47f aea5 	bne.w	a6c8 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x44>
    a97e:	f1bb 0f01 	cmp.w	fp, #1
    a982:	f47f aea1 	bne.w	a6c8 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x44>
    a986:	f7fb fb81 	bl	608c <CORE_EnterCritical>
    a98a:	4a0f      	ldr	r2, [pc, #60]	; (a9c8 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x344>)
    a98c:	6813      	ldr	r3, [r2, #0]
    a98e:	f023 0301 	bic.w	r3, r3, #1
    a992:	ea43 030a 	orr.w	r3, r3, sl
    a996:	6013      	str	r3, [r2, #0]
    a998:	f44f 6380 	mov.w	r3, #1024	; 0x400
    a99c:	4a17      	ldr	r2, [pc, #92]	; (a9fc <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x378>)
    a99e:	f1ba 0f00 	cmp.w	sl, #0
    a9a2:	d004      	beq.n	a9ae <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x32a>
    a9a4:	6653      	str	r3, [r2, #100]	; 0x64
    a9a6:	f5a2 5280 	sub.w	r2, r2, #4096	; 0x1000
    a9aa:	6713      	str	r3, [r2, #112]	; 0x70
    a9ac:	e7c2      	b.n	a934 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x2b0>
    a9ae:	6713      	str	r3, [r2, #112]	; 0x70
    a9b0:	6653      	str	r3, [r2, #100]	; 0x64
    a9b2:	e7bf      	b.n	a934 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x2b0>
    a9b4:	f893 30d9 	ldrb.w	r3, [r3, #217]	; 0xd9
    a9b8:	deff      	udf	#255	; 0xff
    a9ba:	f892 30d9 	ldrb.w	r3, [r2, #217]	; 0xd9
    a9be:	e7fb      	b.n	a9b8 <RAILINT_e56520736dccfc6b4febe00b533ea27a+0x334>
    a9c0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a9c4:	20000e10 	.word	0x20000e10
    a9c8:	20000e0c 	.word	0x20000e0c
    a9cc:	a8004000 	.word	0xa8004000
    a9d0:	a8006000 	.word	0xa8006000
    a9d4:	a8005000 	.word	0xa8005000
    a9d8:	a8014000 	.word	0xa8014000
    a9dc:	a8016000 	.word	0xa8016000
    a9e0:	a8015000 	.word	0xa8015000
    a9e4:	a8020000 	.word	0xa8020000
    a9e8:	a8022000 	.word	0xa8022000
    a9ec:	03001c04 	.word	0x03001c04
    a9f0:	a8021000 	.word	0xa8021000
    a9f4:	03001804 	.word	0x03001804
    a9f8:	a801c000 	.word	0xa801c000
    a9fc:	a801e000 	.word	0xa801e000
    aa00:	a801d000 	.word	0xa801d000
    aa04:	a800d000 	.word	0xa800d000
    aa08:	090a0a0d 	.word	0x090a0a0d
    aa0c:	090a0a09 	.word	0x090a0a09
    aa10:	44004000 	.word	0x44004000
    aa14:	44006000 	.word	0x44006000
    aa18:	44005000 	.word	0x44005000
    aa1c:	e000e100 	.word	0xe000e100
    aa20:	20000aa8 	.word	0x20000aa8
    aa24:	a800e000 	.word	0xa800e000

0000aa28 <RAILINT_436bf61abb715dbe168d75ac0bccdfdf>:
    aa28:	4b02      	ldr	r3, [pc, #8]	; (aa34 <RAILINT_436bf61abb715dbe168d75ac0bccdfdf+0xc>)
    aa2a:	6858      	ldr	r0, [r3, #4]
    aa2c:	f3c0 00c0 	ubfx	r0, r0, #3, #1
    aa30:	4770      	bx	lr
    aa32:	bf00      	nop
    aa34:	20000e10 	.word	0x20000e10

0000aa38 <RAILINT_0e4fab607515a0ae94861cde84b8a317>:
    aa38:	4b02      	ldr	r3, [pc, #8]	; (aa44 <RAILINT_0e4fab607515a0ae94861cde84b8a317+0xc>)
    aa3a:	6818      	ldr	r0, [r3, #0]
    aa3c:	f000 0001 	and.w	r0, r0, #1
    aa40:	4770      	bx	lr
    aa42:	bf00      	nop
    aa44:	20000e10 	.word	0x20000e10

0000aa48 <RAILINT_5d6f9e1abd47331b2e5065ec63f9f308>:
    aa48:	4b03      	ldr	r3, [pc, #12]	; (aa58 <RAILINT_5d6f9e1abd47331b2e5065ec63f9f308+0x10>)
    aa4a:	681b      	ldr	r3, [r3, #0]
    aa4c:	f413 6fc0 	tst.w	r3, #1536	; 0x600
    aa50:	bf14      	ite	ne
    aa52:	2001      	movne	r0, #1
    aa54:	2000      	moveq	r0, #0
    aa56:	4770      	bx	lr
    aa58:	20000e10 	.word	0x20000e10

0000aa5c <RAILINT_0390333908b9b36d5ab834e553f87374>:
    aa5c:	b510      	push	{r4, lr}
    aa5e:	4604      	mov	r4, r0
    aa60:	f7fe ff3a 	bl	98d8 <RAILINT_83b3e2e99c8f4d3fd0b62943447c7cff>
    aa64:	f7ff fdaa 	bl	a5bc <RAILINT_c34bfa9af18e68c24adf7137035e88f0>
    aa68:	f104 0030 	add.w	r0, r4, #48	; 0x30
    aa6c:	f7fd fffe 	bl	8a6c <RAILINT_32732aa1d78833fa65026efd536f2c3e>
    aa70:	f7fe fee4 	bl	983c <RAILINT_0a958662e0f9b48ba3742030a3e4e70c>
    aa74:	f7fe fd2e 	bl	94d4 <RAILINT_a2bb09bbf0f5a66273c06b6551b0acd9>
    aa78:	f7fe fd9a 	bl	95b0 <RAILINT_2867cf1f7327fd002fccf5d8ded311be>
    aa7c:	f7ff fb8e 	bl	a19c <RAILINT_4baddb3f7581dff171ab25f7b0ebdad3>
    aa80:	2107      	movs	r1, #7
    aa82:	f104 0088 	add.w	r0, r4, #136	; 0x88
    aa86:	f7ff fbcf 	bl	a228 <RAILINT_aeea5e1f09f1c2b4f097efecd921db8d>
    aa8a:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
    aa8e:	2000      	movs	r0, #0
    aa90:	f7fe fdb6 	bl	9600 <RAILINT_6fba69fb8464276fb40686c982612f36>
    aa94:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
    aa98:	4b0b      	ldr	r3, [pc, #44]	; (aac8 <RAILINT_0390333908b9b36d5ab834e553f87374+0x6c>)
    aa9a:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
    aa9e:	2001      	movs	r0, #1
    aaa0:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
    aaa4:	f7fe fdac 	bl	9600 <RAILINT_6fba69fb8464276fb40686c982612f36>
    aaa8:	f7ff f92e 	bl	9d08 <RAILINT_e37c2f8c4e95a72e70099c8f3fa2cfe4>
    aaac:	b920      	cbnz	r0, aab8 <RAILINT_0390333908b9b36d5ab834e553f87374+0x5c>
    aaae:	f240 2276 	movw	r2, #630	; 0x276
    aab2:	2114      	movs	r1, #20
    aab4:	f7fc fb14 	bl	70e0 <RAILINT_205167ae842e22724c3f35c6430eeddb>
    aab8:	f7ff fb16 	bl	a0e8 <RAILINT_ffff6fd8b93bee8f8f3297dc48915167>
    aabc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    aac0:	2001      	movs	r0, #1
    aac2:	f7fe bc89 	b.w	93d8 <RAILINT_ac4c341889862730c8d820dc51f851c9>
    aac6:	bf00      	nop
    aac8:	a801d000 	.word	0xa801d000

0000aacc <RAILINT_cda8bf84b67189e08b64149f714e0ad8>:
    aacc:	22a8      	movs	r2, #168	; 0xa8
    aace:	4b13      	ldr	r3, [pc, #76]	; (ab1c <RAILINT_cda8bf84b67189e08b64149f714e0ad8+0x50>)
    aad0:	b510      	push	{r4, lr}
    aad2:	6f1c      	ldr	r4, [r3, #112]	; 0x70
    aad4:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
    aad8:	671a      	str	r2, [r3, #112]	; 0x70
    aada:	2210      	movs	r2, #16
    aadc:	609a      	str	r2, [r3, #8]
    aade:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
    aae2:	f5a3 4380 	sub.w	r3, r3, #16384	; 0x4000
    aae6:	671a      	str	r2, [r3, #112]	; 0x70
    aae8:	665a      	str	r2, [r3, #100]	; 0x64
    aaea:	f7ff fcf7 	bl	a4dc <RAILINT_e5849823b21bf651f5d87f5e741d2a12>
    aaee:	4b0c      	ldr	r3, [pc, #48]	; (ab20 <RAILINT_cda8bf84b67189e08b64149f714e0ad8+0x54>)
    aaf0:	781b      	ldrb	r3, [r3, #0]
    aaf2:	b913      	cbnz	r3, aafa <RAILINT_cda8bf84b67189e08b64149f714e0ad8+0x2e>
    aaf4:	2003      	movs	r0, #3
    aaf6:	f7fe fd69 	bl	95cc <RAILINT_4f93cdd7aecf168775f2a95c9141aec8>
    aafa:	2200      	movs	r2, #0
    aafc:	4b09      	ldr	r3, [pc, #36]	; (ab24 <RAILINT_cda8bf84b67189e08b64149f714e0ad8+0x58>)
    aafe:	679a      	str	r2, [r3, #120]	; 0x78
    ab00:	06a3      	lsls	r3, r4, #26
    ab02:	d507      	bpl.n	ab14 <RAILINT_cda8bf84b67189e08b64149f714e0ad8+0x48>
    ab04:	4b08      	ldr	r3, [pc, #32]	; (ab28 <RAILINT_cda8bf84b67189e08b64149f714e0ad8+0x5c>)
    ab06:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    ab08:	f5b3 7f81 	cmp.w	r3, #258	; 0x102
    ab0c:	bf22      	ittt	cs
    ab0e:	2280      	movcs	r2, #128	; 0x80
    ab10:	4b02      	ldrcs	r3, [pc, #8]	; (ab1c <RAILINT_cda8bf84b67189e08b64149f714e0ad8+0x50>)
    ab12:	611a      	strcs	r2, [r3, #16]
    ab14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    ab18:	f7fd bc7a 	b.w	8410 <RAILINT_3209015e469febd3aebf12c10b838c78>
    ab1c:	a8020000 	.word	0xa8020000
    ab20:	20000e34 	.word	0x20000e34
    ab24:	a801c000 	.word	0xa801c000
    ab28:	b0001f00 	.word	0xb0001f00

0000ab2c <RAILINT_b4349430825f42395f1799b2ff8bb1b4>:
    ab2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    ab2e:	4c08      	ldr	r4, [pc, #32]	; (ab50 <RAILINT_b4349430825f42395f1799b2ff8bb1b4+0x24>)
    ab30:	4d08      	ldr	r5, [pc, #32]	; (ab54 <RAILINT_b4349430825f42395f1799b2ff8bb1b4+0x28>)
    ab32:	6f23      	ldr	r3, [r4, #112]	; 0x70
    ab34:	2304      	movs	r3, #4
    ab36:	4f08      	ldr	r7, [pc, #32]	; (ab58 <RAILINT_b4349430825f42395f1799b2ff8bb1b4+0x2c>)
    ab38:	672b      	str	r3, [r5, #112]	; 0x70
    ab3a:	6f23      	ldr	r3, [r4, #112]	; 0x70
    ab3c:	035b      	lsls	r3, r3, #13
    ab3e:	d400      	bmi.n	ab42 <RAILINT_b4349430825f42395f1799b2ff8bb1b4+0x16>
    ab40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    ab42:	2604      	movs	r6, #4
    ab44:	2002      	movs	r0, #2
    ab46:	673e      	str	r6, [r7, #112]	; 0x70
    ab48:	f7fe fdd2 	bl	96f0 <RAILINT_880ea347ba5a380aeb65b9c33560ef79>
    ab4c:	672e      	str	r6, [r5, #112]	; 0x70
    ab4e:	e7f4      	b.n	ab3a <RAILINT_b4349430825f42395f1799b2ff8bb1b4+0xe>
    ab50:	a8020000 	.word	0xa8020000
    ab54:	a8021000 	.word	0xa8021000
    ab58:	a8022000 	.word	0xa8022000

0000ab5c <RAILINT_cf4e885725a47449d7a6caf77bda2061>:
    ab5c:	f44f 62c0 	mov.w	r2, #1536	; 0x600
    ab60:	4b13      	ldr	r3, [pc, #76]	; (abb0 <RAILINT_cf4e885725a47449d7a6caf77bda2061+0x54>)
    ab62:	b510      	push	{r4, lr}
    ab64:	62da      	str	r2, [r3, #44]	; 0x2c
    ab66:	b908      	cbnz	r0, ab6c <RAILINT_cf4e885725a47449d7a6caf77bda2061+0x10>
    ab68:	b951      	cbnz	r1, ab80 <RAILINT_cf4e885725a47449d7a6caf77bda2061+0x24>
    ab6a:	bd10      	pop	{r4, pc}
    ab6c:	b941      	cbnz	r1, ab80 <RAILINT_cf4e885725a47449d7a6caf77bda2061+0x24>
    ab6e:	4a11      	ldr	r2, [pc, #68]	; (abb4 <RAILINT_cf4e885725a47449d7a6caf77bda2061+0x58>)
    ab70:	68d3      	ldr	r3, [r2, #12]
    ab72:	0e1b      	lsrs	r3, r3, #24
    ab74:	f013 0f0e 	tst.w	r3, #14
    ab78:	d1f7      	bne.n	ab6a <RAILINT_cf4e885725a47449d7a6caf77bda2061+0xe>
    ab7a:	6893      	ldr	r3, [r2, #8]
    ab7c:	069a      	lsls	r2, r3, #26
    ab7e:	d4f4      	bmi.n	ab6a <RAILINT_cf4e885725a47449d7a6caf77bda2061+0xe>
    ab80:	4c0c      	ldr	r4, [pc, #48]	; (abb4 <RAILINT_cf4e885725a47449d7a6caf77bda2061+0x58>)
    ab82:	2000      	movs	r0, #0
    ab84:	f7ff f8ac 	bl	9ce0 <RAILINT_12973c63ce9f157526b71bd49da4eecd>
    ab88:	2803      	cmp	r0, #3
    ab8a:	d001      	beq.n	ab90 <RAILINT_cf4e885725a47449d7a6caf77bda2061+0x34>
    ab8c:	2809      	cmp	r0, #9
    ab8e:	d105      	bne.n	ab9c <RAILINT_cf4e885725a47449d7a6caf77bda2061+0x40>
    ab90:	6f63      	ldr	r3, [r4, #116]	; 0x74
    ab92:	03db      	lsls	r3, r3, #15
    ab94:	d4f5      	bmi.n	ab82 <RAILINT_cf4e885725a47449d7a6caf77bda2061+0x26>
    ab96:	6de3      	ldr	r3, [r4, #92]	; 0x5c
    ab98:	2b0c      	cmp	r3, #12
    ab9a:	d9f2      	bls.n	ab82 <RAILINT_cf4e885725a47449d7a6caf77bda2061+0x26>
    ab9c:	f7ff ffc6 	bl	ab2c <RAILINT_b4349430825f42395f1799b2ff8bb1b4>
    aba0:	2201      	movs	r2, #1
    aba2:	4b05      	ldr	r3, [pc, #20]	; (abb8 <RAILINT_cf4e885725a47449d7a6caf77bda2061+0x5c>)
    aba4:	615a      	str	r2, [r3, #20]
    aba6:	2204      	movs	r2, #4
    aba8:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
    abac:	671a      	str	r2, [r3, #112]	; 0x70
    abae:	e7dc      	b.n	ab6a <RAILINT_cf4e885725a47449d7a6caf77bda2061+0xe>
    abb0:	a8016000 	.word	0xa8016000
    abb4:	a8020000 	.word	0xa8020000
    abb8:	a8021000 	.word	0xa8021000

0000abbc <RAILINT_519bf7b367869678ccdc4f803cd8123f>:
    abbc:	f7fd bf86 	b.w	8acc <RAILINT_1733b4fa56ea2dd2dbc687587cdd0f39>

0000abc0 <RAILINT_a7d421cde8a91be6637558edc84e4002>:
    abc0:	b538      	push	{r3, r4, r5, lr}
    abc2:	4605      	mov	r5, r0
    abc4:	f7fb fa62 	bl	608c <CORE_EnterCritical>
    abc8:	4604      	mov	r4, r0
    abca:	f7fd fefd 	bl	89c8 <RAILINT_6281eecc9c4ea6e1ecc523be2e1d48d2>
    abce:	b135      	cbz	r5, abde <RAILINT_a7d421cde8a91be6637558edc84e4002+0x1e>
    abd0:	f7ff fcc6 	bl	a560 <RAILINT_6d8967e14ffa5fbb64f5f8549fa17b5c>
    abd4:	4620      	mov	r0, r4
    abd6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    abda:	f7fb ba5b 	b.w	6094 <CORE_ExitCritical>
    abde:	4b08      	ldr	r3, [pc, #32]	; (ac00 <RAILINT_a7d421cde8a91be6637558edc84e4002+0x40>)
    abe0:	781b      	ldrb	r3, [r3, #0]
    abe2:	2b00      	cmp	r3, #0
    abe4:	d0f6      	beq.n	abd4 <RAILINT_a7d421cde8a91be6637558edc84e4002+0x14>
    abe6:	4b07      	ldr	r3, [pc, #28]	; (ac04 <RAILINT_a7d421cde8a91be6637558edc84e4002+0x44>)
    abe8:	781d      	ldrb	r5, [r3, #0]
    abea:	2d00      	cmp	r5, #0
    abec:	d1f2      	bne.n	abd4 <RAILINT_a7d421cde8a91be6637558edc84e4002+0x14>
    abee:	f7ff fcb7 	bl	a560 <RAILINT_6d8967e14ffa5fbb64f5f8549fa17b5c>
    abf2:	462a      	mov	r2, r5
    abf4:	f44f 4080 	mov.w	r0, #16384	; 0x4000
    abf8:	2100      	movs	r1, #0
    abfa:	f7ff fd2b 	bl	a654 <RAILINT_978af8e4393fb6ecb4e92f5256373899>
    abfe:	e7e9      	b.n	abd4 <RAILINT_a7d421cde8a91be6637558edc84e4002+0x14>
    ac00:	20000e1a 	.word	0x20000e1a
    ac04:	20000e18 	.word	0x20000e18

0000ac08 <RAILINT_415699d4fedc812ab5645a39d53b6366>:
    ac08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    ac0c:	4614      	mov	r4, r2
    ac0e:	4606      	mov	r6, r0
    ac10:	460d      	mov	r5, r1
    ac12:	f7fd fbfd 	bl	8410 <RAILINT_3209015e469febd3aebf12c10b838c78>
    ac16:	22a0      	movs	r2, #160	; 0xa0
    ac18:	4b43      	ldr	r3, [pc, #268]	; (ad28 <RAILINT_415699d4fedc812ab5645a39d53b6366+0x120>)
    ac1a:	2003      	movs	r0, #3
    ac1c:	671a      	str	r2, [r3, #112]	; 0x70
    ac1e:	f7fe fce5 	bl	95ec <RAILINT_bda0c15173302986042c4866e7e8cb7e>
    ac22:	b128      	cbz	r0, ac30 <RAILINT_415699d4fedc812ab5645a39d53b6366+0x28>
    ac24:	2003      	movs	r0, #3
    ac26:	f7fe fcd1 	bl	95cc <RAILINT_4f93cdd7aecf168775f2a95c9141aec8>
    ac2a:	2004      	movs	r0, #4
    ac2c:	f7fe fcce 	bl	95cc <RAILINT_4f93cdd7aecf168775f2a95c9141aec8>
    ac30:	f04f 0900 	mov.w	r9, #0
    ac34:	4b3d      	ldr	r3, [pc, #244]	; (ad2c <RAILINT_415699d4fedc812ab5645a39d53b6366+0x124>)
    ac36:	4a3e      	ldr	r2, [pc, #248]	; (ad30 <RAILINT_415699d4fedc812ab5645a39d53b6366+0x128>)
    ac38:	f04f 0804 	mov.w	r8, #4
    ac3c:	675a      	str	r2, [r3, #116]	; 0x74
    ac3e:	f8c3 9078 	str.w	r9, [r3, #120]	; 0x78
    ac42:	f7ff ff73 	bl	ab2c <RAILINT_b4349430825f42395f1799b2ff8bb1b4>
    ac46:	4b3b      	ldr	r3, [pc, #236]	; (ad34 <RAILINT_415699d4fedc812ab5645a39d53b6366+0x12c>)
    ac48:	4837      	ldr	r0, [pc, #220]	; (ad28 <RAILINT_415699d4fedc812ab5645a39d53b6366+0x120>)
    ac4a:	f8d3 2e9c 	ldr.w	r2, [r3, #3740]	; 0xe9c
    ac4e:	4f3a      	ldr	r7, [pc, #232]	; (ad38 <RAILINT_415699d4fedc812ab5645a39d53b6366+0x130>)
    ac50:	f042 0220 	orr.w	r2, r2, #32
    ac54:	f8c3 2e9c 	str.w	r2, [r3, #3740]	; 0xe9c
    ac58:	22ff      	movs	r2, #255	; 0xff
    ac5a:	6082      	str	r2, [r0, #8]
    ac5c:	f44f 7280 	mov.w	r2, #256	; 0x100
    ac60:	613a      	str	r2, [r7, #16]
    ac62:	f8d3 1ecc 	ldr.w	r1, [r3, #3788]	; 0xecc
    ac66:	4a35      	ldr	r2, [pc, #212]	; (ad3c <RAILINT_415699d4fedc812ab5645a39d53b6366+0x134>)
    ac68:	400a      	ands	r2, r1
    ac6a:	f8c3 2ecc 	str.w	r2, [r3, #3788]	; 0xecc
    ac6e:	f8c0 8070 	str.w	r8, [r0, #112]	; 0x70
    ac72:	f8c3 9ea4 	str.w	r9, [r3, #3748]	; 0xea4
    ac76:	b156      	cbz	r6, ac8e <RAILINT_415699d4fedc812ab5645a39d53b6366+0x86>
    ac78:	f7ff fc80 	bl	a57c <RAILINT_ef38b49f1deb3f763f4f0e2ae372d117>
    ac7c:	f7fe fce4 	bl	9648 <RAILINT_91acd8a0b3b22b251b18aeabdb4a57f7>
    ac80:	f7ff fc90 	bl	a5a4 <RAILINT_1f111261e83374ea84a9c5469ceac557>
    ac84:	4640      	mov	r0, r8
    ac86:	f7fe fca1 	bl	95cc <RAILINT_4f93cdd7aecf168775f2a95c9141aec8>
    ac8a:	f7ff fc27 	bl	a4dc <RAILINT_e5849823b21bf651f5d87f5e741d2a12>
    ac8e:	697b      	ldr	r3, [r7, #20]
    ac90:	07d9      	lsls	r1, r3, #31
    ac92:	d546      	bpl.n	ad22 <RAILINT_415699d4fedc812ab5645a39d53b6366+0x11a>
    ac94:	4a28      	ldr	r2, [pc, #160]	; (ad38 <RAILINT_415699d4fedc812ab5645a39d53b6366+0x130>)
    ac96:	68d3      	ldr	r3, [r2, #12]
    ac98:	f013 6f70 	tst.w	r3, #251658240	; 0xf000000
    ac9c:	d1fb      	bne.n	ac96 <RAILINT_415699d4fedc812ab5645a39d53b6366+0x8e>
    ac9e:	4b28      	ldr	r3, [pc, #160]	; (ad40 <RAILINT_415699d4fedc812ab5645a39d53b6366+0x138>)
    aca0:	4e21      	ldr	r6, [pc, #132]	; (ad28 <RAILINT_415699d4fedc812ab5645a39d53b6366+0x120>)
    aca2:	4a28      	ldr	r2, [pc, #160]	; (ad44 <RAILINT_415699d4fedc812ab5645a39d53b6366+0x13c>)
    aca4:	6733      	str	r3, [r6, #112]	; 0x70
    aca6:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
    aca8:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
    acac:	62d3      	str	r3, [r2, #44]	; 0x2c
    acae:	b115      	cbz	r5, acb6 <RAILINT_415699d4fedc812ab5645a39d53b6366+0xae>
    acb0:	4620      	mov	r0, r4
    acb2:	f7ff ff85 	bl	abc0 <RAILINT_a7d421cde8a91be6637558edc84e4002>
    acb6:	4b24      	ldr	r3, [pc, #144]	; (ad48 <RAILINT_415699d4fedc812ab5645a39d53b6366+0x140>)
    acb8:	f8d3 314c 	ldr.w	r3, [r3, #332]	; 0x14c
    acbc:	1c5a      	adds	r2, r3, #1
    acbe:	d001      	beq.n	acc4 <RAILINT_415699d4fedc812ab5645a39d53b6366+0xbc>
    acc0:	005b      	lsls	r3, r3, #1
    acc2:	d501      	bpl.n	acc8 <RAILINT_415699d4fedc812ab5645a39d53b6366+0xc0>
    acc4:	2301      	movs	r3, #1
    acc6:	6173      	str	r3, [r6, #20]
    acc8:	b35c      	cbz	r4, ad22 <RAILINT_415699d4fedc812ab5645a39d53b6366+0x11a>
    acca:	4b20      	ldr	r3, [pc, #128]	; (ad4c <RAILINT_415699d4fedc812ab5645a39d53b6366+0x144>)
    accc:	6eda      	ldr	r2, [r3, #108]	; 0x6c
    acce:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
    acd2:	669a      	str	r2, [r3, #104]	; 0x68
    acd4:	f503 33d0 	add.w	r3, r3, #106496	; 0x1a000
    acd8:	6a1a      	ldr	r2, [r3, #32]
    acda:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
    acde:	61da      	str	r2, [r3, #28]
    ace0:	4a1b      	ldr	r2, [pc, #108]	; (ad50 <RAILINT_415699d4fedc812ab5645a39d53b6366+0x148>)
    ace2:	f8d2 120c 	ldr.w	r1, [r2, #524]	; 0x20c
    ace6:	f502 5200 	add.w	r2, r2, #8192	; 0x2000
    acea:	f8c2 1208 	str.w	r1, [r2, #520]	; 0x208
    acee:	f502 5200 	add.w	r2, r2, #8192	; 0x2000
    acf2:	f8d2 1084 	ldr.w	r1, [r2, #132]	; 0x84
    acf6:	f502 5200 	add.w	r2, r2, #8192	; 0x2000
    acfa:	6791      	str	r1, [r2, #120]	; 0x78
    acfc:	4a15      	ldr	r2, [pc, #84]	; (ad54 <RAILINT_415699d4fedc812ab5645a39d53b6366+0x14c>)
    acfe:	f8d2 10ec 	ldr.w	r1, [r2, #236]	; 0xec
    ad02:	f502 5200 	add.w	r2, r2, #8192	; 0x2000
    ad06:	f8c2 10e0 	str.w	r1, [r2, #224]	; 0xe0
    ad0a:	4a13      	ldr	r2, [pc, #76]	; (ad58 <RAILINT_415699d4fedc812ab5645a39d53b6366+0x150>)
    ad0c:	6c51      	ldr	r1, [r2, #68]	; 0x44
    ad0e:	f502 5200 	add.w	r2, r2, #8192	; 0x2000
    ad12:	6391      	str	r1, [r2, #56]	; 0x38
    ad14:	4911      	ldr	r1, [pc, #68]	; (ad5c <RAILINT_415699d4fedc812ab5645a39d53b6366+0x154>)
    ad16:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
    ad1a:	6651      	str	r1, [r2, #100]	; 0x64
    ad1c:	f64f 4208 	movw	r2, #64520	; 0xfc08
    ad20:	671a      	str	r2, [r3, #112]	; 0x70
    ad22:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    ad26:	bf00      	nop
    ad28:	a8022000 	.word	0xa8022000
    ad2c:	a801c000 	.word	0xa801c000
    ad30:	01010000 	.word	0x01010000
    ad34:	b0001000 	.word	0xb0001000
    ad38:	a8020000 	.word	0xa8020000
    ad3c:	ff0000df 	.word	0xff0000df
    ad40:	00300010 	.word	0x00300010
    ad44:	b0001f00 	.word	0xb0001f00
    ad48:	0fe08000 	.word	0x0fe08000
    ad4c:	a8004000 	.word	0xa8004000
    ad50:	a8014000 	.word	0xa8014000
    ad54:	44004000 	.word	0x44004000
    ad58:	a800c000 	.word	0xa800c000
    ad5c:	2f000050 	.word	0x2f000050

0000ad60 <FRC_IRQHandler>:
    ad60:	4b88      	ldr	r3, [pc, #544]	; (af84 <FRC_IRQHandler+0x224>)
    ad62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ad66:	6e9f      	ldr	r7, [r3, #104]	; 0x68
    ad68:	6edb      	ldr	r3, [r3, #108]	; 0x6c
    ad6a:	b085      	sub	sp, #20
    ad6c:	401f      	ands	r7, r3
    ad6e:	4b86      	ldr	r3, [pc, #536]	; (af88 <FRC_IRQHandler+0x228>)
    ad70:	669f      	str	r7, [r3, #104]	; 0x68
    ad72:	4b86      	ldr	r3, [pc, #536]	; (af8c <FRC_IRQHandler+0x22c>)
    ad74:	f8d3 40e0 	ldr.w	r4, [r3, #224]	; 0xe0
    ad78:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
    ad7c:	401c      	ands	r4, r3
    ad7e:	4b84      	ldr	r3, [pc, #528]	; (af90 <FRC_IRQHandler+0x230>)
    ad80:	f8c3 40e0 	str.w	r4, [r3, #224]	; 0xe0
    ad84:	4b83      	ldr	r3, [pc, #524]	; (af94 <FRC_IRQHandler+0x234>)
    ad86:	f8d3 2208 	ldr.w	r2, [r3, #520]	; 0x208
    ad8a:	f8d3 320c 	ldr.w	r3, [r3, #524]	; 0x20c
    ad8e:	ea02 0903 	and.w	r9, r2, r3
    ad92:	4b81      	ldr	r3, [pc, #516]	; (af98 <FRC_IRQHandler+0x238>)
    ad94:	f8c3 9208 	str.w	r9, [r3, #520]	; 0x208
    ad98:	f503 4320 	add.w	r3, r3, #40960	; 0xa000
    ad9c:	69da      	ldr	r2, [r3, #28]
    ad9e:	6a1b      	ldr	r3, [r3, #32]
    ada0:	ea02 0803 	and.w	r8, r2, r3
    ada4:	4b7d      	ldr	r3, [pc, #500]	; (af9c <FRC_IRQHandler+0x23c>)
    ada6:	4a7e      	ldr	r2, [pc, #504]	; (afa0 <FRC_IRQHandler+0x240>)
    ada8:	ea08 0303 	and.w	r3, r8, r3
    adac:	61d3      	str	r3, [r2, #28]
    adae:	4b7d      	ldr	r3, [pc, #500]	; (afa4 <FRC_IRQHandler+0x244>)
    adb0:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
    adb4:	06d0      	lsls	r0, r2, #27
    adb6:	d406      	bmi.n	adc6 <FRC_IRQHandler+0x66>
    adb8:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
    adbc:	06d9      	lsls	r1, r3, #27
    adbe:	f3c3 1600 	ubfx	r6, r3, #4, #1
    adc2:	f140 80c4 	bpl.w	af4e <FRC_IRQHandler+0x1ee>
    adc6:	f7fb f961 	bl	608c <CORE_EnterCritical>
    adca:	4b77      	ldr	r3, [pc, #476]	; (afa8 <FRC_IRQHandler+0x248>)
    adcc:	695a      	ldr	r2, [r3, #20]
    adce:	6e5e      	ldr	r6, [r3, #100]	; 0x64
    add0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    add2:	f012 0f06 	tst.w	r2, #6
    add6:	ea06 0603 	and.w	r6, r6, r3
    adda:	4a74      	ldr	r2, [pc, #464]	; (afac <FRC_IRQHandler+0x24c>)
    addc:	f026 7300 	bic.w	r3, r6, #33554432	; 0x2000000
    ade0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
    ade4:	bf14      	ite	ne
    ade6:	f04f 0a01 	movne.w	sl, #1
    adea:	f04f 0a00 	moveq.w	sl, #0
    adee:	6653      	str	r3, [r2, #100]	; 0x64
    adf0:	0772      	lsls	r2, r6, #29
    adf2:	d504      	bpl.n	adfe <FRC_IRQHandler+0x9e>
    adf4:	4a6e      	ldr	r2, [pc, #440]	; (afb0 <FRC_IRQHandler+0x250>)
    adf6:	7d53      	ldrb	r3, [r2, #21]
    adf8:	3301      	adds	r3, #1
    adfa:	b2db      	uxtb	r3, r3
    adfc:	7553      	strb	r3, [r2, #21]
    adfe:	f7fb f949 	bl	6094 <CORE_ExitCritical>
    ae02:	2f00      	cmp	r7, #0
    ae04:	f000 80ba 	beq.w	af7c <FRC_IRQHandler+0x21c>
    ae08:	f417 4300 	ands.w	r3, r7, #32768	; 0x8000
    ae0c:	f000 80a1 	beq.w	af52 <FRC_IRQHandler+0x1f2>
    ae10:	4b68      	ldr	r3, [pc, #416]	; (afb4 <FRC_IRQHandler+0x254>)
    ae12:	f8d3 b070 	ldr.w	fp, [r3, #112]	; 0x70
    ae16:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
    ae1a:	f40b 55e0 	and.w	r5, fp, #7168	; 0x1c00
    ae1e:	671d      	str	r5, [r3, #112]	; 0x70
    ae20:	f7ff fe54 	bl	aacc <RAILINT_cda8bf84b67189e08b64149f714e0ad8>
    ae24:	2d00      	cmp	r5, #0
    ae26:	f000 8097 	beq.w	af58 <FRC_IRQHandler+0x1f8>
    ae2a:	f41b 5580 	ands.w	r5, fp, #4096	; 0x1000
    ae2e:	f040 8096 	bne.w	af5e <FRC_IRQHandler+0x1fe>
    ae32:	f41b 6f80 	tst.w	fp, #1024	; 0x400
    ae36:	bf14      	ite	ne
    ae38:	f04f 6b80 	movne.w	fp, #67108864	; 0x4000000
    ae3c:	f04f 5b80 	moveq.w	fp, #268435456	; 0x10000000
    ae40:	07bb      	lsls	r3, r7, #30
    ae42:	d50a      	bpl.n	ae5a <FRC_IRQHandler+0xfa>
    ae44:	4a5b      	ldr	r2, [pc, #364]	; (afb4 <FRC_IRQHandler+0x254>)
    ae46:	4856      	ldr	r0, [pc, #344]	; (afa0 <FRC_IRQHandler+0x240>)
    ae48:	6f12      	ldr	r2, [r2, #112]	; 0x70
    ae4a:	f402 4160 	and.w	r1, r2, #57344	; 0xe000
    ae4e:	6701      	str	r1, [r0, #112]	; 0x70
    ae50:	2900      	cmp	r1, #0
    ae52:	f040 8087 	bne.w	af64 <FRC_IRQHandler+0x204>
    ae56:	f04b 7b00 	orr.w	fp, fp, #33554432	; 0x2000000
    ae5a:	f417 5700 	ands.w	r7, r7, #8192	; 0x2000
    ae5e:	bf18      	it	ne
    ae60:	2702      	movne	r7, #2
    ae62:	4a55      	ldr	r2, [pc, #340]	; (afb8 <FRC_IRQHandler+0x258>)
    ae64:	4022      	ands	r2, r4
    ae66:	2a00      	cmp	r2, #0
    ae68:	d04a      	beq.n	af00 <FRC_IRQHandler+0x1a0>
    ae6a:	f414 6f20 	tst.w	r4, #2560	; 0xa00
    ae6e:	d00a      	beq.n	ae86 <FRC_IRQHandler+0x126>
    ae70:	2000      	movs	r0, #0
    ae72:	f7ff fea5 	bl	abc0 <RAILINT_a7d421cde8a91be6637558edc84e4002>
    ae76:	f44f 62d5 	mov.w	r2, #1704	; 0x6a8
    ae7a:	2106      	movs	r1, #6
    ae7c:	2000      	movs	r0, #0
    ae7e:	f424 2480 	bic.w	r4, r4, #262144	; 0x40000
    ae82:	f7fc f92d 	bl	70e0 <RAILINT_205167ae842e22724c3f35c6430eeddb>
    ae86:	05e2      	lsls	r2, r4, #23
    ae88:	d506      	bpl.n	ae98 <FRC_IRQHandler+0x138>
    ae8a:	21ff      	movs	r1, #255	; 0xff
    ae8c:	4a44      	ldr	r2, [pc, #272]	; (afa0 <FRC_IRQHandler+0x240>)
    ae8e:	f44b 6bc0 	orr.w	fp, fp, #1536	; 0x600
    ae92:	6091      	str	r1, [r2, #8]
    ae94:	f7ff fb72 	bl	a57c <RAILINT_ef38b49f1deb3f763f4f0e2ae372d117>
    ae98:	f014 0f09 	tst.w	r4, #9
    ae9c:	d00a      	beq.n	aeb4 <FRC_IRQHandler+0x154>
    ae9e:	f7ff fb81 	bl	a5a4 <RAILINT_1f111261e83374ea84a9c5469ceac557>
    aea2:	2101      	movs	r1, #1
    aea4:	4a39      	ldr	r2, [pc, #228]	; (af8c <FRC_IRQHandler+0x22c>)
    aea6:	2000      	movs	r0, #0
    aea8:	6311      	str	r1, [r2, #48]	; 0x30
    aeaa:	f240 62bb 	movw	r2, #1723	; 0x6bb
    aeae:	2108      	movs	r1, #8
    aeb0:	f7fc f916 	bl	70e0 <RAILINT_205167ae842e22724c3f35c6430eeddb>
    aeb4:	f014 6f10 	tst.w	r4, #150994944	; 0x9000000
    aeb8:	d00c      	beq.n	aed4 <FRC_IRQHandler+0x174>
    aeba:	f7ff fb73 	bl	a5a4 <RAILINT_1f111261e83374ea84a9c5469ceac557>
    aebe:	2200      	movs	r2, #0
    aec0:	4611      	mov	r1, r2
    aec2:	4610      	mov	r0, r2
    aec4:	f7fd fd64 	bl	8990 <RAILINT_3ed2ccbe6359cb941c07e51a82b4c080>
    aec8:	f240 62c4 	movw	r2, #1732	; 0x6c4
    aecc:	2109      	movs	r1, #9
    aece:	2000      	movs	r0, #0
    aed0:	f7fc f906 	bl	70e0 <RAILINT_205167ae842e22724c3f35c6430eeddb>
    aed4:	f414 2f20 	tst.w	r4, #655360	; 0xa0000
    aed8:	d00a      	beq.n	aef0 <FRC_IRQHandler+0x190>
    aeda:	2000      	movs	r0, #0
    aedc:	f7ff fe70 	bl	abc0 <RAILINT_a7d421cde8a91be6637558edc84e4002>
    aee0:	f240 62cf 	movw	r2, #1743	; 0x6cf
    aee4:	2107      	movs	r1, #7
    aee6:	2000      	movs	r0, #0
    aee8:	f424 2480 	bic.w	r4, r4, #262144	; 0x40000
    aeec:	f7fc f8f8 	bl	70e0 <RAILINT_205167ae842e22724c3f35c6430eeddb>
    aef0:	03e3      	lsls	r3, r4, #15
    aef2:	d501      	bpl.n	aef8 <FRC_IRQHandler+0x198>
    aef4:	f7fd fecc 	bl	8c90 <RAILINT_6e9511005f24d0489b4328a9cd887def>
    aef8:	2c00      	cmp	r4, #0
    aefa:	bfb8      	it	lt
    aefc:	f047 0708 	orrlt.w	r7, r7, #8
    af00:	0760      	lsls	r0, r4, #29
    af02:	d50d      	bpl.n	af20 <FRC_IRQHandler+0x1c0>
    af04:	4a21      	ldr	r2, [pc, #132]	; (af8c <FRC_IRQHandler+0x22c>)
    af06:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
    af08:	f412 5f00 	tst.w	r2, #8192	; 0x2000
    af0c:	f44f 5200 	mov.w	r2, #8192	; 0x2000
    af10:	bf17      	itett	ne
    af12:	491f      	ldrne	r1, [pc, #124]	; (af90 <FRC_IRQHandler+0x230>)
    af14:	4929      	ldreq	r1, [pc, #164]	; (afbc <FRC_IRQHandler+0x25c>)
    af16:	62ca      	strne	r2, [r1, #44]	; 0x2c
    af18:	f44b 0b00 	orrne.w	fp, fp, #8388608	; 0x800000
    af1c:	bf08      	it	eq
    af1e:	62ca      	streq	r2, [r1, #44]	; 0x2c
    af20:	0561      	lsls	r1, r4, #21
    af22:	bf48      	it	mi
    af24:	f04b 0b04 	orrmi.w	fp, fp, #4
    af28:	f414 2380 	ands.w	r3, r4, #262144	; 0x40000
    af2c:	9301      	str	r3, [sp, #4]
    af2e:	f000 80a7 	beq.w	b080 <FRC_IRQHandler+0x320>
    af32:	f7fd fe6f 	bl	8c14 <RAILINT_0906929bba6a17fd8a9605e65064a9f4>
    af36:	3801      	subs	r0, #1
    af38:	2806      	cmp	r0, #6
    af3a:	d841      	bhi.n	afc0 <FRC_IRQHandler+0x260>
    af3c:	e8df f010 	tbh	[pc, r0, lsl #1]
    af40:	011b0118 	.word	0x011b0118
    af44:	011e0118 	.word	0x011e0118
    af48:	01240121 	.word	0x01240121
    af4c:	0124      	.short	0x0124
    af4e:	46b2      	mov	sl, r6
    af50:	e757      	b.n	ae02 <FRC_IRQHandler+0xa2>
    af52:	469b      	mov	fp, r3
    af54:	2500      	movs	r5, #0
    af56:	e773      	b.n	ae40 <FRC_IRQHandler+0xe0>
    af58:	f04f 7b80 	mov.w	fp, #16777216	; 0x1000000
    af5c:	e770      	b.n	ae40 <FRC_IRQHandler+0xe0>
    af5e:	f04f 4b80 	mov.w	fp, #1073741824	; 0x40000000
    af62:	e7f7      	b.n	af54 <FRC_IRQHandler+0x1f4>
    af64:	0410      	lsls	r0, r2, #16
    af66:	d502      	bpl.n	af6e <FRC_IRQHandler+0x20e>
    af68:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
    af6c:	e775      	b.n	ae5a <FRC_IRQHandler+0xfa>
    af6e:	0491      	lsls	r1, r2, #18
    af70:	bf4c      	ite	mi
    af72:	f04b 6b00 	orrmi.w	fp, fp, #134217728	; 0x8000000
    af76:	f04b 5b00 	orrpl.w	fp, fp, #536870912	; 0x20000000
    af7a:	e76e      	b.n	ae5a <FRC_IRQHandler+0xfa>
    af7c:	46bb      	mov	fp, r7
    af7e:	463d      	mov	r5, r7
    af80:	e76f      	b.n	ae62 <FRC_IRQHandler+0x102>
    af82:	bf00      	nop
    af84:	a8004000 	.word	0xa8004000
    af88:	a8006000 	.word	0xa8006000
    af8c:	44004000 	.word	0x44004000
    af90:	44006000 	.word	0x44006000
    af94:	a8014000 	.word	0xa8014000
    af98:	a8016000 	.word	0xa8016000
    af9c:	fff70000 	.word	0xfff70000
    afa0:	a8022000 	.word	0xa8022000
    afa4:	e000e100 	.word	0xe000e100
    afa8:	a801c000 	.word	0xa801c000
    afac:	a801e000 	.word	0xa801e000
    afb0:	20000e1c 	.word	0x20000e1c
    afb4:	a8020000 	.word	0xa8020000
    afb8:	890b0b09 	.word	0x890b0b09
    afbc:	44005000 	.word	0x44005000
    afc0:	f240 62fb 	movw	r2, #1787	; 0x6fb
    afc4:	2103      	movs	r1, #3
    afc6:	2000      	movs	r0, #0
    afc8:	f7fc f88a 	bl	70e0 <RAILINT_205167ae842e22724c3f35c6430eeddb>
    afcc:	2101      	movs	r1, #1
    afce:	487b      	ldr	r0, [pc, #492]	; (b1bc <FRC_IRQHandler+0x45c>)
    afd0:	6e82      	ldr	r2, [r0, #104]	; 0x68
    afd2:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
    afd6:	f002 0207 	and.w	r2, r2, #7
    afda:	3206      	adds	r2, #6
    afdc:	fa01 f202 	lsl.w	r2, r1, r2
    afe0:	f3c3 0c0c 	ubfx	ip, r3, #0, #13
    afe4:	eba2 020c 	sub.w	r2, r2, ip
    afe8:	b292      	uxth	r2, r2
    afea:	2a07      	cmp	r2, #7
    afec:	d912      	bls.n	b014 <FRC_IRQHandler+0x2b4>
    afee:	4a74      	ldr	r2, [pc, #464]	; (b1c0 <FRC_IRQHandler+0x460>)
    aff0:	6f12      	ldr	r2, [r2, #112]	; 0x70
    aff2:	0252      	lsls	r2, r2, #9
    aff4:	d40e      	bmi.n	b014 <FRC_IRQHandler+0x2b4>
    aff6:	4b73      	ldr	r3, [pc, #460]	; (b1c4 <FRC_IRQHandler+0x464>)
    aff8:	6b82      	ldr	r2, [r0, #56]	; 0x38
    affa:	6d80      	ldr	r0, [r0, #88]	; 0x58
    affc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    affe:	b15b      	cbz	r3, b018 <FRC_IRQHandler+0x2b8>
    b000:	f002 0207 	and.w	r2, r2, #7
    b004:	3206      	adds	r2, #6
    b006:	4091      	lsls	r1, r2
    b008:	f3c0 000c 	ubfx	r0, r0, #0, #13
    b00c:	1a09      	subs	r1, r1, r0
    b00e:	b289      	uxth	r1, r1
    b010:	2905      	cmp	r1, #5
    b012:	d801      	bhi.n	b018 <FRC_IRQHandler+0x2b8>
    b014:	f44b 7b00 	orr.w	fp, fp, #512	; 0x200
    b018:	4a6b      	ldr	r2, [pc, #428]	; (b1c8 <FRC_IRQHandler+0x468>)
    b01a:	7812      	ldrb	r2, [r2, #0]
    b01c:	2a00      	cmp	r2, #0
    b01e:	d02f      	beq.n	b080 <FRC_IRQHandler+0x320>
    b020:	4a66      	ldr	r2, [pc, #408]	; (b1bc <FRC_IRQHandler+0x45c>)
    b022:	f8d2 20e0 	ldr.w	r2, [r2, #224]	; 0xe0
    b026:	f412 2fa0 	tst.w	r2, #327680	; 0x50000
    b02a:	d129      	bne.n	b080 <FRC_IRQHandler+0x320>
    b02c:	4a67      	ldr	r2, [pc, #412]	; (b1cc <FRC_IRQHandler+0x46c>)
    b02e:	4968      	ldr	r1, [pc, #416]	; (b1d0 <FRC_IRQHandler+0x470>)
    b030:	7812      	ldrb	r2, [r2, #0]
    b032:	b97a      	cbnz	r2, b054 <FRC_IRQHandler+0x2f4>
    b034:	f416 5280 	ands.w	r2, r6, #4096	; 0x1000
    b038:	d10c      	bne.n	b054 <FRC_IRQHandler+0x2f4>
    b03a:	7808      	ldrb	r0, [r1, #0]
    b03c:	b150      	cbz	r0, b054 <FRC_IRQHandler+0x2f4>
    b03e:	f01b 0f08 	tst.w	fp, #8
    b042:	bf08      	it	eq
    b044:	2202      	moveq	r2, #2
    b046:	4863      	ldr	r0, [pc, #396]	; (b1d4 <FRC_IRQHandler+0x474>)
    b048:	f8d0 0ecc 	ldr.w	r0, [r0, #3788]	; 0xecc
    b04c:	fa20 f202 	lsr.w	r2, r0, r2
    b050:	0793      	lsls	r3, r2, #30
    b052:	d115      	bne.n	b080 <FRC_IRQHandler+0x320>
    b054:	2004      	movs	r0, #4
    b056:	f7fe fab9 	bl	95cc <RAILINT_4f93cdd7aecf168775f2a95c9141aec8>
    b05a:	4a5f      	ldr	r2, [pc, #380]	; (b1d8 <FRC_IRQHandler+0x478>)
    b05c:	485f      	ldr	r0, [pc, #380]	; (b1dc <FRC_IRQHandler+0x47c>)
    b05e:	6750      	str	r0, [r2, #116]	; 0x74
    b060:	f7ff fa7e 	bl	a560 <RAILINT_6d8967e14ffa5fbb64f5f8549fa17b5c>
    b064:	495a      	ldr	r1, [pc, #360]	; (b1d0 <FRC_IRQHandler+0x470>)
    b066:	780a      	ldrb	r2, [r1, #0]
    b068:	b932      	cbnz	r2, b078 <FRC_IRQHandler+0x318>
    b06a:	4a5d      	ldr	r2, [pc, #372]	; (b1e0 <FRC_IRQHandler+0x480>)
    b06c:	495d      	ldr	r1, [pc, #372]	; (b1e4 <FRC_IRQHandler+0x484>)
    b06e:	6812      	ldr	r2, [r2, #0]
    b070:	ea0b 0202 	and.w	r2, fp, r2
    b074:	420a      	tst	r2, r1
    b076:	d101      	bne.n	b07c <FRC_IRQHandler+0x31c>
    b078:	f44b 4b80 	orr.w	fp, fp, #16384	; 0x4000
    b07c:	f426 5680 	bic.w	r6, r6, #4096	; 0x1000
    b080:	f1b9 0f00 	cmp.w	r9, #0
    b084:	d01d      	beq.n	b0c2 <FRC_IRQHandler+0x362>
    b086:	f419 5f80 	tst.w	r9, #4096	; 0x1000
    b08a:	bf18      	it	ne
    b08c:	f44b 2b80 	orrne.w	fp, fp, #262144	; 0x40000
    b090:	f419 7f80 	tst.w	r9, #256	; 0x100
    b094:	bf18      	it	ne
    b096:	f44b 2b00 	orrne.w	fp, fp, #524288	; 0x80000
    b09a:	f419 5f00 	tst.w	r9, #8192	; 0x2000
    b09e:	bf18      	it	ne
    b0a0:	f04b 0b10 	orrne.w	fp, fp, #16
    b0a4:	f419 7f00 	tst.w	r9, #512	; 0x200
    b0a8:	bf18      	it	ne
    b0aa:	f04b 0b20 	orrne.w	fp, fp, #32
    b0ae:	f419 6f80 	tst.w	r9, #1024	; 0x400
    b0b2:	bf18      	it	ne
    b0b4:	f04b 0b40 	orrne.w	fp, fp, #64	; 0x40
    b0b8:	f419 6f00 	tst.w	r9, #2048	; 0x800
    b0bc:	bf18      	it	ne
    b0be:	f04b 0b80 	orrne.w	fp, fp, #128	; 0x80
    b0c2:	f1b8 0f00 	cmp.w	r8, #0
    b0c6:	d036      	beq.n	b136 <FRC_IRQHandler+0x3d6>
    b0c8:	f418 2f80 	tst.w	r8, #262144	; 0x40000
    b0cc:	bf18      	it	ne
    b0ce:	f44f 7500 	movne.w	r5, #512	; 0x200
    b0d2:	f418 3f80 	tst.w	r8, #65536	; 0x10000
    b0d6:	bf18      	it	ne
    b0d8:	f44b 5b80 	orrne.w	fp, fp, #4096	; 0x1000
    b0dc:	f418 1f80 	tst.w	r8, #1048576	; 0x100000
    b0e0:	bf18      	it	ne
    b0e2:	f44b 3b00 	orrne.w	fp, fp, #131072	; 0x20000
    b0e6:	f418 1f00 	tst.w	r8, #2097152	; 0x200000
    b0ea:	bf18      	it	ne
    b0ec:	f04b 0b02 	orrne.w	fp, fp, #2
    b0f0:	f418 3f00 	tst.w	r8, #131072	; 0x20000
    b0f4:	bf18      	it	ne
    b0f6:	f44b 1b80 	orrne.w	fp, fp, #1048576	; 0x100000
    b0fa:	f418 0f80 	tst.w	r8, #4194304	; 0x400000
    b0fe:	bf18      	it	ne
    b100:	f045 0510 	orrne.w	r5, r5, #16
    b104:	f418 2f00 	tst.w	r8, #524288	; 0x80000
    b108:	d015      	beq.n	b136 <FRC_IRQHandler+0x3d6>
    b10a:	4a32      	ldr	r2, [pc, #200]	; (b1d4 <FRC_IRQHandler+0x474>)
    b10c:	f8d2 2e9c 	ldr.w	r2, [r2, #3740]	; 0xe9c
    b110:	f012 0fc0 	tst.w	r2, #192	; 0xc0
    b114:	d00f      	beq.n	b136 <FRC_IRQHandler+0x3d6>
    b116:	492a      	ldr	r1, [pc, #168]	; (b1c0 <FRC_IRQHandler+0x460>)
    b118:	68ca      	ldr	r2, [r1, #12]
    b11a:	f3c2 6203 	ubfx	r2, r2, #24, #4
    b11e:	2a03      	cmp	r2, #3
    b120:	d001      	beq.n	b126 <FRC_IRQHandler+0x3c6>
    b122:	2a07      	cmp	r2, #7
    b124:	d133      	bne.n	b18e <FRC_IRQHandler+0x42e>
    b126:	6f4a      	ldr	r2, [r1, #116]	; 0x74
    b128:	06d0      	lsls	r0, r2, #27
    b12a:	d430      	bmi.n	b18e <FRC_IRQHandler+0x42e>
    b12c:	6f8a      	ldr	r2, [r1, #120]	; 0x78
    b12e:	0712      	lsls	r2, r2, #28
    b130:	d42d      	bmi.n	b18e <FRC_IRQHandler+0x42e>
    b132:	f44b 1b00 	orr.w	fp, fp, #2097152	; 0x200000
    b136:	2e00      	cmp	r6, #0
    b138:	f000 810a 	beq.w	b350 <FRC_IRQHandler+0x5f0>
    b13c:	0533      	lsls	r3, r6, #20
    b13e:	f140 808a 	bpl.w	b256 <FRC_IRQHandler+0x4f6>
    b142:	4829      	ldr	r0, [pc, #164]	; (b1e8 <FRC_IRQHandler+0x488>)
    b144:	f8df 9090 	ldr.w	r9, [pc, #144]	; b1d8 <FRC_IRQHandler+0x478>
    b148:	78c2      	ldrb	r2, [r0, #3]
    b14a:	4928      	ldr	r1, [pc, #160]	; (b1ec <FRC_IRQHandler+0x48c>)
    b14c:	2a00      	cmp	r2, #0
    b14e:	d055      	beq.n	b1fc <FRC_IRQHandler+0x49c>
    b150:	f44f 6300 	mov.w	r3, #2048	; 0x800
    b154:	3a01      	subs	r2, #1
    b156:	b2d2      	uxtb	r2, r2
    b158:	664b      	str	r3, [r1, #100]	; 0x64
    b15a:	70c2      	strb	r2, [r0, #3]
    b15c:	bb3a      	cbnz	r2, b1ae <FRC_IRQHandler+0x44e>
    b15e:	4924      	ldr	r1, [pc, #144]	; (b1f0 <FRC_IRQHandler+0x490>)
    b160:	7808      	ldrb	r0, [r1, #0]
    b162:	b1d8      	cbz	r0, b19c <FRC_IRQHandler+0x43c>
    b164:	f640 4001 	movw	r0, #3073	; 0xc01
    b168:	4922      	ldr	r1, [pc, #136]	; (b1f4 <FRC_IRQHandler+0x494>)
    b16a:	6748      	str	r0, [r1, #116]	; 0x74
    b16c:	2100      	movs	r1, #0
    b16e:	e06f      	b.n	b250 <FRC_IRQHandler+0x4f0>
    b170:	f44b 3b80 	orr.w	fp, fp, #65536	; 0x10000
    b174:	e72a      	b.n	afcc <FRC_IRQHandler+0x26c>
    b176:	f44b 6b00 	orr.w	fp, fp, #2048	; 0x800
    b17a:	e727      	b.n	afcc <FRC_IRQHandler+0x26c>
    b17c:	f44b 6b80 	orr.w	fp, fp, #1024	; 0x400
    b180:	e724      	b.n	afcc <FRC_IRQHandler+0x26c>
    b182:	f44b 7b80 	orr.w	fp, fp, #256	; 0x100
    b186:	e721      	b.n	afcc <FRC_IRQHandler+0x26c>
    b188:	f04b 0b08 	orr.w	fp, fp, #8
    b18c:	e71e      	b.n	afcc <FRC_IRQHandler+0x26c>
    b18e:	f44f 2100 	mov.w	r1, #524288	; 0x80000
    b192:	4a19      	ldr	r2, [pc, #100]	; (b1f8 <FRC_IRQHandler+0x498>)
    b194:	f428 2800 	bic.w	r8, r8, #524288	; 0x80000
    b198:	61d1      	str	r1, [r2, #28]
    b19a:	e7cc      	b.n	b136 <FRC_IRQHandler+0x3d6>
    b19c:	f8d9 2078 	ldr.w	r2, [r9, #120]	; 0x78
    b1a0:	f412 52a0 	ands.w	r2, r2, #5120	; 0x1400
    b1a4:	d005      	beq.n	b1b2 <FRC_IRQHandler+0x452>
    b1a6:	f44f 7280 	mov.w	r2, #256	; 0x100
    b1aa:	f8c9 2058 	str.w	r2, [r9, #88]	; 0x58
    b1ae:	2200      	movs	r2, #0
    b1b0:	e7dc      	b.n	b16c <FRC_IRQHandler+0x40c>
    b1b2:	f640 4101 	movw	r1, #3073	; 0xc01
    b1b6:	f8c9 1078 	str.w	r1, [r9, #120]	; 0x78
    b1ba:	e7d7      	b.n	b16c <FRC_IRQHandler+0x40c>
    b1bc:	44004000 	.word	0x44004000
    b1c0:	a8020000 	.word	0xa8020000
    b1c4:	a8004000 	.word	0xa8004000
    b1c8:	20000e19 	.word	0x20000e19
    b1cc:	20000e1a 	.word	0x20000e1a
    b1d0:	20000e36 	.word	0x20000e36
    b1d4:	b0001000 	.word	0xb0001000
    b1d8:	a801c000 	.word	0xa801c000
    b1dc:	01010000 	.word	0x01010000
    b1e0:	20000e10 	.word	0x20000e10
    b1e4:	00018d08 	.word	0x00018d08
    b1e8:	20000d9c 	.word	0x20000d9c
    b1ec:	a801e000 	.word	0xa801e000
    b1f0:	20000e34 	.word	0x20000e34
    b1f4:	a801d000 	.word	0xa801d000
    b1f8:	a8022000 	.word	0xa8022000
    b1fc:	2003      	movs	r0, #3
    b1fe:	f7fe f9e5 	bl	95cc <RAILINT_4f93cdd7aecf168775f2a95c9141aec8>
    b202:	f8d9 2014 	ldr.w	r2, [r9, #20]
    b206:	f44f 6000 	mov.w	r0, #2048	; 0x800
    b20a:	f012 0f06 	tst.w	r2, #6
    b20e:	bf02      	ittt	eq
    b210:	f641 721f 	movweq	r2, #7967	; 0x1f1f
    b214:	4994      	ldreq	r1, [pc, #592]	; (b468 <FRC_IRQHandler+0x708>)
    b216:	674a      	streq	r2, [r1, #116]	; 0x74
    b218:	4a93      	ldr	r2, [pc, #588]	; (b468 <FRC_IRQHandler+0x708>)
    b21a:	4994      	ldr	r1, [pc, #592]	; (b46c <FRC_IRQHandler+0x70c>)
    b21c:	6650      	str	r0, [r2, #100]	; 0x64
    b21e:	694a      	ldr	r2, [r1, #20]
    b220:	4893      	ldr	r0, [pc, #588]	; (b470 <FRC_IRQHandler+0x710>)
    b222:	f012 0206 	ands.w	r2, r2, #6
    b226:	bf08      	it	eq
    b228:	678a      	streq	r2, [r1, #120]	; 0x78
    b22a:	8ac2      	ldrh	r2, [r0, #22]
    b22c:	f412 6100 	ands.w	r1, r2, #2048	; 0x800
    b230:	d062      	beq.n	b2f8 <FRC_IRQHandler+0x598>
    b232:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
    b236:	82c2      	strh	r2, [r0, #22]
    b238:	4a8e      	ldr	r2, [pc, #568]	; (b474 <FRC_IRQHandler+0x714>)
    b23a:	f892 9000 	ldrb.w	r9, [r2]
    b23e:	f1b9 0f00 	cmp.w	r9, #0
    b242:	d15c      	bne.n	b2fe <FRC_IRQHandler+0x59e>
    b244:	f7fe fa00 	bl	9648 <RAILINT_91acd8a0b3b22b251b18aeabdb4a57f7>
    b248:	f7ff fc40 	bl	aacc <RAILINT_cda8bf84b67189e08b64149f714e0ad8>
    b24c:	464a      	mov	r2, r9
    b24e:	2120      	movs	r1, #32
    b250:	ea4b 0b02 	orr.w	fp, fp, r2
    b254:	430d      	orrs	r5, r1
    b256:	00b0      	lsls	r0, r6, #2
    b258:	d509      	bpl.n	b26e <FRC_IRQHandler+0x50e>
    b25a:	202b      	movs	r0, #43	; 0x2b
    b25c:	f7fe f92e 	bl	94bc <PTI_AuxdataOutput>
    b260:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
    b264:	4a80      	ldr	r2, [pc, #512]	; (b468 <FRC_IRQHandler+0x708>)
    b266:	f045 0508 	orr.w	r5, r5, #8
    b26a:	6711      	str	r1, [r2, #112]	; 0x70
    b26c:	6651      	str	r1, [r2, #100]	; 0x64
    b26e:	f016 6f30 	tst.w	r6, #184549376	; 0xb000000
    b272:	d105      	bne.n	b280 <FRC_IRQHandler+0x520>
    b274:	04f1      	lsls	r1, r6, #19
    b276:	d560      	bpl.n	b33a <FRC_IRQHandler+0x5da>
    b278:	f1ba 0f00 	cmp.w	sl, #0
    b27c:	f000 8097 	beq.w	b3ae <FRC_IRQHandler+0x64e>
    b280:	0132      	lsls	r2, r6, #4
    b282:	d53f      	bpl.n	b304 <FRC_IRQHandler+0x5a4>
    b284:	2029      	movs	r0, #41	; 0x29
    b286:	f7fe f919 	bl	94bc <PTI_AuxdataOutput>
    b28a:	4a78      	ldr	r2, [pc, #480]	; (b46c <FRC_IRQHandler+0x70c>)
    b28c:	f045 0904 	orr.w	r9, r5, #4
    b290:	6c52      	ldr	r2, [r2, #68]	; 0x44
    b292:	b112      	cbz	r2, b29a <FRC_IRQHandler+0x53a>
    b294:	2110      	movs	r1, #16
    b296:	4a78      	ldr	r2, [pc, #480]	; (b478 <FRC_IRQHandler+0x718>)
    b298:	6091      	str	r1, [r2, #8]
    b29a:	f7ff fbc5 	bl	aa28 <RAILINT_436bf61abb715dbe168d75ac0bccdfdf>
    b29e:	b188      	cbz	r0, b2c4 <FRC_IRQHandler+0x564>
    b2a0:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
    b2a4:	4875      	ldr	r0, [pc, #468]	; (b47c <FRC_IRQHandler+0x71c>)
    b2a6:	4970      	ldr	r1, [pc, #448]	; (b468 <FRC_IRQHandler+0x708>)
    b2a8:	664a      	str	r2, [r1, #100]	; 0x64
    b2aa:	6702      	str	r2, [r0, #112]	; 0x70
    b2ac:	f500 5040 	add.w	r0, r0, #12288	; 0x3000
    b2b0:	68c0      	ldr	r0, [r0, #12]
    b2b2:	0443      	lsls	r3, r0, #17
    b2b4:	d506      	bpl.n	b2c4 <FRC_IRQHandler+0x564>
    b2b6:	670a      	str	r2, [r1, #112]	; 0x70
    b2b8:	202d      	movs	r0, #45	; 0x2d
    b2ba:	664a      	str	r2, [r1, #100]	; 0x64
    b2bc:	f045 090c 	orr.w	r9, r5, #12
    b2c0:	f7fe f8fc 	bl	94bc <PTI_AuxdataOutput>
    b2c4:	f016 7a00 	ands.w	sl, r6, #33554432	; 0x2000000
    b2c8:	d01e      	beq.n	b308 <FRC_IRQHandler+0x5a8>
    b2ca:	2004      	movs	r0, #4
    b2cc:	f7fe f97e 	bl	95cc <RAILINT_4f93cdd7aecf168775f2a95c9141aec8>
    b2d0:	2027      	movs	r0, #39	; 0x27
    b2d2:	f7fe f8f3 	bl	94bc <PTI_AuxdataOutput>
    b2d6:	f7ff fbf9 	bl	aacc <RAILINT_cda8bf84b67189e08b64149f714e0ad8>
    b2da:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
    b2de:	4a62      	ldr	r2, [pc, #392]	; (b468 <FRC_IRQHandler+0x708>)
    b2e0:	6651      	str	r1, [r2, #100]	; 0x64
    b2e2:	4a67      	ldr	r2, [pc, #412]	; (b480 <FRC_IRQHandler+0x720>)
    b2e4:	f049 0902 	orr.w	r9, r9, #2
    b2e8:	f8d2 2ecc 	ldr.w	r2, [r2, #3788]	; 0xecc
    b2ec:	0651      	lsls	r1, r2, #25
    b2ee:	bf5e      	ittt	pl
    b2f0:	2102      	movpl	r1, #2
    b2f2:	4a61      	ldrpl	r2, [pc, #388]	; (b478 <FRC_IRQHandler+0x718>)
    b2f4:	6091      	strpl	r1, [r2, #8]
    b2f6:	e01c      	b.n	b332 <FRC_IRQHandler+0x5d2>
    b2f8:	f44f 5200 	mov.w	r2, #8192	; 0x2000
    b2fc:	e7a8      	b.n	b250 <FRC_IRQHandler+0x4f0>
    b2fe:	f44f 4200 	mov.w	r2, #32768	; 0x8000
    b302:	e733      	b.n	b16c <FRC_IRQHandler+0x40c>
    b304:	46a9      	mov	r9, r5
    b306:	e7dd      	b.n	b2c4 <FRC_IRQHandler+0x564>
    b308:	f016 7f80 	tst.w	r6, #16777216	; 0x1000000
    b30c:	4d57      	ldr	r5, [pc, #348]	; (b46c <FRC_IRQHandler+0x70c>)
    b30e:	d03b      	beq.n	b388 <FRC_IRQHandler+0x628>
    b310:	2004      	movs	r0, #4
    b312:	f7fe f95b 	bl	95cc <RAILINT_4f93cdd7aecf168775f2a95c9141aec8>
    b316:	2028      	movs	r0, #40	; 0x28
    b318:	f7fe f8d0 	bl	94bc <PTI_AuxdataOutput>
    b31c:	6faa      	ldr	r2, [r5, #120]	; 0x78
    b31e:	bb82      	cbnz	r2, b382 <FRC_IRQHandler+0x622>
    b320:	f7ff fbd4 	bl	aacc <RAILINT_cda8bf84b67189e08b64149f714e0ad8>
    b324:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
    b328:	4a4f      	ldr	r2, [pc, #316]	; (b468 <FRC_IRQHandler+0x708>)
    b32a:	f049 0901 	orr.w	r9, r9, #1
    b32e:	6711      	str	r1, [r2, #112]	; 0x70
    b330:	6651      	str	r1, [r2, #100]	; 0x64
    b332:	2100      	movs	r1, #0
    b334:	464d      	mov	r5, r9
    b336:	4a4d      	ldr	r2, [pc, #308]	; (b46c <FRC_IRQHandler+0x70c>)
    b338:	6591      	str	r1, [r2, #88]	; 0x58
    b33a:	0573      	lsls	r3, r6, #21
    b33c:	d508      	bpl.n	b350 <FRC_IRQHandler+0x5f0>
    b33e:	4951      	ldr	r1, [pc, #324]	; (b484 <FRC_IRQHandler+0x724>)
    b340:	788a      	ldrb	r2, [r1, #2]
    b342:	2a00      	cmp	r2, #0
    b344:	f000 808a 	beq.w	b45c <FRC_IRQHandler+0x6fc>
    b348:	3a01      	subs	r2, #1
    b34a:	708a      	strb	r2, [r1, #2]
    b34c:	2200      	movs	r2, #0
    b34e:	4317      	orrs	r7, r2
    b350:	463a      	mov	r2, r7
    b352:	4658      	mov	r0, fp
    b354:	4629      	mov	r1, r5
    b356:	f7ff f97d 	bl	a654 <RAILINT_978af8e4393fb6ecb4e92f5256373899>
    b35a:	9b01      	ldr	r3, [sp, #4]
    b35c:	b10b      	cbz	r3, b362 <FRC_IRQHandler+0x602>
    b35e:	f7fd fc89 	bl	8c74 <RAILINT_31258cb71f8a6b9069347d576bc679f0>
    b362:	f418 2f00 	tst.w	r8, #524288	; 0x80000
    b366:	bf18      	it	ne
    b368:	f44f 2200 	movne.w	r2, #524288	; 0x80000
    b36c:	4b46      	ldr	r3, [pc, #280]	; (b488 <FRC_IRQHandler+0x728>)
    b36e:	f004 3404 	and.w	r4, r4, #67372036	; 0x4040404
    b372:	f8c3 40e0 	str.w	r4, [r3, #224]	; 0xe0
    b376:	bf1c      	itt	ne
    b378:	4b3f      	ldrne	r3, [pc, #252]	; (b478 <FRC_IRQHandler+0x718>)
    b37a:	61da      	strne	r2, [r3, #28]
    b37c:	b005      	add	sp, #20
    b37e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b382:	f8c5 a078 	str.w	sl, [r5, #120]	; 0x78
    b386:	e7cd      	b.n	b324 <FRC_IRQHandler+0x5c4>
    b388:	04f0      	lsls	r0, r6, #19
    b38a:	d5d2      	bpl.n	b332 <FRC_IRQHandler+0x5d2>
    b38c:	2004      	movs	r0, #4
    b38e:	f7fe f91d 	bl	95cc <RAILINT_4f93cdd7aecf168775f2a95c9141aec8>
    b392:	4a3e      	ldr	r2, [pc, #248]	; (b48c <FRC_IRQHandler+0x72c>)
    b394:	676a      	str	r2, [r5, #116]	; 0x74
    b396:	f7fe f957 	bl	9648 <RAILINT_91acd8a0b3b22b251b18aeabdb4a57f7>
    b39a:	6e6a      	ldr	r2, [r5, #100]	; 0x64
    b39c:	f012 7f40 	tst.w	r2, #50331648	; 0x3000000
    b3a0:	d1c7      	bne.n	b332 <FRC_IRQHandler+0x5d2>
    b3a2:	202a      	movs	r0, #42	; 0x2a
    b3a4:	f7fe f88a 	bl	94bc <PTI_AuxdataOutput>
    b3a8:	f7ff fb90 	bl	aacc <RAILINT_cda8bf84b67189e08b64149f714e0ad8>
    b3ac:	e799      	b.n	b2e2 <FRC_IRQHandler+0x582>
    b3ae:	4a38      	ldr	r2, [pc, #224]	; (b490 <FRC_IRQHandler+0x730>)
    b3b0:	6812      	ldr	r2, [r2, #0]
    b3b2:	3201      	adds	r2, #1
    b3b4:	d002      	beq.n	b3bc <FRC_IRQHandler+0x65c>
    b3b6:	f04b 0b01 	orr.w	fp, fp, #1
    b3ba:	e7be      	b.n	b33a <FRC_IRQHandler+0x5da>
    b3bc:	4931      	ldr	r1, [pc, #196]	; (b484 <FRC_IRQHandler+0x724>)
    b3be:	790a      	ldrb	r2, [r1, #4]
    b3c0:	b14a      	cbz	r2, b3d6 <FRC_IRQHandler+0x676>
    b3c2:	3a01      	subs	r2, #1
    b3c4:	b2d2      	uxtb	r2, r2
    b3c6:	710a      	strb	r2, [r1, #4]
    b3c8:	b912      	cbnz	r2, b3d0 <FRC_IRQHandler+0x670>
    b3ca:	4a2c      	ldr	r2, [pc, #176]	; (b47c <FRC_IRQHandler+0x71c>)
    b3cc:	4931      	ldr	r1, [pc, #196]	; (b494 <FRC_IRQHandler+0x734>)
    b3ce:	6751      	str	r1, [r2, #116]	; 0x74
    b3d0:	ea4b 0b0a 	orr.w	fp, fp, sl
    b3d4:	e7b1      	b.n	b33a <FRC_IRQHandler+0x5da>
    b3d6:	2004      	movs	r0, #4
    b3d8:	f7fe f8f8 	bl	95cc <RAILINT_4f93cdd7aecf168775f2a95c9141aec8>
    b3dc:	2003      	movs	r0, #3
    b3de:	f7fe f8f5 	bl	95cc <RAILINT_4f93cdd7aecf168775f2a95c9141aec8>
    b3e2:	4a22      	ldr	r2, [pc, #136]	; (b46c <FRC_IRQHandler+0x70c>)
    b3e4:	4929      	ldr	r1, [pc, #164]	; (b48c <FRC_IRQHandler+0x72c>)
    b3e6:	6751      	str	r1, [r2, #116]	; 0x74
    b3e8:	f7fa fe50 	bl	608c <CORE_EnterCritical>
    b3ec:	4681      	mov	r9, r0
    b3ee:	f10d 000f 	add.w	r0, sp, #15
    b3f2:	f7fe fc75 	bl	9ce0 <RAILINT_12973c63ce9f157526b71bd49da4eecd>
    b3f6:	4a28      	ldr	r2, [pc, #160]	; (b498 <FRC_IRQHandler+0x738>)
    b3f8:	4682      	mov	sl, r0
    b3fa:	7812      	ldrb	r2, [r2, #0]
    b3fc:	b10a      	cbz	r2, b402 <FRC_IRQHandler+0x6a2>
    b3fe:	f7ff f8bd 	bl	a57c <RAILINT_ef38b49f1deb3f763f4f0e2ae372d117>
    b402:	f1ba 0f03 	cmp.w	sl, #3
    b406:	d10e      	bne.n	b426 <FRC_IRQHandler+0x6c6>
    b408:	f8df a098 	ldr.w	sl, [pc, #152]	; b4a4 <FRC_IRQHandler+0x744>
    b40c:	2000      	movs	r0, #0
    b40e:	f7fe fc67 	bl	9ce0 <RAILINT_12973c63ce9f157526b71bd49da4eecd>
    b412:	2803      	cmp	r0, #3
    b414:	d107      	bne.n	b426 <FRC_IRQHandler+0x6c6>
    b416:	f8da 2074 	ldr.w	r2, [sl, #116]	; 0x74
    b41a:	03d2      	lsls	r2, r2, #15
    b41c:	d4f6      	bmi.n	b40c <FRC_IRQHandler+0x6ac>
    b41e:	f8da 205c 	ldr.w	r2, [sl, #92]	; 0x5c
    b422:	2a0c      	cmp	r2, #12
    b424:	d9f2      	bls.n	b40c <FRC_IRQHandler+0x6ac>
    b426:	f89d 200f 	ldrb.w	r2, [sp, #15]
    b42a:	2a03      	cmp	r2, #3
    b42c:	d108      	bne.n	b440 <FRC_IRQHandler+0x6e0>
    b42e:	2101      	movs	r1, #1
    b430:	4a1a      	ldr	r2, [pc, #104]	; (b49c <FRC_IRQHandler+0x73c>)
    b432:	4648      	mov	r0, r9
    b434:	7011      	strb	r1, [r2, #0]
    b436:	f04f 0a00 	mov.w	sl, #0
    b43a:	f7fa fe2b 	bl	6094 <CORE_ExitCritical>
    b43e:	e7c7      	b.n	b3d0 <FRC_IRQHandler+0x670>
    b440:	4a17      	ldr	r2, [pc, #92]	; (b4a0 <FRC_IRQHandler+0x740>)
    b442:	f8d2 20e0 	ldr.w	r2, [r2, #224]	; 0xe0
    b446:	f412 2fa0 	tst.w	r2, #327680	; 0x50000
    b44a:	d1f0      	bne.n	b42e <FRC_IRQHandler+0x6ce>
    b44c:	f7ff f888 	bl	a560 <RAILINT_6d8967e14ffa5fbb64f5f8549fa17b5c>
    b450:	4648      	mov	r0, r9
    b452:	f7fa fe1f 	bl	6094 <CORE_ExitCritical>
    b456:	f44f 4a80 	mov.w	sl, #16384	; 0x4000
    b45a:	e7b9      	b.n	b3d0 <FRC_IRQHandler+0x670>
    b45c:	2002      	movs	r0, #2
    b45e:	f7fe f8b5 	bl	95cc <RAILINT_4f93cdd7aecf168775f2a95c9141aec8>
    b462:	2201      	movs	r2, #1
    b464:	e773      	b.n	b34e <FRC_IRQHandler+0x5ee>
    b466:	bf00      	nop
    b468:	a801e000 	.word	0xa801e000
    b46c:	a801c000 	.word	0xa801c000
    b470:	20000e1c 	.word	0x20000e1c
    b474:	20000e34 	.word	0x20000e34
    b478:	a8022000 	.word	0xa8022000
    b47c:	a801d000 	.word	0xa801d000
    b480:	b0001000 	.word	0xb0001000
    b484:	20000d9c 	.word	0x20000d9c
    b488:	44006000 	.word	0x44006000
    b48c:	01010000 	.word	0x01010000
    b490:	200001dc 	.word	0x200001dc
    b494:	0d010000 	.word	0x0d010000
    b498:	20000e35 	.word	0x20000e35
    b49c:	20000e1a 	.word	0x20000e1a
    b4a0:	44004000 	.word	0x44004000
    b4a4:	a8020000 	.word	0xa8020000

0000b4a8 <FRC_PRI_IRQHandler>:
    b4a8:	f7ff bc5a 	b.w	ad60 <FRC_IRQHandler>

0000b4ac <BUFC_IRQHandler>:
    b4ac:	f7ff bc58 	b.w	ad60 <FRC_IRQHandler>

0000b4b0 <PROTIMER_IRQHandler>:
    b4b0:	f7ff bc56 	b.w	ad60 <FRC_IRQHandler>

0000b4b4 <RAC_SEQ_IRQHandler>:
    b4b4:	f7ff bc54 	b.w	ad60 <FRC_IRQHandler>

0000b4b8 <RAILCb_RadioStateChanged>:
    b4b8:	2201      	movs	r2, #1
    b4ba:	4b02      	ldr	r3, [pc, #8]	; (b4c4 <RAILCb_RadioStateChanged+0xc>)
    b4bc:	621a      	str	r2, [r3, #32]
    b4be:	61da      	str	r2, [r3, #28]
    b4c0:	4770      	bx	lr
    b4c2:	bf00      	nop
    b4c4:	a8022000 	.word	0xa8022000

0000b4c8 <RAC_RSM_IRQHandler>:
    b4c8:	4b0c      	ldr	r3, [pc, #48]	; (b4fc <RAC_RSM_IRQHandler+0x34>)
    b4ca:	b510      	push	{r4, lr}
    b4cc:	69dc      	ldr	r4, [r3, #28]
    b4ce:	6a1a      	ldr	r2, [r3, #32]
    b4d0:	4014      	ands	r4, r2
    b4d2:	4a0b      	ldr	r2, [pc, #44]	; (b500 <RAC_RSM_IRQHandler+0x38>)
    b4d4:	b2a1      	uxth	r1, r4
    b4d6:	61d1      	str	r1, [r2, #28]
    b4d8:	07e2      	lsls	r2, r4, #31
    b4da:	d504      	bpl.n	b4e6 <RAC_RSM_IRQHandler+0x1e>
    b4dc:	68d8      	ldr	r0, [r3, #12]
    b4de:	f3c0 6003 	ubfx	r0, r0, #24, #4
    b4e2:	f7ff ffe9 	bl	b4b8 <RAILCb_RadioStateChanged>
    b4e6:	0763      	lsls	r3, r4, #29
    b4e8:	d506      	bpl.n	b4f8 <RAC_RSM_IRQHandler+0x30>
    b4ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    b4ee:	2204      	movs	r2, #4
    b4f0:	2000      	movs	r0, #0
    b4f2:	2100      	movs	r1, #0
    b4f4:	f7ff b8ae 	b.w	a654 <RAILINT_978af8e4393fb6ecb4e92f5256373899>
    b4f8:	bd10      	pop	{r4, pc}
    b4fa:	bf00      	nop
    b4fc:	a8020000 	.word	0xa8020000
    b500:	a8022000 	.word	0xa8022000

0000b504 <MODEM_IRQHandler>:
    b504:	f7ff bc2c 	b.w	ad60 <FRC_IRQHandler>

0000b508 <AGC_IRQHandler>:
    b508:	4a0c      	ldr	r2, [pc, #48]	; (b53c <AGC_IRQHandler+0x34>)
    b50a:	b508      	push	{r3, lr}
    b50c:	6b93      	ldr	r3, [r2, #56]	; 0x38
    b50e:	6c52      	ldr	r2, [r2, #68]	; 0x44
    b510:	4013      	ands	r3, r2
    b512:	4a0b      	ldr	r2, [pc, #44]	; (b540 <AGC_IRQHandler+0x38>)
    b514:	6393      	str	r3, [r2, #56]	; 0x38
    b516:	07db      	lsls	r3, r3, #31
    b518:	d50f      	bpl.n	b53a <AGC_IRQHandler+0x32>
    b51a:	4b0a      	ldr	r3, [pc, #40]	; (b544 <AGC_IRQHandler+0x3c>)
    b51c:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
    b520:	7818      	ldrb	r0, [r3, #0]
    b522:	2112      	movs	r1, #18
    b524:	f000 0001 	and.w	r0, r0, #1
    b528:	f7fb fdda 	bl	70e0 <RAILINT_205167ae842e22724c3f35c6430eeddb>
    b52c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    b530:	2200      	movs	r2, #0
    b532:	2001      	movs	r0, #1
    b534:	2100      	movs	r1, #0
    b536:	f7ff b88d 	b.w	a654 <RAILINT_978af8e4393fb6ecb4e92f5256373899>
    b53a:	bd08      	pop	{r3, pc}
    b53c:	a800c000 	.word	0xa800c000
    b540:	a800e000 	.word	0xa800e000
    b544:	20000e10 	.word	0x20000e10

0000b548 <SYNTH_IRQHandler>:
    b548:	4b04      	ldr	r3, [pc, #16]	; (b55c <SYNTH_IRQHandler+0x14>)
    b54a:	6f9a      	ldr	r2, [r3, #120]	; 0x78
    b54c:	f8d3 1084 	ldr.w	r1, [r3, #132]	; 0x84
    b550:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
    b554:	400a      	ands	r2, r1
    b556:	679a      	str	r2, [r3, #120]	; 0x78
    b558:	4770      	bx	lr
    b55a:	bf00      	nop
    b55c:	a8018000 	.word	0xa8018000

0000b560 <RAILINT_fc431c63280fcec9c8f1f2616df249e6>:
    b560:	b570      	push	{r4, r5, r6, lr}
    b562:	4614      	mov	r4, r2
    b564:	460d      	mov	r5, r1
    b566:	f7fa fd91 	bl	608c <CORE_EnterCritical>
    b56a:	4b06      	ldr	r3, [pc, #24]	; (b584 <RAILINT_fc431c63280fcec9c8f1f2616df249e6+0x24>)
    b56c:	f8d3 6e9c 	ldr.w	r6, [r3, #3740]	; 0xe9c
    b570:	4074      	eors	r4, r6
    b572:	402c      	ands	r4, r5
    b574:	4074      	eors	r4, r6
    b576:	f8c3 4e9c 	str.w	r4, [r3, #3740]	; 0xe9c
    b57a:	f7fa fd8b 	bl	6094 <CORE_ExitCritical>
    b57e:	ea06 0005 	and.w	r0, r6, r5
    b582:	bd70      	pop	{r4, r5, r6, pc}
    b584:	b0001000 	.word	0xb0001000

0000b588 <RAILINT_10ac1cf98a783c6bdb18657a1d32c8ed>:
    b588:	4b04      	ldr	r3, [pc, #16]	; (b59c <RAILINT_10ac1cf98a783c6bdb18657a1d32c8ed+0x14>)
    b58a:	f8d3 3e9c 	ldr.w	r3, [r3, #3740]	; 0xe9c
    b58e:	ea31 0303 	bics.w	r3, r1, r3
    b592:	bf0c      	ite	eq
    b594:	2001      	moveq	r0, #1
    b596:	2000      	movne	r0, #0
    b598:	4770      	bx	lr
    b59a:	bf00      	nop
    b59c:	b0001000 	.word	0xb0001000

0000b5a0 <RAILINT_97099dc7ca7699c8d5ef5cc5413c4a7a>:
    b5a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    b5a4:	2901      	cmp	r1, #1
    b5a6:	4617      	mov	r7, r2
    b5a8:	461e      	mov	r6, r3
    b5aa:	f89d 4018 	ldrb.w	r4, [sp, #24]
    b5ae:	f89d 501c 	ldrb.w	r5, [sp, #28]
    b5b2:	f8dd 8020 	ldr.w	r8, [sp, #32]
    b5b6:	d82c      	bhi.n	b612 <RAILINT_97099dc7ca7699c8d5ef5cc5413c4a7a+0x72>
    b5b8:	2a01      	cmp	r2, #1
    b5ba:	d82a      	bhi.n	b612 <RAILINT_97099dc7ca7699c8d5ef5cc5413c4a7a+0x72>
    b5bc:	42ac      	cmp	r4, r5
    b5be:	d228      	bcs.n	b612 <RAILINT_97099dc7ca7699c8d5ef5cc5413c4a7a+0x72>
    b5c0:	2d08      	cmp	r5, #8
    b5c2:	d826      	bhi.n	b612 <RAILINT_97099dc7ca7699c8d5ef5cc5413c4a7a+0x72>
    b5c4:	2b03      	cmp	r3, #3
    b5c6:	d824      	bhi.n	b612 <RAILINT_97099dc7ca7699c8d5ef5cc5413c4a7a+0x72>
    b5c8:	f1b8 0f00 	cmp.w	r8, #0
    b5cc:	d021      	beq.n	b612 <RAILINT_97099dc7ca7699c8d5ef5cc5413c4a7a+0x72>
    b5ce:	460a      	mov	r2, r1
    b5d0:	2100      	movs	r1, #0
    b5d2:	f7fc fea9 	bl	8328 <RAILINT_e02d00033aeee031972ce3294c5c5c74>
    b5d6:	21ff      	movs	r1, #255	; 0xff
    b5d8:	00f6      	lsls	r6, r6, #3
    b5da:	40b1      	lsls	r1, r6
    b5dc:	43c9      	mvns	r1, r1
    b5de:	4620      	mov	r0, r4
    b5e0:	f8df c034 	ldr.w	ip, [pc, #52]	; b618 <RAILINT_97099dc7ca7699c8d5ef5cc5413c4a7a+0x78>
    b5e4:	f108 38ff 	add.w	r8, r8, #4294967295
    b5e8:	00ff      	lsls	r7, r7, #3
    b5ea:	183a      	adds	r2, r7, r0
    b5ec:	eb0c 0282 	add.w	r2, ip, r2, lsl #2
    b5f0:	f8d2 30d4 	ldr.w	r3, [r2, #212]	; 0xd4
    b5f4:	3001      	adds	r0, #1
    b5f6:	ea01 0403 	and.w	r4, r1, r3
    b5fa:	f818 3f01 	ldrb.w	r3, [r8, #1]!
    b5fe:	40b3      	lsls	r3, r6
    b600:	4323      	orrs	r3, r4
    b602:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
    b606:	b2c3      	uxtb	r3, r0
    b608:	429d      	cmp	r5, r3
    b60a:	d8ee      	bhi.n	b5ea <RAILINT_97099dc7ca7699c8d5ef5cc5413c4a7a+0x4a>
    b60c:	2000      	movs	r0, #0
    b60e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    b612:	2001      	movs	r0, #1
    b614:	e7fb      	b.n	b60e <RAILINT_97099dc7ca7699c8d5ef5cc5413c4a7a+0x6e>
    b616:	bf00      	nop
    b618:	b0001e00 	.word	0xb0001e00

0000b61c <RAILINT_dc675e4729ddc8fc4759ebbb1d4c3bce>:
    b61c:	4770      	bx	lr

0000b61e <RAILINT_b04ac2e87c7e86c14dc53c58ce128069>:
    b61e:	2200      	movs	r2, #0
    b620:	428a      	cmp	r2, r1
    b622:	d102      	bne.n	b62a <RAILINT_b04ac2e87c7e86c14dc53c58ce128069+0xc>
    b624:	f04f 30ff 	mov.w	r0, #4294967295
    b628:	4770      	bx	lr
    b62a:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
    b62e:	fa93 f3a3 	rbit	r3, r3
    b632:	fab3 f383 	clz	r3, r3
    b636:	2b20      	cmp	r3, #32
    b638:	d002      	beq.n	b640 <RAILINT_b04ac2e87c7e86c14dc53c58ce128069+0x22>
    b63a:	eb03 1042 	add.w	r0, r3, r2, lsl #5
    b63e:	4770      	bx	lr
    b640:	3201      	adds	r2, #1
    b642:	e7ed      	b.n	b620 <RAILINT_b04ac2e87c7e86c14dc53c58ce128069+0x2>

0000b644 <RAIL_ConvertDbmToRaw>:
    b644:	f647 73ff 	movw	r3, #32767	; 0x7fff
    b648:	429a      	cmp	r2, r3
    b64a:	b5f0      	push	{r4, r5, r6, r7, lr}
    b64c:	d05e      	beq.n	b70c <RAIL_ConvertDbmToRaw+0xc8>
    b64e:	2903      	cmp	r1, #3
    b650:	d85e      	bhi.n	b710 <RAIL_ConvertDbmToRaw+0xcc>
    b652:	4e30      	ldr	r6, [pc, #192]	; (b714 <RAIL_ConvertDbmToRaw+0xd0>)
    b654:	00cf      	lsls	r7, r1, #3
    b656:	f816 3031 	ldrb.w	r3, [r6, r1, lsl #3]
    b65a:	eb06 00c1 	add.w	r0, r6, r1, lsl #3
    b65e:	2b01      	cmp	r3, #1
    b660:	7885      	ldrb	r5, [r0, #2]
    b662:	d10d      	bne.n	b680 <RAIL_ConvertDbmToRaw+0x3c>
    b664:	78c3      	ldrb	r3, [r0, #3]
    b666:	1b5b      	subs	r3, r3, r5
    b668:	b123      	cbz	r3, b674 <RAIL_ConvertDbmToRaw+0x30>
    b66a:	6841      	ldr	r1, [r0, #4]
    b66c:	f931 1013 	ldrsh.w	r1, [r1, r3, lsl #1]
    b670:	4291      	cmp	r1, r2
    b672:	dc02      	bgt.n	b67a <RAIL_ConvertDbmToRaw+0x36>
    b674:	18e8      	adds	r0, r5, r3
    b676:	b2c0      	uxtb	r0, r0
    b678:	bdf0      	pop	{r4, r5, r6, r7, pc}
    b67a:	3b01      	subs	r3, #1
    b67c:	b21b      	sxth	r3, r3
    b67e:	e7f3      	b.n	b668 <RAIL_ConvertDbmToRaw+0x24>
    b680:	6840      	ldr	r0, [r0, #4]
    b682:	2800      	cmp	r0, #0
    b684:	d0f8      	beq.n	b678 <RAIL_ConvertDbmToRaw+0x34>
    b686:	f9b0 3000 	ldrsh.w	r3, [r0]
    b68a:	4293      	cmp	r3, r2
    b68c:	db04      	blt.n	b698 <RAIL_ConvertDbmToRaw+0x54>
    b68e:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
    b692:	4293      	cmp	r3, r2
    b694:	bfb8      	it	lt
    b696:	4613      	movlt	r3, r2
    b698:	8882      	ldrh	r2, [r0, #4]
    b69a:	443e      	add	r6, r7
    b69c:	2aff      	cmp	r2, #255	; 0xff
    b69e:	bf19      	ittee	ne
    b6a0:	24c8      	movne	r4, #200	; 0xc8
    b6a2:	2128      	movne	r1, #40	; 0x28
    b6a4:	f9b0 4006 	ldrsheq.w	r4, [r0, #6]
    b6a8:	f9b0 1008 	ldrsheq.w	r1, [r0, #8]
    b6ac:	eba4 0403 	sub.w	r4, r4, r3
    b6b0:	bf0c      	ite	eq
    b6b2:	2201      	moveq	r2, #1
    b6b4:	2200      	movne	r2, #0
    b6b6:	fb94 f4f1 	sdiv	r4, r4, r1
    b6ba:	7876      	ldrb	r6, [r6, #1]
    b6bc:	4422      	add	r2, r4
    b6be:	b214      	sxth	r4, r2
    b6c0:	1e72      	subs	r2, r6, #1
    b6c2:	42a2      	cmp	r2, r4
    b6c4:	bfa8      	it	ge
    b6c6:	4622      	movge	r2, r4
    b6c8:	f44f 777a 	mov.w	r7, #1000	; 0x3e8
    b6cc:	eb00 04c2 	add.w	r4, r0, r2, lsl #3
    b6d0:	88e1      	ldrh	r1, [r4, #6]
    b6d2:	68a4      	ldr	r4, [r4, #8]
    b6d4:	3201      	adds	r2, #1
    b6d6:	fb13 4101 	smlabb	r1, r3, r1, r4
    b6da:	b212      	sxth	r2, r2
    b6dc:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
    b6e0:	f501 71fa 	add.w	r1, r1, #500	; 0x1f4
    b6e4:	42b2      	cmp	r2, r6
    b6e6:	fbb1 f1f7 	udiv	r1, r1, r7
    b6ea:	da04      	bge.n	b6f6 <RAIL_ConvertDbmToRaw+0xb2>
    b6ec:	eb00 04c2 	add.w	r4, r0, r2, lsl #3
    b6f0:	88a4      	ldrh	r4, [r4, #4]
    b6f2:	428c      	cmp	r4, r1
    b6f4:	d2ea      	bcs.n	b6cc <RAIL_ConvertDbmToRaw+0x88>
    b6f6:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
    b6fa:	f832 0c04 	ldrh.w	r0, [r2, #-4]
    b6fe:	4288      	cmp	r0, r1
    b700:	bf28      	it	cs
    b702:	4608      	movcs	r0, r1
    b704:	42a8      	cmp	r0, r5
    b706:	bf38      	it	cc
    b708:	4628      	movcc	r0, r5
    b70a:	e7b4      	b.n	b676 <RAIL_ConvertDbmToRaw+0x32>
    b70c:	20ff      	movs	r0, #255	; 0xff
    b70e:	e7b3      	b.n	b678 <RAIL_ConvertDbmToRaw+0x34>
    b710:	2000      	movs	r0, #0
    b712:	e7b1      	b.n	b678 <RAIL_ConvertDbmToRaw+0x34>
    b714:	20000e3c 	.word	0x20000e3c

0000b718 <RAILINT_78eaa84173e85419c123802d17d70cee>:
    b718:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    b71a:	460c      	mov	r4, r1
    b71c:	7809      	ldrb	r1, [r1, #0]
    b71e:	4606      	mov	r6, r0
    b720:	b951      	cbnz	r1, b738 <RAILINT_78eaa84173e85419c123802d17d70cee+0x20>
    b722:	9101      	str	r1, [sp, #4]
    b724:	f7fc fb50 	bl	7dc8 <RAILINT_cb27dba168c71b340f37df80e4ee5b60>
    b728:	4630      	mov	r0, r6
    b72a:	9901      	ldr	r1, [sp, #4]
    b72c:	f7fc fb9a 	bl	7e64 <RAILINT_5cc15e08889684ec1ad3d74b53d1f5dc>
    b730:	4630      	mov	r0, r6
    b732:	9901      	ldr	r1, [sp, #4]
    b734:	f7fc fb9f 	bl	7e76 <RAILINT_bf9c5ad5b66e6c5ba2ba7ecd77ccb2e2>
    b738:	7823      	ldrb	r3, [r4, #0]
    b73a:	bb43      	cbnz	r3, b78e <RAILINT_78eaa84173e85419c123802d17d70cee+0x76>
    b73c:	7922      	ldrb	r2, [r4, #4]
    b73e:	f88d 200c 	strb.w	r2, [sp, #12]
    b742:	b333      	cbz	r3, b792 <RAILINT_78eaa84173e85419c123802d17d70cee+0x7a>
    b744:	7923      	ldrb	r3, [r4, #4]
    b746:	4630      	mov	r0, r6
    b748:	a903      	add	r1, sp, #12
    b74a:	f88d 300d 	strb.w	r3, [sp, #13]
    b74e:	f7fb fc3f 	bl	6fd0 <RAILINT_9dae83c5a5b496ad1ace0cccba141a93>
    b752:	4605      	mov	r5, r0
    b754:	b9c0      	cbnz	r0, b788 <RAILINT_78eaa84173e85419c123802d17d70cee+0x70>
    b756:	7823      	ldrb	r3, [r4, #0]
    b758:	b9eb      	cbnz	r3, b796 <RAILINT_78eaa84173e85419c123802d17d70cee+0x7e>
    b75a:	79a2      	ldrb	r2, [r4, #6]
    b75c:	f88d 200c 	strb.w	r2, [sp, #12]
    b760:	b1db      	cbz	r3, b79a <RAILINT_78eaa84173e85419c123802d17d70cee+0x82>
    b762:	79a3      	ldrb	r3, [r4, #6]
    b764:	4630      	mov	r0, r6
    b766:	a903      	add	r1, sp, #12
    b768:	f88d 300d 	strb.w	r3, [sp, #13]
    b76c:	f7fb fc1a 	bl	6fa4 <RAILINT_992a3700fea39ab020ab6087e28c16df>
    b770:	4605      	mov	r5, r0
    b772:	b948      	cbnz	r0, b788 <RAILINT_78eaa84173e85419c123802d17d70cee+0x70>
    b774:	7823      	ldrb	r3, [r4, #0]
    b776:	b13b      	cbz	r3, b788 <RAILINT_78eaa84173e85419c123802d17d70cee+0x70>
    b778:	8861      	ldrh	r1, [r4, #2]
    b77a:	4630      	mov	r0, r6
    b77c:	f7fc fb3e 	bl	7dfc <RAILINT_f70b804705a044eb7f74093268741788>
    b780:	2101      	movs	r1, #1
    b782:	4630      	mov	r0, r6
    b784:	f7fc fb20 	bl	7dc8 <RAILINT_cb27dba168c71b340f37df80e4ee5b60>
    b788:	4628      	mov	r0, r5
    b78a:	b004      	add	sp, #16
    b78c:	bd70      	pop	{r4, r5, r6, pc}
    b78e:	2204      	movs	r2, #4
    b790:	e7d5      	b.n	b73e <RAILINT_78eaa84173e85419c123802d17d70cee+0x26>
    b792:	7963      	ldrb	r3, [r4, #5]
    b794:	e7d7      	b.n	b746 <RAILINT_78eaa84173e85419c123802d17d70cee+0x2e>
    b796:	2202      	movs	r2, #2
    b798:	e7e0      	b.n	b75c <RAILINT_78eaa84173e85419c123802d17d70cee+0x44>
    b79a:	79e3      	ldrb	r3, [r4, #7]
    b79c:	e7e2      	b.n	b764 <RAILINT_78eaa84173e85419c123802d17d70cee+0x4c>

0000b79e <RAILINT_2d5876683a764801ac6ee9a13c687c8d>:
    b79e:	2000      	movs	r0, #0
    b7a0:	4770      	bx	lr
	...

0000b7a4 <__aeabi_uldivmod>:
    b7a4:	b953      	cbnz	r3, b7bc <__aeabi_uldivmod+0x18>
    b7a6:	b94a      	cbnz	r2, b7bc <__aeabi_uldivmod+0x18>
    b7a8:	2900      	cmp	r1, #0
    b7aa:	bf08      	it	eq
    b7ac:	2800      	cmpeq	r0, #0
    b7ae:	bf1c      	itt	ne
    b7b0:	f04f 31ff 	movne.w	r1, #4294967295
    b7b4:	f04f 30ff 	movne.w	r0, #4294967295
    b7b8:	f000 b982 	b.w	bac0 <__aeabi_idiv0>
    b7bc:	f1ad 0c08 	sub.w	ip, sp, #8
    b7c0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
    b7c4:	f000 f806 	bl	b7d4 <__udivmoddi4>
    b7c8:	f8dd e004 	ldr.w	lr, [sp, #4]
    b7cc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    b7d0:	b004      	add	sp, #16
    b7d2:	4770      	bx	lr

0000b7d4 <__udivmoddi4>:
    b7d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b7d8:	9d09      	ldr	r5, [sp, #36]	; 0x24
    b7da:	4604      	mov	r4, r0
    b7dc:	460f      	mov	r7, r1
    b7de:	2b00      	cmp	r3, #0
    b7e0:	d148      	bne.n	b874 <__udivmoddi4+0xa0>
    b7e2:	428a      	cmp	r2, r1
    b7e4:	4694      	mov	ip, r2
    b7e6:	d961      	bls.n	b8ac <__udivmoddi4+0xd8>
    b7e8:	fab2 f382 	clz	r3, r2
    b7ec:	b143      	cbz	r3, b800 <__udivmoddi4+0x2c>
    b7ee:	f1c3 0120 	rsb	r1, r3, #32
    b7f2:	409f      	lsls	r7, r3
    b7f4:	fa02 fc03 	lsl.w	ip, r2, r3
    b7f8:	409c      	lsls	r4, r3
    b7fa:	fa20 f101 	lsr.w	r1, r0, r1
    b7fe:	430f      	orrs	r7, r1
    b800:	ea4f 411c 	mov.w	r1, ip, lsr #16
    b804:	fa1f fe8c 	uxth.w	lr, ip
    b808:	0c22      	lsrs	r2, r4, #16
    b80a:	fbb7 f6f1 	udiv	r6, r7, r1
    b80e:	fb01 7716 	mls	r7, r1, r6, r7
    b812:	fb06 f00e 	mul.w	r0, r6, lr
    b816:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
    b81a:	4290      	cmp	r0, r2
    b81c:	d908      	bls.n	b830 <__udivmoddi4+0x5c>
    b81e:	eb1c 0202 	adds.w	r2, ip, r2
    b822:	f106 37ff 	add.w	r7, r6, #4294967295
    b826:	d202      	bcs.n	b82e <__udivmoddi4+0x5a>
    b828:	4290      	cmp	r0, r2
    b82a:	f200 8137 	bhi.w	ba9c <__udivmoddi4+0x2c8>
    b82e:	463e      	mov	r6, r7
    b830:	1a12      	subs	r2, r2, r0
    b832:	b2a4      	uxth	r4, r4
    b834:	fbb2 f0f1 	udiv	r0, r2, r1
    b838:	fb01 2210 	mls	r2, r1, r0, r2
    b83c:	fb00 fe0e 	mul.w	lr, r0, lr
    b840:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
    b844:	45a6      	cmp	lr, r4
    b846:	d908      	bls.n	b85a <__udivmoddi4+0x86>
    b848:	eb1c 0404 	adds.w	r4, ip, r4
    b84c:	f100 32ff 	add.w	r2, r0, #4294967295
    b850:	d202      	bcs.n	b858 <__udivmoddi4+0x84>
    b852:	45a6      	cmp	lr, r4
    b854:	f200 811c 	bhi.w	ba90 <__udivmoddi4+0x2bc>
    b858:	4610      	mov	r0, r2
    b85a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
    b85e:	eba4 040e 	sub.w	r4, r4, lr
    b862:	2600      	movs	r6, #0
    b864:	b11d      	cbz	r5, b86e <__udivmoddi4+0x9a>
    b866:	40dc      	lsrs	r4, r3
    b868:	2300      	movs	r3, #0
    b86a:	e9c5 4300 	strd	r4, r3, [r5]
    b86e:	4631      	mov	r1, r6
    b870:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b874:	428b      	cmp	r3, r1
    b876:	d909      	bls.n	b88c <__udivmoddi4+0xb8>
    b878:	2d00      	cmp	r5, #0
    b87a:	f000 80fd 	beq.w	ba78 <__udivmoddi4+0x2a4>
    b87e:	2600      	movs	r6, #0
    b880:	e9c5 0100 	strd	r0, r1, [r5]
    b884:	4630      	mov	r0, r6
    b886:	4631      	mov	r1, r6
    b888:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b88c:	fab3 f683 	clz	r6, r3
    b890:	2e00      	cmp	r6, #0
    b892:	d14b      	bne.n	b92c <__udivmoddi4+0x158>
    b894:	428b      	cmp	r3, r1
    b896:	f0c0 80f2 	bcc.w	ba7e <__udivmoddi4+0x2aa>
    b89a:	4282      	cmp	r2, r0
    b89c:	f240 80ef 	bls.w	ba7e <__udivmoddi4+0x2aa>
    b8a0:	4630      	mov	r0, r6
    b8a2:	2d00      	cmp	r5, #0
    b8a4:	d0e3      	beq.n	b86e <__udivmoddi4+0x9a>
    b8a6:	e9c5 4700 	strd	r4, r7, [r5]
    b8aa:	e7e0      	b.n	b86e <__udivmoddi4+0x9a>
    b8ac:	b902      	cbnz	r2, b8b0 <__udivmoddi4+0xdc>
    b8ae:	deff      	udf	#255	; 0xff
    b8b0:	fab2 f382 	clz	r3, r2
    b8b4:	2b00      	cmp	r3, #0
    b8b6:	f040 809d 	bne.w	b9f4 <__udivmoddi4+0x220>
    b8ba:	1a89      	subs	r1, r1, r2
    b8bc:	ea4f 4e12 	mov.w	lr, r2, lsr #16
    b8c0:	b297      	uxth	r7, r2
    b8c2:	2601      	movs	r6, #1
    b8c4:	0c20      	lsrs	r0, r4, #16
    b8c6:	fbb1 f2fe 	udiv	r2, r1, lr
    b8ca:	fb0e 1112 	mls	r1, lr, r2, r1
    b8ce:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
    b8d2:	fb07 f002 	mul.w	r0, r7, r2
    b8d6:	4288      	cmp	r0, r1
    b8d8:	d90f      	bls.n	b8fa <__udivmoddi4+0x126>
    b8da:	eb1c 0101 	adds.w	r1, ip, r1
    b8de:	f102 38ff 	add.w	r8, r2, #4294967295
    b8e2:	bf2c      	ite	cs
    b8e4:	f04f 0901 	movcs.w	r9, #1
    b8e8:	f04f 0900 	movcc.w	r9, #0
    b8ec:	4288      	cmp	r0, r1
    b8ee:	d903      	bls.n	b8f8 <__udivmoddi4+0x124>
    b8f0:	f1b9 0f00 	cmp.w	r9, #0
    b8f4:	f000 80cf 	beq.w	ba96 <__udivmoddi4+0x2c2>
    b8f8:	4642      	mov	r2, r8
    b8fa:	1a09      	subs	r1, r1, r0
    b8fc:	b2a4      	uxth	r4, r4
    b8fe:	fbb1 f0fe 	udiv	r0, r1, lr
    b902:	fb0e 1110 	mls	r1, lr, r0, r1
    b906:	fb00 f707 	mul.w	r7, r0, r7
    b90a:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
    b90e:	42a7      	cmp	r7, r4
    b910:	d908      	bls.n	b924 <__udivmoddi4+0x150>
    b912:	eb1c 0404 	adds.w	r4, ip, r4
    b916:	f100 31ff 	add.w	r1, r0, #4294967295
    b91a:	d202      	bcs.n	b922 <__udivmoddi4+0x14e>
    b91c:	42a7      	cmp	r7, r4
    b91e:	f200 80b4 	bhi.w	ba8a <__udivmoddi4+0x2b6>
    b922:	4608      	mov	r0, r1
    b924:	1be4      	subs	r4, r4, r7
    b926:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
    b92a:	e79b      	b.n	b864 <__udivmoddi4+0x90>
    b92c:	f1c6 0720 	rsb	r7, r6, #32
    b930:	40b3      	lsls	r3, r6
    b932:	fa01 f406 	lsl.w	r4, r1, r6
    b936:	fa22 fc07 	lsr.w	ip, r2, r7
    b93a:	40f9      	lsrs	r1, r7
    b93c:	40b2      	lsls	r2, r6
    b93e:	ea4c 0c03 	orr.w	ip, ip, r3
    b942:	fa20 f307 	lsr.w	r3, r0, r7
    b946:	ea4f 491c 	mov.w	r9, ip, lsr #16
    b94a:	431c      	orrs	r4, r3
    b94c:	fa1f fe8c 	uxth.w	lr, ip
    b950:	fa00 f306 	lsl.w	r3, r0, r6
    b954:	0c20      	lsrs	r0, r4, #16
    b956:	fbb1 f8f9 	udiv	r8, r1, r9
    b95a:	fb09 1118 	mls	r1, r9, r8, r1
    b95e:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
    b962:	fb08 f00e 	mul.w	r0, r8, lr
    b966:	4288      	cmp	r0, r1
    b968:	d90f      	bls.n	b98a <__udivmoddi4+0x1b6>
    b96a:	eb1c 0101 	adds.w	r1, ip, r1
    b96e:	f108 3aff 	add.w	sl, r8, #4294967295
    b972:	bf2c      	ite	cs
    b974:	f04f 0b01 	movcs.w	fp, #1
    b978:	f04f 0b00 	movcc.w	fp, #0
    b97c:	4288      	cmp	r0, r1
    b97e:	d903      	bls.n	b988 <__udivmoddi4+0x1b4>
    b980:	f1bb 0f00 	cmp.w	fp, #0
    b984:	f000 808d 	beq.w	baa2 <__udivmoddi4+0x2ce>
    b988:	46d0      	mov	r8, sl
    b98a:	1a09      	subs	r1, r1, r0
    b98c:	b2a4      	uxth	r4, r4
    b98e:	fbb1 f0f9 	udiv	r0, r1, r9
    b992:	fb09 1110 	mls	r1, r9, r0, r1
    b996:	fb00 fe0e 	mul.w	lr, r0, lr
    b99a:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
    b99e:	458e      	cmp	lr, r1
    b9a0:	d907      	bls.n	b9b2 <__udivmoddi4+0x1de>
    b9a2:	eb1c 0101 	adds.w	r1, ip, r1
    b9a6:	f100 34ff 	add.w	r4, r0, #4294967295
    b9aa:	d201      	bcs.n	b9b0 <__udivmoddi4+0x1dc>
    b9ac:	458e      	cmp	lr, r1
    b9ae:	d87f      	bhi.n	bab0 <__udivmoddi4+0x2dc>
    b9b0:	4620      	mov	r0, r4
    b9b2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
    b9b6:	eba1 010e 	sub.w	r1, r1, lr
    b9ba:	fba0 9802 	umull	r9, r8, r0, r2
    b9be:	4541      	cmp	r1, r8
    b9c0:	464c      	mov	r4, r9
    b9c2:	46c6      	mov	lr, r8
    b9c4:	d302      	bcc.n	b9cc <__udivmoddi4+0x1f8>
    b9c6:	d106      	bne.n	b9d6 <__udivmoddi4+0x202>
    b9c8:	454b      	cmp	r3, r9
    b9ca:	d204      	bcs.n	b9d6 <__udivmoddi4+0x202>
    b9cc:	3801      	subs	r0, #1
    b9ce:	ebb9 0402 	subs.w	r4, r9, r2
    b9d2:	eb68 0e0c 	sbc.w	lr, r8, ip
    b9d6:	2d00      	cmp	r5, #0
    b9d8:	d070      	beq.n	babc <__udivmoddi4+0x2e8>
    b9da:	1b1a      	subs	r2, r3, r4
    b9dc:	eb61 010e 	sbc.w	r1, r1, lr
    b9e0:	fa22 f306 	lsr.w	r3, r2, r6
    b9e4:	fa01 f707 	lsl.w	r7, r1, r7
    b9e8:	40f1      	lsrs	r1, r6
    b9ea:	2600      	movs	r6, #0
    b9ec:	431f      	orrs	r7, r3
    b9ee:	e9c5 7100 	strd	r7, r1, [r5]
    b9f2:	e73c      	b.n	b86e <__udivmoddi4+0x9a>
    b9f4:	fa02 fc03 	lsl.w	ip, r2, r3
    b9f8:	f1c3 0020 	rsb	r0, r3, #32
    b9fc:	fa01 f203 	lsl.w	r2, r1, r3
    ba00:	fa21 f600 	lsr.w	r6, r1, r0
    ba04:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
    ba08:	fa24 f100 	lsr.w	r1, r4, r0
    ba0c:	fa1f f78c 	uxth.w	r7, ip
    ba10:	409c      	lsls	r4, r3
    ba12:	4311      	orrs	r1, r2
    ba14:	fbb6 f0fe 	udiv	r0, r6, lr
    ba18:	0c0a      	lsrs	r2, r1, #16
    ba1a:	fb0e 6610 	mls	r6, lr, r0, r6
    ba1e:	ea42 4206 	orr.w	r2, r2, r6, lsl #16
    ba22:	fb00 f607 	mul.w	r6, r0, r7
    ba26:	4296      	cmp	r6, r2
    ba28:	d90e      	bls.n	ba48 <__udivmoddi4+0x274>
    ba2a:	eb1c 0202 	adds.w	r2, ip, r2
    ba2e:	f100 38ff 	add.w	r8, r0, #4294967295
    ba32:	bf2c      	ite	cs
    ba34:	f04f 0901 	movcs.w	r9, #1
    ba38:	f04f 0900 	movcc.w	r9, #0
    ba3c:	4296      	cmp	r6, r2
    ba3e:	d902      	bls.n	ba46 <__udivmoddi4+0x272>
    ba40:	f1b9 0f00 	cmp.w	r9, #0
    ba44:	d031      	beq.n	baaa <__udivmoddi4+0x2d6>
    ba46:	4640      	mov	r0, r8
    ba48:	1b92      	subs	r2, r2, r6
    ba4a:	b289      	uxth	r1, r1
    ba4c:	fbb2 f6fe 	udiv	r6, r2, lr
    ba50:	fb0e 2216 	mls	r2, lr, r6, r2
    ba54:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
    ba58:	fb06 f207 	mul.w	r2, r6, r7
    ba5c:	428a      	cmp	r2, r1
    ba5e:	d907      	bls.n	ba70 <__udivmoddi4+0x29c>
    ba60:	eb1c 0101 	adds.w	r1, ip, r1
    ba64:	f106 38ff 	add.w	r8, r6, #4294967295
    ba68:	d201      	bcs.n	ba6e <__udivmoddi4+0x29a>
    ba6a:	428a      	cmp	r2, r1
    ba6c:	d823      	bhi.n	bab6 <__udivmoddi4+0x2e2>
    ba6e:	4646      	mov	r6, r8
    ba70:	1a89      	subs	r1, r1, r2
    ba72:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
    ba76:	e725      	b.n	b8c4 <__udivmoddi4+0xf0>
    ba78:	462e      	mov	r6, r5
    ba7a:	4628      	mov	r0, r5
    ba7c:	e6f7      	b.n	b86e <__udivmoddi4+0x9a>
    ba7e:	1a84      	subs	r4, r0, r2
    ba80:	eb61 0303 	sbc.w	r3, r1, r3
    ba84:	2001      	movs	r0, #1
    ba86:	461f      	mov	r7, r3
    ba88:	e70b      	b.n	b8a2 <__udivmoddi4+0xce>
    ba8a:	4464      	add	r4, ip
    ba8c:	3802      	subs	r0, #2
    ba8e:	e749      	b.n	b924 <__udivmoddi4+0x150>
    ba90:	4464      	add	r4, ip
    ba92:	3802      	subs	r0, #2
    ba94:	e6e1      	b.n	b85a <__udivmoddi4+0x86>
    ba96:	3a02      	subs	r2, #2
    ba98:	4461      	add	r1, ip
    ba9a:	e72e      	b.n	b8fa <__udivmoddi4+0x126>
    ba9c:	3e02      	subs	r6, #2
    ba9e:	4462      	add	r2, ip
    baa0:	e6c6      	b.n	b830 <__udivmoddi4+0x5c>
    baa2:	f1a8 0802 	sub.w	r8, r8, #2
    baa6:	4461      	add	r1, ip
    baa8:	e76f      	b.n	b98a <__udivmoddi4+0x1b6>
    baaa:	3802      	subs	r0, #2
    baac:	4462      	add	r2, ip
    baae:	e7cb      	b.n	ba48 <__udivmoddi4+0x274>
    bab0:	3802      	subs	r0, #2
    bab2:	4461      	add	r1, ip
    bab4:	e77d      	b.n	b9b2 <__udivmoddi4+0x1de>
    bab6:	3e02      	subs	r6, #2
    bab8:	4461      	add	r1, ip
    baba:	e7d9      	b.n	ba70 <__udivmoddi4+0x29c>
    babc:	462e      	mov	r6, r5
    babe:	e6d6      	b.n	b86e <__udivmoddi4+0x9a>

0000bac0 <__aeabi_idiv0>:
    bac0:	4770      	bx	lr
    bac2:	bf00      	nop

0000bac4 <memcpy>:
    bac4:	440a      	add	r2, r1
    bac6:	1e43      	subs	r3, r0, #1
    bac8:	4291      	cmp	r1, r2
    baca:	d100      	bne.n	bace <memcpy+0xa>
    bacc:	4770      	bx	lr
    bace:	b510      	push	{r4, lr}
    bad0:	f811 4b01 	ldrb.w	r4, [r1], #1
    bad4:	4291      	cmp	r1, r2
    bad6:	f803 4f01 	strb.w	r4, [r3, #1]!
    bada:	d1f9      	bne.n	bad0 <memcpy+0xc>
    badc:	bd10      	pop	{r4, pc}

0000bade <memset>:
    bade:	4402      	add	r2, r0
    bae0:	4603      	mov	r3, r0
    bae2:	4293      	cmp	r3, r2
    bae4:	d100      	bne.n	bae8 <memset+0xa>
    bae6:	4770      	bx	lr
    bae8:	f803 1b01 	strb.w	r1, [r3], #1
    baec:	e7f9      	b.n	bae2 <memset+0x4>
	...

0000baf0 <_strtol_l.constprop.0>:
    baf0:	2b01      	cmp	r3, #1
    baf2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    baf6:	d001      	beq.n	bafc <_strtol_l.constprop.0+0xc>
    baf8:	2b24      	cmp	r3, #36	; 0x24
    bafa:	d906      	bls.n	bb0a <_strtol_l.constprop.0+0x1a>
    bafc:	f000 f884 	bl	bc08 <__errno>
    bb00:	2316      	movs	r3, #22
    bb02:	6003      	str	r3, [r0, #0]
    bb04:	2000      	movs	r0, #0
    bb06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    bb0a:	460d      	mov	r5, r1
    bb0c:	f8df c0e0 	ldr.w	ip, [pc, #224]	; bbf0 <_strtol_l.constprop.0+0x100>
    bb10:	462e      	mov	r6, r5
    bb12:	f815 4b01 	ldrb.w	r4, [r5], #1
    bb16:	f814 700c 	ldrb.w	r7, [r4, ip]
    bb1a:	f017 0708 	ands.w	r7, r7, #8
    bb1e:	d1f7      	bne.n	bb10 <_strtol_l.constprop.0+0x20>
    bb20:	2c2d      	cmp	r4, #45	; 0x2d
    bb22:	d132      	bne.n	bb8a <_strtol_l.constprop.0+0x9a>
    bb24:	782c      	ldrb	r4, [r5, #0]
    bb26:	2701      	movs	r7, #1
    bb28:	1cb5      	adds	r5, r6, #2
    bb2a:	2b00      	cmp	r3, #0
    bb2c:	d05b      	beq.n	bbe6 <_strtol_l.constprop.0+0xf6>
    bb2e:	2b10      	cmp	r3, #16
    bb30:	d109      	bne.n	bb46 <_strtol_l.constprop.0+0x56>
    bb32:	2c30      	cmp	r4, #48	; 0x30
    bb34:	d107      	bne.n	bb46 <_strtol_l.constprop.0+0x56>
    bb36:	782c      	ldrb	r4, [r5, #0]
    bb38:	f004 04df 	and.w	r4, r4, #223	; 0xdf
    bb3c:	2c58      	cmp	r4, #88	; 0x58
    bb3e:	d14d      	bne.n	bbdc <_strtol_l.constprop.0+0xec>
    bb40:	786c      	ldrb	r4, [r5, #1]
    bb42:	2310      	movs	r3, #16
    bb44:	3502      	adds	r5, #2
    bb46:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
    bb4a:	f04f 0c00 	mov.w	ip, #0
    bb4e:	f108 38ff 	add.w	r8, r8, #4294967295
    bb52:	4666      	mov	r6, ip
    bb54:	fbb8 f9f3 	udiv	r9, r8, r3
    bb58:	fb03 8a19 	mls	sl, r3, r9, r8
    bb5c:	f1a4 0e30 	sub.w	lr, r4, #48	; 0x30
    bb60:	f1be 0f09 	cmp.w	lr, #9
    bb64:	d816      	bhi.n	bb94 <_strtol_l.constprop.0+0xa4>
    bb66:	4674      	mov	r4, lr
    bb68:	42a3      	cmp	r3, r4
    bb6a:	dd24      	ble.n	bbb6 <_strtol_l.constprop.0+0xc6>
    bb6c:	f1bc 0f00 	cmp.w	ip, #0
    bb70:	db1e      	blt.n	bbb0 <_strtol_l.constprop.0+0xc0>
    bb72:	45b1      	cmp	r9, r6
    bb74:	d31c      	bcc.n	bbb0 <_strtol_l.constprop.0+0xc0>
    bb76:	d101      	bne.n	bb7c <_strtol_l.constprop.0+0x8c>
    bb78:	45a2      	cmp	sl, r4
    bb7a:	db19      	blt.n	bbb0 <_strtol_l.constprop.0+0xc0>
    bb7c:	fb06 4603 	mla	r6, r6, r3, r4
    bb80:	f04f 0c01 	mov.w	ip, #1
    bb84:	f815 4b01 	ldrb.w	r4, [r5], #1
    bb88:	e7e8      	b.n	bb5c <_strtol_l.constprop.0+0x6c>
    bb8a:	2c2b      	cmp	r4, #43	; 0x2b
    bb8c:	bf04      	itt	eq
    bb8e:	782c      	ldrbeq	r4, [r5, #0]
    bb90:	1cb5      	addeq	r5, r6, #2
    bb92:	e7ca      	b.n	bb2a <_strtol_l.constprop.0+0x3a>
    bb94:	f1a4 0e41 	sub.w	lr, r4, #65	; 0x41
    bb98:	f1be 0f19 	cmp.w	lr, #25
    bb9c:	d801      	bhi.n	bba2 <_strtol_l.constprop.0+0xb2>
    bb9e:	3c37      	subs	r4, #55	; 0x37
    bba0:	e7e2      	b.n	bb68 <_strtol_l.constprop.0+0x78>
    bba2:	f1a4 0e61 	sub.w	lr, r4, #97	; 0x61
    bba6:	f1be 0f19 	cmp.w	lr, #25
    bbaa:	d804      	bhi.n	bbb6 <_strtol_l.constprop.0+0xc6>
    bbac:	3c57      	subs	r4, #87	; 0x57
    bbae:	e7db      	b.n	bb68 <_strtol_l.constprop.0+0x78>
    bbb0:	f04f 3cff 	mov.w	ip, #4294967295
    bbb4:	e7e6      	b.n	bb84 <_strtol_l.constprop.0+0x94>
    bbb6:	f1bc 0f00 	cmp.w	ip, #0
    bbba:	da05      	bge.n	bbc8 <_strtol_l.constprop.0+0xd8>
    bbbc:	2322      	movs	r3, #34	; 0x22
    bbbe:	4646      	mov	r6, r8
    bbc0:	6003      	str	r3, [r0, #0]
    bbc2:	b942      	cbnz	r2, bbd6 <_strtol_l.constprop.0+0xe6>
    bbc4:	4630      	mov	r0, r6
    bbc6:	e79e      	b.n	bb06 <_strtol_l.constprop.0+0x16>
    bbc8:	b107      	cbz	r7, bbcc <_strtol_l.constprop.0+0xdc>
    bbca:	4276      	negs	r6, r6
    bbcc:	2a00      	cmp	r2, #0
    bbce:	d0f9      	beq.n	bbc4 <_strtol_l.constprop.0+0xd4>
    bbd0:	f1bc 0f00 	cmp.w	ip, #0
    bbd4:	d000      	beq.n	bbd8 <_strtol_l.constprop.0+0xe8>
    bbd6:	1e69      	subs	r1, r5, #1
    bbd8:	6011      	str	r1, [r2, #0]
    bbda:	e7f3      	b.n	bbc4 <_strtol_l.constprop.0+0xd4>
    bbdc:	2430      	movs	r4, #48	; 0x30
    bbde:	2b00      	cmp	r3, #0
    bbe0:	d1b1      	bne.n	bb46 <_strtol_l.constprop.0+0x56>
    bbe2:	2308      	movs	r3, #8
    bbe4:	e7af      	b.n	bb46 <_strtol_l.constprop.0+0x56>
    bbe6:	2c30      	cmp	r4, #48	; 0x30
    bbe8:	d0a5      	beq.n	bb36 <_strtol_l.constprop.0+0x46>
    bbea:	230a      	movs	r3, #10
    bbec:	e7ab      	b.n	bb46 <_strtol_l.constprop.0+0x56>
    bbee:	bf00      	nop
    bbf0:	0000dc59 	.word	0x0000dc59

0000bbf4 <strtol>:
    bbf4:	4613      	mov	r3, r2
    bbf6:	460a      	mov	r2, r1
    bbf8:	4601      	mov	r1, r0
    bbfa:	4802      	ldr	r0, [pc, #8]	; (bc04 <strtol+0x10>)
    bbfc:	6800      	ldr	r0, [r0, #0]
    bbfe:	f7ff bf77 	b.w	baf0 <_strtol_l.constprop.0>
    bc02:	bf00      	nop
    bc04:	20000210 	.word	0x20000210

0000bc08 <__errno>:
    bc08:	4b01      	ldr	r3, [pc, #4]	; (bc10 <__errno+0x8>)
    bc0a:	6818      	ldr	r0, [r3, #0]
    bc0c:	4770      	bx	lr
    bc0e:	bf00      	nop
    bc10:	20000210 	.word	0x20000210

0000bc14 <TABLE7_2_PANID_Compression>:
    bc14:	00000000 01000000 00020100 03000001     ................
    bc24:	00000100 00000002 00000301 02000100     ................
    bc34:	00000100 00010003 00000200 00030001     ................
    bc44:	03030100 03000001 01000003 01010202     ................
    bc54:	01030200 02030001 02000101 01000103     ................
    bc64:	00010203 01020201 00000100 00006425     ............%d..

0000bc74 <HexToAscii>:
    bc74:	33323130 37363534 42413938 46454443     0123456789ABCDEF
    bc84:	72756f53 2f736563 2f4c4148 696c6953     Sources/HAL/Sili
    bc94:	4c6e6f63 2f736261 2f4b4453 6b636567     conLabs/SDK/geck
    bca4:	64735f6f 2e335f6b 2f312e31 74616c70     o_sdk_3.1.1/plat
    bcb4:	6d726f66 6c6d652f 732f6269 652f6372     form/emlib/src/e
    bcc4:	6d635f6d 00632e75 72756f53 2f736563     m_cmu.c.Sources/
    bcd4:	2f4c4148 696c6953 4c6e6f63 2f736261     HAL/SiliconLabs/
    bce4:	2f4b4453 6b636567 64735f6f 2e335f6b     SDK/gecko_sdk_3.
    bcf4:	2f312e31 74616c70 6d726f66 6c6d652f     1.1/platform/eml
    bd04:	732f6269 652f6372 70675f6d 632e6f69     ib/src/em_gpio.c
    bd14:	00000000 6f532f2e 65637275 41482f73     ...../Sources/HA
    bd24:	69532f4c 6f63696c 62614c6e 44532f73     L/SiliconLabs/SD
    bd34:	65672f4b 5f6f6b63 5f6b6473 2e312e33     K/gecko_sdk_3.1.
    bd44:	6c702f31 6f667461 652f6d72 62696c6d     1/platform/emlib
    bd54:	636e692f 5f6d652f 6f697067 0000682e     /inc/em_gpio.h..
    bd64:	72756f53 2f736563 2f4c4148 696c6953     Sources/HAL/Sili
    bd74:	4c6e6f63 2f736261 2f4b4453 6b636567     conLabs/SDK/geck
    bd84:	64735f6f 2e335f6b 2f312e31 74616c70     o_sdk_3.1.1/plat
    bd94:	6d726f66 6c6d652f 732f6269 652f6372     form/emlib/src/e
    bda4:	73755f6d 2e747261 00000063              m_usart.c...

0000bdb0 <rail154Config>:
    bdb0:	00000000 02a00000 02020202 00000064     ............d...
    bdc0:	000000c0 00000064 000000c0 00000000     ....d...........
	...
    bdd8:	0000010f 00000000 00000000 000f4240     ............@B..
    bde8:	00000500 00001000 00000000 00000000     ................

0000bdf8 <sl_app_properties>:
    bdf8:	fa79b713 b7dd25c9 e0cff3ad b814b6f1     ..y..%..........
	...
    be10:	ffffffff 00000001 00000000 00000000     ................
	...
    be38:	ffffffff ffffffff ffffffff 00000000     ................
	...

0000be5c <RAILINT_c31703a7fdcc05c41a79c5dab844e34f>:
    be5c:	08020000 00000000                       ........

0000be64 <RAILINT_6395d1d00f39eebcdfd90fd22fbd0f21>:
    be64:	38000000 18000000 20000000 00000000     ...8....... ....

0000be74 <RAILINT_e2c2f3fe6db413d95c1b5e9d1dee12f0>:
    be74:	01010100                                ....

0000be78 <RAILINT_e88d2ff9c2ad0d21d5b6d6840de5ac12>:
    be78:	01010000                                ....

0000be7c <RAILINT_05cd8f4263afe5a5f0561f4363d8f82d>:
    be7c:	01000000                                ....

0000be80 <RAILINT_cced209ae0bf7d802971ebcf473b7962>:
    be80:	02030202 04020202 04040405              ............

0000be8c <ieee802154_2p4_antdiv_timing>:
    be8c:	000019e1 000019e1 00000000              ............

0000be98 <ieee802154_2p4_coherent_timing>:
    be98:	00001964 00001964 00000000              d...d.......

0000bea4 <RAILINT_78ce8b40f7196493de99e0d9ea79b6c4>:
	...

0000beac <ble_LR_DSA_125kb_timing>:
    beac:	0002daf5 00001770 00000bb8              ....p.......

0000beb8 <ble_LR_DSA_500kb_timing>:
    beb8:	0000bfe5 00001770 00000bb8              ....p.......

0000bec4 <RAILINT_8538875f216554bf4208f0c5a0c4ec23>:
    bec4:	03020100                                 .......

0000becb <RAILINT_1b36f96a72656bd43a4afffed3254c9e>:
    becb:	02020100 05040303 0c0c0806               .............

0000bed8 <RAILINT_d3dd13574495c9b1fcdaf482701deee1>:
    bed8:	a801a800 b000a802                       ........

0000bee0 <RAILINT_fc4f997ed88f479adfdd3de1f377abc0>:
    bee0:	08040403 00000008                       ........

0000bee8 <RAILINT_6c7715fcf8a536bb641f7a33742a842f>:
    bee8:	0d6c7048 0cda7044 11687030 14f29802     Hpl.Dp..0ph.....
    bef8:	0d567038 0d7a7034 0e5c7030 0e5c702c     8pV.4pz.0p\.,p\.
    bf08:	0fca7028 0fe27024 0d647020 1068701c     (p..$p.. pd..ph.
    bf18:	10e47018 0d5c7014 600810b1 710ad801     .p...p\....`...q
    bf28:	787fb804 787e0c02 c6001064 a0001f94     ...x..~xd.......
    bf38:	7870b81d 6018b003 b327300f 1101330f     ..px...`.0'..3..
    bf48:	980648c0 b0290246 d8016008 dd097108     .H..F.)..`...q..
    bf58:	bb097104 60161011 600848a0 12011004     .q.....`.H.`....
    bf68:	502132ff 48d06008 88006008 12269806     .2!P.`.H.`....&.
    bf78:	1f34c400 ba00a000 7110df03 7206df09     ..4........q...r
    bf88:	03009802 7850b81d 1344a000 15411428     ......Px..D.(.A.
    bf98:	60081081 7114d802 98068810 c0001668     ...`...q....h...
    bfa8:	a800c014 18be9806 98069100 6001025c     ............\..`
    bfb8:	d82030b8 bc1e7106 c4007c63 440040e0     .0 ..q..c|...@.D
    bfc8:	62081244 40213201 4d187c08 32f01254     D..b.2!@.|.MT..2
    bfd8:	7204de40 db044840 dd0d7208 4b04720c     @..r@H...r...r.K
    bfe8:	481430ef 048c9806 d9401181 12b1721c     .0.H......@..r..
    bff8:	4acf3230 dab13a01 d8087210 d8047106     02.J.:...r...q..
    c008:	4c807108 70407c23 12444c68 228732ff     .q.L#|@phLD..2."
    c018:	b8807504 d8814ce8 d9407132 7c237204     .u...L..2q@..r#|
    c028:	98064b08 ba04048c 7976b91c 4020c100     .K........vy.. @
    c038:	7935a801 2161217f b9067900 d801a906     ..5y.!a!.y......
    c048:	4c80722e 98027c30 d808022e ba07710c     .r.L0|.......q..
    c058:	7104d824 7018ba06 710cd804 d840ba01     $..q...p...q..@.
    c068:	ba02710e ba05700a 7204d820 4c20ba03     .q...p.. ..r.. L
    c078:	4cc01144 61081418 11911418 42113138     D..L...a....81.B
    c088:	61181191 7204d910 c10032ef a8014008     ...a...r.2...@..
    c098:	31101114 4211611e 11a11428 14186108     ...1.a.B(....a..
    c0a8:	18a49806 c1001418 a8014008 61181114     .........@.....a
    c0b8:	141831ff 401cc100 1114a800 61081418     .1.....@.......a
    c0c8:	4028c200 1224a801 710432ff d8084910     ..(@..$..2.q.I..
    c0d8:	c200713c a8004054 da101224 4cb87130     <q..T@..$...0q.L
    c0e8:	bd801244 25ff6da2 12444c78 3a5122fc     D....m.%xLD.."Q:
    c0f8:	4c101428 c10cc200 1224a801 62081428     (..L......$.(..b
    c108:	62081428 62081428 4cd01428 88301418     (..b(..b(..L..0.
    c118:	98064802 93000356 7104db08 a000f801     .H..V......q....
    c128:	300fb027 8810a000 611811b1 710ad980     '..0.......a...q
    c138:	4088c100 1108a800 a0009100 4070c400     ...@..........p@
    c148:	1044a800 c000a000 40004088 61821104     ..D......@.@...a
    c158:	60821004 72f05010 1554a000 71124550     ...`.P.r..T.PE.q
    c168:	04969806 042c9806 7870b807 7841b802     ......,...px..Ax
    c178:	7a5bba1c 7a5d7a5c c020c200 1224a801     ..[z\z]z.. ...$.
    c188:	16729806 1f38c500 1554a000 c3001451     ..r...8...T.Q...
    c198:	000001ff 64093d31 9806347f 58010266     ....1=.d.4..f..X
    c1a8:	75042851 28415801 1181750e d9026108     Q(.u.XA(.u...a..
    c1b8:	0fff7204 b80770cc f8007872 c000baeb     .r...p..rx......
    c1c8:	a0001f34 3a111104 7112d910 631833ff     4......:...q.3.c
    c1d8:	1078c100 1138a802 7974b907 a0001028     ..x...8...ty(...
    c1e8:	025c9806 300d4c18 48047204 c11cc100     ..\..L.0.r.H....
    c1f8:	1114a801 1ec4c300 1591a000 72163504     .............5.r
    c208:	bb1c1318 7104d808 d8047b6c 7b6a7104     .......ql{...qj{
    c218:	70167c2f 13184b0c d808bb1c 7b6f7104     /|.p.K.......qo{
    c228:	7104d804 7c217b6d 6002300c 04189806     ...qm{!|.0.`....
    c238:	0a809806 11b1b800 d9406118 98027206     .........a@..r..
    c248:	bc0103f8 4008c200 dc00a801 1524710a     .......@.....q$.
    c258:	4a606502 4a2c700a 65081524 35044a4c     .e`J.p,J$..eLJ.5
    c268:	7104d908 c1002420 a0001f2c dc001214     ...q $..,.......
    c278:	d8207132 b8017106 daf0700c db0c720c     2q ..q...p...r..
    c288:	b8027108 04209806 c3002448 a8014138     .q.... .H$..8A..
    c298:	7b8f1334 b902710e db081391 b9037204     4..{.q.......r..
    c2a8:	491c7006 c3001114 a8004088 2001b8ff     .p.I.....@..... 
    c2b8:	71084111 13184101 42012408 8040c100     .A.q.A...$.B..@.
    c2c8:	1114a801 651c4101 15914151 651e3520     .....A.eQA.. 5.e
    c2d8:	13184151 13481328 4084c300 1034a800     QA..(.H....@..4.
    c2e8:	7110d803 dc053007 c300710a 4003c484     ...q.0...q.....@
    c2f8:	b81d7b21 b8007850 1f2cc100 1214a000     !{..Px....,.....
    c308:	5021601c 520130f0 a0001128 64072440     .`!P.0.R(...@$.d
    c318:	ffffc000 3c010001 2002b017 28405801     .......<... .X@(
    c328:	ac187506 a000ec01 c0008820 a801c020     .u...... ... ...
    c338:	b4171204 12041321 71f85230 24406419     ....!...0R.q.d@$
    c348:	1f68c300 1034a000 98061114 61190cc2     ..h...4........a
    c358:	59119200 76062921 5911bb00 0ca29806     ...Y!).v...Y....
    c368:	3b316287 5a217204 a0002a41 4070c200     .b1;.r!ZA*....p@
    c378:	7a31a800 8830a000 6111b901 0000c300     ..1z..0....a....
    c388:	1031ffc0 bc002831 750c2d00 ac185411     ..1.1(...-.u.T..
    c398:	2d31ec01 641970f4 55411351 93002c31     ..1-.p.dQ.AU1,..
    c3a8:	9806a000 c20006a2 a8018054 1fd4c000     ........T.......
    c3b8:	1004a000 22b81208 7a237a21 7841b852     ......."!z#zR.Ax
    c3c8:	600cb801 b809a821 a84c6019 6e29c000     ...`!....`L...)n
    c3d8:	a84f0006 786eb824 b0ffb9ac 7104d804     ..O.$.nx.......q
    c3e8:	a923b94c 05129806 3fd3c000 a8500000     L.#........?..P.
    c3f8:	c000a000 a0001f48 1018b117 04969806     ....H...........
    c408:	3fd8c000 a8500000 b921bc49 b249b852     ...?..P.I.!.R.I.
    c418:	712ade07 7108de05 7c607c62 79610c1d     ..*q...qb|`|..ay
    c428:	78647867 7862786b 78637865 7c617860     gxdxkxbxexcx`xa|
    c438:	0c010c01 0c027868 786c7869 c2000c02     ....hx..ixlx....
    c448:	a801802c 7a287a27 786a7a26 79410c05     ,...'z(z&zjx..Ay
    c458:	4a780c0a 7a327a2b 7a244a58 0100c400     ..xJ+z2zXJ$z....
    c468:	4a400011 8410c000 12080000 c5008850     ..@J........P...
    c478:	00011084 bd10adfb 6b8abb01 a9fab921     ...........k!...
    c488:	12184ac4 7a227a21 1f28c000 1004a000     .J..!z"z..(.....
    c498:	6482a8fc 30301041 a9f92901 b0fbadf8     ...dA.00.)......
    c4a8:	a8fb6082 65a03003 48041021 7a23ec20     .`...0.e!..H .#z
    c4b8:	7a031004 11244a18 58014adc 10242900     ...z.J$..J.X.)$.
    c4c8:	50317504 5011b1f8 712a6381 40314051     .u1P...P.c*qQ@1@
    c4d8:	b1fc1208 a9fc6184 710e310f 2811b017     .....a...1.q...(
    c4e8:	5911b117 76fa2810 b1f94ac4 7a211218     ...Y.(.v.J....!z
    c4f8:	70a07a22 12089500 7a204a40 b8004a84     "z.p....@J z.J..
    c508:	0c021208 7a084aa4 b8210c02 4a787841     .....J.z..!.AxxJ
    c518:	7a127a0b 1fc4c200 b0ffa000 7204d808     .z.z...........r
    c528:	10244a08 710adc00 2204a840 a8411024     .J$....q@.."$.A.
    c538:	02669806 1f38c200 1024a000 c4005101     ..f...8...$..Q..
    c548:	000001ff 50113941 a0001208 06a29806     ....A9.P........
    c558:	c200bc00 a801800c b8527a21 0c027849     ........!zR.Ix..
    c568:	0c027848 7841b849 ac21ac52 7a084a20     Hx..I.AxR.!. J.z
    c578:	7a077a06 c000ac49 a0001f50 1018b117     .z.zI...P.......
    c588:	b859a000 b15a7840 72fcd901 b8577842     ..Y.@xZ....rBxW.
    c598:	b1587840 72fcd901 a0007842 800cc200     @xX....rBx......
    c5a8:	7a21a801 b8217a22 b8077854 a84c6015     ..!z"z!.Tx...`L.
    c5b8:	7861b852 4029c000 a84f0006 b8c84a58     R.ax..)@..O.XJ..
    c5c8:	b8241208 b84c784e 9806a823 c0000512     ..$.NxL.#.......
    c5d8:	a0001f5c 1018b117 3fc4c000 a8500000     \..........?..P.
    c5e8:	0980c000 a8404000 b1ffb809 7104d908     .....@@........q
    c5f8:	a853b803 d80410b1 bb56710c ba577b60     ..S......qV.`{W.
    c608:	7a607a62 710cd802 7b60bb56 7a62ba59     bz`z...qV.`{Y.bz
    c618:	b8047a60 b83d786e c0007860 00003856     `z..nx=.`x..V8..
    c628:	c024c100 1114a800 7204799f a84c4808     ..$......y.r.HL.
    c638:	b1ffb82e 7106d908 7004a84a b80fa84b     .......qJ..pK...
    c648:	c000a834 00005e0c 4201b246 c100aa46     4....^..F..BF...
    c658:	a801402c 61081114 71083106 9806b900     ,@.....a.1.q....
    c668:	98060f4a 9806122c d90218ca 98067206     J...,........r..
    c678:	98060b4c 14511226 042c9806 1f58c000     L...&.Q...,...X.
    c688:	b117a000 98021018 b8000f24 a84aa84c     ........$...L.J.
    c698:	c000a84b ffff21f3 3901b146 b804a946     K....!..F..9F...
    c6a8:	a000786f 1f4cc000 b117a000 bcfa1018     ox....L.........
    c6b8:	5c416419 c0002c51 a0001f60 2c011004     .dA\Q,..`......,
    c6c8:	98067506 9806042c 10b10d8e d8246018     .u..,........`$.
    c6d8:	ba407134 11fc9806 7c7fbc1d 7865b804     4q@........|..ex
    c6e8:	d8041091 b81c7116 c000786e a8004068     .....q..nx..h@..
    c6f8:	98067821 40010f72 7c427208 12389806     !x..r..@.rB|..8.
    c708:	0a1a9802 7871b81d 786cb804 7842b841     ......qx..lxA.Bx
    c718:	78447863 d904b1ff 98027206 c00008d4     cxDx.....r......
    c728:	00003fc4 c300a850 a0001f20 c074c200     .?..P... .....t.
    c738:	1424a800 bc001348 4b041248 14244a1c     ..$.H...H..K.J$.
    c748:	bc001348 ba4a1248 7a427a44 7a44ba4b     H...H.J.DzBzK.Dz
    c758:	7a617a42 7a64ba4c ba3d7a65 b94d7a60     BzazL.dzez=.`zM.
    c768:	bb3fb842 7966795b 0c027961 0c057964     B.?.[yfyay..dy..
    c778:	79607963 79620c05 795a7965 0134c200     cy`y..byeyZy..4.
    c788:	1324a802 6019b805 12084031 786ab842     ..$....`1@..B.jx
    c798:	784a0c02 bc400c02 da08b2ff ba4a7106     ..Jx..@......qJ.
    c7a8:	ba4b7006 7a657a62 7a667a67 7b66796a     .pK.bzezgzfzjyf{
    c7b8:	099c9802 1f20c300 c200a000 a800c074     ...... .....t...
    c7c8:	13481424 4a1c4b04 13481424 1248bc3f     $.H..K.J$.H.?.H.
    c7d8:	bc004a1c ba4a1248 7a627a64 7a64ba4b     .J..H.J.dzbzK.dz
    c7e8:	7a617a62 7a64ba4c ba3d7a65 d9017a60     bzazL.dzez=.`z..
    c7f8:	7864714e 8070c100 c000a801 00080080     Nqdx..p.........
    c808:	98061108 b8420a42 b94d7861 797e797f     ....B.B.axM..y~y
    c818:	7868786a 0c027862 0c0f797b 0c14797a     jxhxbx..{y..zy..
    c828:	78417974 79757860 b2ff0c05 7106da08     tyAx`xuy.......q
    c838:	7004b84a 7865b84b 6416bc01 d9027040     J..pK.ex...d@p..
    c848:	9806713c b8420a42 7868b94d 78417840     <q..B.B.M.hx@xAx
    c858:	797e797f 0c0f797b 0c14797a da08b2ff     .y~y{y..zy......
    c868:	79717108 7006ba4a ba4b7970 7a657972     .qqyJ..ppyK.ryez
    c878:	0c02786a 0c05784a 6416bc01 79410c02     jx..Jx.....d..Ay
    c888:	0c0c7940 014cc000 1048a802 048c9806     @y....L...H.....
    c898:	c0001451 a0001f60 2c011004 1101b017     Q...`......,....
    c8a8:	58016887 760e2841 69872105 2d415c41     .h.XA(.v.!.iA\A-
    c8b8:	70062d11 042c9806 1f5cc000 b117a000     .-.p..,...\.....
    c8c8:	b8421018 7b7cbb4d 0c027864 7868b829     ..B.M.|{dx..).hx
    c8d8:	98061451 b842042c b1ff7844 710cd901     Q...,.B.Dx.....q
    c8e8:	8054c100 b8cba801 c0001108 a0001f54     ..T.........T...
    c8f8:	1018b117 d8041091 c0007114 a0001e9c     .........q......
    c908:	d8801004 b8077106 f8007853 c100b807     .....q..Sx......
    c918:	a0001ec0 c020c200 1224a801 78761128     ...... ...$.(.vx
    c928:	10b1f800 71387894 02669806 5911b9e4     .....x8q..f....Y
    c938:	76062811 700cb800 5911b9a0 75042901     .(.v...p...Y.).u
    c948:	6082b8a0 1fbcc300 1334a000 10342b01     ...`......4..+4.
    c958:	ffffc300 b142ff00 40113931 a000a842     ......B.19.@B...
    c968:	7891b01d b84271fa 0c027864 aa29ba00     ...x.qB.dx....).
    c978:	8054c400 b842a801 c300b94d a80140c0     ..T...B.M....@..
    c988:	7b971334 ec407204 78440c02 aa53795c     4..{.r@...Dx\yS.
    c998:	14280c0a b94db842 db01b3ff 4c247126     ..(.B.M.....&q$L
    c9a8:	0fffc300 143801ff 78407954 79557841     ......8.Ty@xAxUy
    c9b8:	795b0c02 0c14795a 795e795f 7842784a     ..[yZy.._y^yJxBx
    c9c8:	db027034 79527114 79507951 795b0c02     4p...qRyQyPy..[y
    c9d8:	795f795a 701e795e 711adb04 07ffc400     Zy_y^y.p...q....
    c9e8:	c3000000 a8022134 bb3f1348 0c027b46     ....4!..H.?.F{..
    c9f8:	795a795b 7b40bb3d 7b44bb4c c3007b45     [yZy=.@{L.D{E{..
    ca08:	a0001f24 3c401434 c0007116 a800c068     $...4.@<.q..h...
    ca18:	13281048 481c4b04 10481434 aa4a1328     H.(..K.H4.H.(.J.
    ca28:	b804aa4b b81d786d a0007851 d80110b1     K...mx..Qx......
    ca38:	a0007204 c074c000 1104a800 b9008810     .r....t.........
    ca48:	48681018 88101104 610bb901 482c1018     ..hH.......a..,H
    ca58:	88101104 c1008800 00001c23 b84a1018     ........#.....J.
    ca68:	b84b7864 0c267864 c100b028 f00fffff     dxK.dx&.(.......
    ca78:	b9713811 4011610b b928a828 79747973     .8q..a.@(.(.syty
    ca88:	1010c200 aa453030 0c0e7954 40e8c000     ....00E.Ty.....@
    ca98:	1104a801 3030c200 aa451010 10040c0e     ......00..E.....
    caa8:	88108800 0c169806 90009100 618f8820     ............ ..a
    cab8:	9806608f 90000c16 40216a88 6a901201     .`.......j!@...j
    cac8:	c1005803 00003f3f bcff3811 28412402     .X..??...8...$A(
    cad8:	42013811 b928aa45 b84a7953 b84b7844     .8.BE.(.SyJ.DxK.
    cae8:	90007844 10189100 482c9100 91001018     Dx........,H....
    caf8:	10184868 6891a000 69916043 5b116143     hH.....hC`.iCa.[
    cb08:	28112b01 28316041 ba005b31 76062830     .+.(A`1(1[..0(.v
    cb18:	4a202831 28306341 28317606 63414a10     1( JAc0(.v1(.JAc
    cb28:	76062830 4a082831 28306341 28317606     0(.v1(.JAc0(.v1(
    cb38:	63414a04 76062830 4a022831 28306341     .JAc0(.v1(.JAc0(
    cb48:	4a017604 5911a000 7106d910 60086008     .v.J...Y...q.`.`
    cb58:	7104d908 d9046008 60047104 7104d902     ...q.`...q.`...q
    cb68:	d9016002 60017104 8810a000 30021104     .`...q.`.......0
    cb78:	61087106 c0006108 0000ffff 91003811     .q.a.a.......8..
    cb88:	ba00a000 7106d801 2a114801 6001611f     .......q.H.*.a.`
    cb98:	72f6d801 72f63801 c200a000 a801c020     ...r.8.r.... ...
    cba8:	59111224 73122921 710e2100 c038c200     $..Y!).s.!.q..8.
    cbb8:	1224a801 29212101 b002a000 7114d820     ..$..!!).... ..q
    cbc8:	1ea8c000 1004a000 7945b902 11609806     ..........Ey..`.
    cbd8:	b00370ea 7208789f a806b800 9806f800     .p...x.r........
    cbe8:	c50006a2 a0001f74 4d048850 c000bc1c     ....t...P..M....
    cbf8:	a0001eac d9011181 7c40711e 15019500     .........q@|....
    cc08:	88504d1c bbff4d04 5b316318 98061104     .MP..M...c1[....
    cc18:	29310cba 980675f8 155417ba 18ca9806     ..1).u....T.....
    cc28:	7208d901 06bc9806 98067006 bb1c0732     ...r.....p..2...
    cc38:	95007b54 9806f800 700e07aa 0a809806     T{.........p....
    cc48:	07aa9806 104a9806 066c9806 c0001921     ......J...l.!...
    cc58:	a801402c 7809780a b910f800 9806ba01     ,@...x.x........
    cc68:	980611f2 c5000f24 a0001f74 1291f800     ....$...t.......
    cc78:	b91c3203 1e9cc300 1334a000 40b0c400     .2........4....@
    cc88:	b81d4400 79707842 7106de03 703e7844     .D..Bxpy...qDx>p
    cc98:	10a17971 710ad820 06bc9806 0e689802     qy.. ..q......h.
    cca8:	711cdb80 7218d802 1408b805 301010a1     ...q...r.......0
    ccb8:	14084802 1408b800 60081091 b81d1408     .H.........`....
    ccc8:	10a17862 7606dc00 ba007951 31201191     bx.....vQy.... 1
    ccd8:	1091611d 720ed804 1f40c100 1114a000     .a.....r..@.....
    cce8:	710ad901 98068820 92000f4a 4020c100     ...q ...J..... @
    ccf8:	3305a800 72184b05 de034c08 4c907104     ...3.K.r.L...q.L
    cd08:	c3001444 00001fff 23ff3b41 49941138     D.......A;.#8..I
    cd18:	4138c300 1334a801 db806308 ba03710c     ..8A..4..c...q..
    cd28:	98066218 70080e50 98066218 490c0e50     .b..P..p.b..P..I
    cd38:	79097908 40211014 a0001108 9806bd00     .y.y..!@........
    cd48:	b9100240 7104dc03 ba01b900 11f29806     @......q........
    cd58:	7106d902 724e4000 6118b103 9806310f     ...q.@Nr...a.1..
    cd68:	d8ff0f72 10817228 7118d808 710add06     r...(r.....q...q
    cd78:	02409806 720cdc03 0fb69806 12389806     ..@....r......8.
    cd88:	dd06700c 98067110 70480fbc a804b820     .p...q....Hp ...
    cd98:	7210dd06 07aa9806 066c9806 b840f801     ...r......l...@.
    cda8:	f800a804 1e9cc000 1304a000 db016308     .............c..
    cdb8:	10917122 61181101 b91d3811 7108d810     "q.....a.8.....q
    cdc8:	98027944 db020e68 13a172fa 72f4db28     Dy..h....r..(..r
    cdd8:	9806bd03 98060f18 c50007aa a0001f78     ............x...
    cde8:	02409806 dc03ba00 4d047204 2d211554     ..@......r.MT.!-
    cdf8:	04c29806 07c49802 55011091 50513503     ...........U.5QP
    ce08:	a0001901 1f3cc100 1014a000 7142d801     ......<.......Bq
    ce18:	60084801 750e20fe d8201081 c1007108     .H.`. .u.. ..q..
    ce28:	a0001f40 d9011114 c0007128 a801402c     @.......(q..,@..
    ce38:	51211204 310f6108 52116118 c0001028     ..!Q.a.1.a.R(...
    ce48:	a8014008 12911104 31205121 19215211     .@......!Q 1.R!.
    ce58:	1381a000 7206db80 a000b801 c014c300     .......r........
    ce68:	1034a801 722e3006 12344b6c 10344b1c     ..4..0.rlK4..K4.
    ce78:	30026018 10817220 71ded880 4a011034     .`.0 r.....q4..J
    ce88:	60046208 50213080 710a488c 234d237f     .b.`.0!P.H.q.#M#
    ce98:	30011034 bd00a000 0f189806 7847b81c     4..0..........Gx
    cea8:	78437845 7844b802 9806a000 980607aa     ExCx..Dx........
    ceb8:	c5000fb6 a0001f80 98061554 980204c2     ........T.......
    cec8:	c30007c4 4003c484 98067b01 c100122c     .......@.{..,...
    ced8:	a8014138 798f1114 c100710e a80040b8     8A.....y.q...@..
    cee8:	9806ba00 ba500e50 11fc9806 0f729806     ....P.P.......r.
    cef8:	712ed8ff d8041091 d920722c 12117224     ...q....,r .$r..
    cf08:	512132ff 21807120 14112180 11d69806     .2!Q q.!.!......
    cf18:	720e4440 c200b900 a0001ea4 70061218     @D.r...........p
    cf28:	7860b804 12269806 b900f800 40a4c200     ..`x..&........@
    cf38:	12184400 b90a4a64 ba1c1218 7a517a50     .D..dJ......PzQz
    cf48:	7942b91d a000795f 02409806 7210dc07     ..By_y....@....r
    cf58:	20001091 9806750a 9802104a 98060d86     ... .u..J.......
    cf68:	b901066c d8041091 b9007104 9806ba10     l........q......
    cf78:	ba0011f2 71344000 1e9cc000 1104a000     .....@4q........
    cf88:	d9016108 d9047112 108172e2 d8016008     .a...q...r...`..
    cf98:	b81d71da c1007864 a801c11c 04489806     .q..dx........H.
    cfa8:	6011b801 76042a00 9806ba00 c500104a     ...`.*.v....J...
    cfb8:	a0001f84 2d211554 06bc9806 1f88c500     ....T.!-........
    cfc8:	f800a000 1181bc00 7228d908 7232d980     ..........(r..2r
    cfd8:	ba10b901 11f29806 71064000 7022bc01     .........@.q.."p
    cfe8:	9806b900 b90011d2 1ea4c200 1218a000     ................
    cff8:	9806700a 98060fb6 b8201238 f800a804     .p......8. .....
    d008:	104a9806 31021181 b9007112 4014c200     ..J....1.q.....@
    d018:	12184400 b9024a24 98061218 c5000fb6     .D..$J..........
    d028:	a0001f8c 98061554 98021842 110407c4     ....T...B.......
    d038:	71142101 7a73ba1c 12042004 20041128     .!.q..sz. ..(.. 
    d048:	21011104 a00072f4 048c9806 1091f801     ...!.r..........
    d058:	7128d810 c11cc500 1154a801 0cba9806     ..(q......T.....
    d068:	1ebcc500 1554a000 75ea2951 7875b807     ......T.Q).u..ux
    d078:	7844b81d a804b801 10b1f800 d8106018     ..Dx.........`..
    d088:	c000712e 44004050 4008c300 1431a800     .q..P@.D...@..1.
    d098:	11444c98 61081134 71fad901 10281244     .LD.4..a...qD.(.
    d0a8:	10286208 10286208 10286208 980270e8     .b(..b(..b(..p..
    d0b8:	9806027a c000122c a0001ecc baff1304     z...,...........
    d0c8:	72044110 51314a20 51213a11 10385311     .A.r J1Q.:!Q.S8.
    d0d8:	98067036 3811025c 621e7204 c100bb02     6p..\..8.r.b....
    d0e8:	a0001ecc 39201114 1291720c 7206da10     ...... 9.r.....r
    d0f8:	a0007b41 122c9806 1e9cc200 1224a000     A{....,.......$.
    d108:	7204da20 ba1c7b61 a0007a52 7a72ba1c      ..ra{..Rz....rz
    d118:	da041281 a00072fc 786bb81c 4068c000     .....r....kx..h@
    d128:	782fa800 6310a000 7963b91e ec02b900     ../x...c..cy....
    d138:	4511cd00 cc00ec02 7106db01 16189802     ...E.......q....
    d148:	1141b803 21fa3107 2106761c da101291     ..A..1.!.v.!....
    d158:	dd027108 701e7210 9806b820 38300c66     .q...r.p ...f.08
    d168:	b8087214 04189806 402cc000 7829a800     .r........,@..)x
    d178:	f8007820 d8206005 98027106 ec0213b8      x...` ..q......
    d188:	b805ca00 7118da23 71dadb04 71d6da20     ....#..q...q ..q
    d198:	72d2da10 7861b81e da01b800 ec027206     ...r..ax.....r..
    d1a8:	1191c800 7126d910 1eb0c100 1114a000     ......&q........
    d1b8:	30ff5011 6107720c 501110a1 710a3002     .P.0.r.a...P.0.q
    d1c8:	720adb80 709eb80a 797cb91d 11916018     ...r...p..|y.`..
    d1d8:	11214011 401131c0 b81e1901 d9081141     .@!..1.@....A...
    d1e8:	78667104 7204d920 10a17865 7206d802     .qfx ..rex.....r
    d1f8:	711edac0 3127b81e 7208dd23 7210db10     ...q..'1#..r...r
    d208:	dd257860 dd21710a db087208 78627104     `x%..q!..r...qbx
    d218:	1141b803 72083107 352015a1 dd0271aa     ..A..1.r.. 5.q..
    d228:	11a17220 71a0d920 7216d902 7298dacc      r.. ..q...r...r
    d238:	d9401141 b8067292 725a4d05 16189802     A.@..r...MZr....
    d248:	49401121 714cd9c0 154131a0 65023540     !.@I..Lq.1A.@5.e
    d258:	61044151 da086308 da04721e 49107236     QA.a.c...r..6r.I
    d268:	350215a1 db107106 3401720e db08710a     ...5.q...r.4.q..
    d278:	b81e7122 32cc7867 301a1011 7208dc0a     "q..gx.2...0...r
    d288:	7104decc c00031fd 0d0c0f0d d8016021     ...q.1......!`..
    d298:	b807725c 12849802 1141ba00 710cd908     \r........A....q
    d2a8:	ca00ec02 da30b805 340772ec 610331f0     ......0..r.4.1.a
    d2b8:	7104da01 c0004901 e3a300f3 d8016021     ...q.I......!`..
    d2c8:	c00071d2 68401498 30406021 da404401     .q....@h!`@0.D@.
    d2d8:	4c207104 62023204 10114a20 601f3006     .q L.2.b J...0.`
    d2e8:	31184201 4211611d 12a29802 c0004a20     .B.1.a.B.... J..
    d2f8:	50081705 30116021 88204201 7152da0d     ...P!`.0.B ...Rq
    d308:	1bdec100 bc800125 7210da04 720ada08     ....%......r...r
    d318:	8420c100 24e00010 bbff24a0 43416308     .. ....$.$...cAC
    d328:	da016402 491e7106 c0004b02 a0001f14     .d...q.I.K......
    d338:	10386308 da0220bc b9017112 13a15911     .c8.. ...q...Y..
    d348:	7108db80 fc00c100 101801ff 15a49802     ...q............
    d358:	7c43bc1e 1e9cc400 1044a000 7170d880     ..C|......D...pq
    d368:	9806baef 920002de dadd6204 11a1728e     .........b...r..
    d378:	715cd905 4040c200 12244400 14282410     ..\q..@@.D$..$(.
    d388:	7206d901 7132d902 711ed940 ca00ec02     ...r..2q@..q....
    d398:	32181021 22fa7104 7204d820 22fe2208     !..2.q." ..r."."
    d3a8:	ec027508 70f8c800 710ed901 c800ec02     .u.....p...q....
    d3b8:	7206d902 7218dc04 1e9cc000 1004a000     ...r...r........
    d3c8:	d801601d b81e7106 b8077864 98027873     .`...q..dx..sx..
    d3d8:	10641618 1f94c600 b8c3a000 02469806     ..d...........F.
    d3e8:	1f34c400 ba14a000 b8001428 c0001a01     ..4.....(.......
    d3f8:	4003c484 10917801 19013010 9806ba05     ...@.x...0......
    d408:	d90211fc b8017106 c000a804 a0001e9c     .....q..........
    d418:	db801304 98027106 ba1d1246 db017a7c     .....q..F...|z..
    d428:	c200715e a0001f18 14111124 ec0234ff     ^q......$....4..
    d438:	24ffc800 610876fa 0c769806 38116104     ...$.v.a..v..a.8
    d448:	6104300f 11011411 98061041 d8010c76     .0.a....A...v...
    d458:	b8037208 12849802 db024a04 10247116     .r.......J...q$.
    d468:	28112811 0c8a9806 4020c200 20ffa800     .(.(...... @... 
    d478:	10411208 98066008 d8010c76 bc20717c     ..A..`..v...|q .
    d488:	71763310 c100bb00 a0001f14 21c01514     .3vq...........!
    d498:	12512c11 320f6218 8840710e 98061451     .,Q..b.2.q@.Q...
    d4a8:	43411634 12519400 621c6508 710e320f     4.AC..Q..e.b.2.q
    d4b8:	14511141 16349806 4341641c 3b516508     A.Q...4..dAC.eQ;
    d4c8:	1ed0c100 1114a000 10311211 7112300f     ..........1..0.q
    d4d8:	6105ba00 7104d801 60014211 72f4d80f     ...a...q.B.`...r
    d4e8:	60031031 7204301e 3a00b801 b8047208     1..`.0.r...:.r..
    d4f8:	12849802 14709802 4220c000 1104a801     ......p... B....
    d508:	d9306108 ba1d7206 98067a63 98060f5e     .a0..r..cz..^...
    d518:	f80002dc 88508830 710834ff 24ffec02     ....0.P..4.q...$
    d528:	ec0270f8 1014cd00 5051bb01 7104d8ff     .p........QP...q
    d538:	60084431 db10631f 210471f2 72e422ff     1D.`.c...q.!.".r
    d548:	95004c0f a0009300 1ea0c100 1114a000     .L..............
    d558:	8830a000 187a9806 61081181 7206d902     ..0...z....a...r
    d568:	17589802 7b55bb1c d9206108 98027106     ..X...U{.a ..q..
    d578:	88001748 10116108 16689806 15142108     H....a....h..!..
    d588:	7b5c25fc c1007b5d a8014008 31071114     .%\{]{...@.....1
    d598:	763021fe 722ad808 23fc1351 db041334     .!0v..*rQ..#4...
    d5a8:	63187120 5b3133ff c010c100 1114a800      q.c.31[........
    d5b8:	49806108 31ff710c 75602930 7b7bbb1c     .a.I.q.10)`u..{{
    d5c8:	7b7b701c dd007b7c 7b7d7104 1538bb01     .p{{|{...q}{..8.
    d5d8:	63181381 71063340 7b71bb07 135425ec     ...c@3.q..q{.%T.
    d5e8:	7154df00 df052504 15547154 88201121     ..Tq.%..TqT.!. .
    d5f8:	0cba9806 29519200 c100753e a8014008     ......Q)>u...@..
    d608:	db021114 3107710c 29315b31 700c762a     .....q.11[1)*v.p
    d618:	7208df04 d9806101 9806721e c0001668     ...r.a...r..h...
    d628:	a800c010 18be9806 16689806 d9ff1114     ..........h.....
    d638:	98027260 9000179e a0009300 11811554     `r..........T...
    d648:	d9106118 250872a6 71a0d808 d8102508     .a...r.%...q.%..
    d658:	8820719a 98061121 25fc0cba 2a111254     .q .!......%T..*
    d668:	115425f8 d820250c 25f07108 25101154     .%T..% ..q.%T..%
    d678:	76042920 15185921 98029200 b907170a      ).v!Y..........
    d688:	10817971 710ad810 7844b81c 7841b802     qy.....q..Dx..Ax
    d698:	7974b91c 7967b904 1081f800 7108d8a0     ..ty..gy.......q
    d6a8:	7949b91c 6008a000 71fad802 16689806     ..Iy...`...q..h.
    d6b8:	98068810 6210122c 7108da10 15142108     ....,..b...q.!..
    d6c8:	115425f0 2000c200 2920fffe 98067512     .%T.... .. ).u..
    d6d8:	d90118ca 9806720a 980607aa 9400066c     .....r......l...
    d6e8:	1041bb1c 9806200c 1141114e 10142108     ..A.. ..N.A..!..
    d6f8:	114e9806 11442831 61081211 32ff31ff     ..N.1(D....a.1.2
    d708:	52102201 61187210 24041418 24041344     .".R.r.a...$D..$
    d718:	700c1438 41216118 24081418 98021408     8..p.a!A...$....
    d728:	44401226 c1007114 a0001ea4 13511514     &.@D.q........Q.
    d738:	db0f631c 6519720c 04969806 a0001541     .c...r.e....A...
    d748:	066c9806 122c9806 1451bb08 18029806     ..l...,...Q.....
    d758:	25fc1544 98021554 b91c04c2 1e9cc300     D..%T...........
    d768:	1334a000 db086308 1381711a 7106dba0     ..4..c...q.....q
    d778:	70107949 63087969 7208db02 7967b904     Iy.piy.c...r..gy
    d788:	a000f800 61081181 7110d902 7975b91c     .......a...q..uy
    d798:	16689806 31ff1114 b9ffa000 1004a000     ..h....1........
    d7a8:	11142108 110821f4 1181a000 31106110     .!...!.......a.1
    d7b8:	9806710e 21081668 21f81114 a0001114     .q..h..!...!....

0000d7c8 <RAILINT_9d07dc039c08503d9a4b04a0473a0ca1>:
    d7c8:	00000638                                8...

0000d7cc <RAILINT_a5b12e51b7d2e4dad4875f46975d766b>:
    d7cc:	0000d8c8 00000000 0000d7e0 00000001     ................
    d7dc:	00000000                                ....

0000d7e0 <RAILINT_a8ac4f5ecc0fd75e96cfb9e308101400>:
    d7e0:	0000d7fc 8f596340 004c4b40 000b000b     ....@cY.@KL.....
    d7f0:	7fff001a 20000208 00000000              ....... ....

0000d7fc <RAILINT_804a208e3054dfe9908e7df194a25da6>:
    d7fc:	03011ffc 0000dbe8 00034040 00000000     ........@@......
    d80c:	00000000 000007a0 1001c01c 0007f800     ................
    d81c:	3001c01c 000802f5 0001c050 0c304187     ...0....P....A0.
    d82c:	01064024 0052c007 00000000 00000000     $@....R.........
    d83c:	03000000 00000000 00000000 01014058     ............X@..
    d84c:	00ff0264 01054080 08a0014b 744ac39b     d....@..K.....Jt
    d85c:	000003f0 00000000 00000000 010540ec     .............@..
    d86c:	8bd9a87d 00000000 07830464 3ac81388     }.......d......:
    d87c:	000a209c 01024124 00000000 00001003     . ..$A..........
    d88c:	010b413c 00000000 00000000 00000000     <A..............
	...
    d8a8:	00000001 00000000 00000000 00000000     ................
    d8b8:	00000000 0101423c 00000000 ffffffff     ....<B..........

0000d8c8 <RAILINT_6ee16ef72e3e4db6da213240f30a79f2>:
    d8c8:	0002400c 00148001 0000407f 00024020     .@.......@.. @..
	...
    d8e0:	00044030 00000000 00000000 00000000     0@..............
    d8f0:	00000000 00014050 00000000 0002405c     ....P@......\@..
	...
    d908:	000140a8 00000007 000440b4 00004000     .@.......@...@..
    d918:	00004cff 00004100 00004dff 0001c008     .L...A...M......
    d928:	00000000 0005c020 00004300 03b380ec     .... ....C......
    d938:	02a87543 00000000 0000022e 0003c054     Cu..........T...
    d948:	e6092d0e 08070654 0002b6d1 0008c064     .-..T.......d...
    d958:	00003004 06102040 1848f2c8 00f6e81f     .0..@ ....H.....
    d968:	15724bbd 0518a311 76543210 00000a98     .Kr......2Tv....
    d978:	0001c088 00000000 01010008 00000704     ................
    d988:	01010018 00000000 01010020 00008408     ........ .......
    d998:	0102401c 00000010 0413f920 0105405c     .@...... ...\@..
    d9a8:	00000841 00000001 000807b0 000000a7     A...............
    d9b8:	00000000 01074094 30100101 7f7f7050     .....@.....0Pp..
	...
    d9dc:	010240e0 00000033 00000000 01024100     .@..3........A..
    d9ec:	00206100 123556b7 0103410c 001254f9     .a ..V5..A...T..
    d9fc:	29043020 0040bb88 01034130 0c660664      0.)..@.0A..d.f.
    da0c:	0000010c 00fa53e8 01034168 07830464     .....S..hA..d...
    da1c:	00821388 00000000 01034230 00000000     ........0B......
    da2c:	0e000000 00000000 01014244 00000000     ........DB......
    da3c:	01018010 00000003 01028038 00104911     ........8....I..
    da4c:	00000001 01018088 00000000 0103809c     ................
    da5c:	000240eb 00037870 0000c0d5 110180a8     .@..px..........
    da6c:	000001f0 310180a8 01cb4205 110180ac     .......1.B......
    da7c:	000001f0 310180ac 008d2205 010280b0     .......1."......
    da8c:	02000300 01000037 02020088 04000c00     ....7...........
    da9c:	0000004c 02010094 00000400 020200d0     L...............
    daac:	0000000e 08960290 020100e4 0442093d     ............=.B.
    dabc:	020100f4 00000000 02010118 02510060     ............`.Q.
    dacc:	ffffffff                                ....

0000dad0 <RAILINT_85fc3dfd37d182d84c7a027087c71e73>:
    dad0:	0000d8c8 00000000 0000dae4 00000001     ................
    dae0:	00000000                                ....

0000dae4 <RAILINT_5b1b38b546c068c8c5887053bf18986e>:
    dae4:	0000db00 8f596340 004c4b40 000b000b     ....@cY.@KL.....
    daf4:	7fff001a 20000208 00000000              ....... ....

0000db00 <RAILINT_3fd0af819a0885f761a4f33c9c04ba27>:
    db00:	03011ffc 0000dc20 00034040 00000000     .... ...@@......
    db10:	00000000 000007a0 1001c01c 0007f800     ................
    db20:	3001c01c 00080214 0001c050 04304187     ...0....P....A0.
    db30:	01064024 00620007 00007038 00000000     $@....b.8p......
    db40:	03000000 0f016800 4024b840 01014058     .....h..@.$@X@..
    db50:	006900fc 01054080 11e06323 744ac39b     ..i..@..#c....Jt
    db60:	000003f0 00008003 00000abe 010540ec     .............@..
    db70:	8bd9a87d 00000b59 07830464 3ac81388     }...Y...d......:
    db80:	000a2090 01024124 00000000 00001e00     . ..$A..........
    db90:	010b413c 008c1400 28211a14 423b342e     <A........!(.4;B
    dba0:	55435049 0cba9876 00006928 00000001     IPCUv...(i......
    dbb0:	64282107 001a1714 69c80420 093a20a1     .!(d.... ..i. :.
    dbc0:	0101423c 00000029 ffffffff              <B..).......

0000dbcc <RAILINT_adc4b242e67ed46975dd24dd00c14b5e>:
    dbcc:	06013f19 00011004 06010100 00271000     .?............'.
    dbdc:	00000900 00000000 00000000              ............

0000dbe8 <RAILINT_a23820df1160f3a2050160d4072534e9>:
    dbe8:	00000008 00666666 00000000 0000dbcc     ....fff.........
    dbf8:	0000be8c 00000c00 009a1a00 02625a00     .............Zb.
    dc08:	001e8480 00002004 02504911 00000000     ..... ...IP.....
	...

0000dc20 <RAILINT_cf8a5313f70e326938ea5b6c0694851f>:
    dc20:	00000008 00666666 00000000 0000dbcc     ....fff.........
    dc30:	0000be98 00000000 009a1a00 02625a00     .............Zb.
    dc40:	001e8480 00002004 02504911 00000000     ..... ...IP.....
	...

0000dc58 <_ctype_>:
    dc58:	20202000 20202020 28282020 20282828     .         ((((( 
    dc68:	20202020 20202020 20202020 20202020                     
    dc78:	10108820 10101010 10101010 10101010      ...............
    dc88:	04040410 04040404 10040404 10101010     ................
    dc98:	41411010 41414141 01010101 01010101     ..AAAAAA........
    dca8:	01010101 01010101 01010101 10101010     ................
    dcb8:	42421010 42424242 02020202 02020202     ..BBBBBB........
    dcc8:	02020202 02020202 02020202 10101010     ................
    dcd8:	00000020 00000000 00000000 00000000      ...............
	...
